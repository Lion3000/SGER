{"version":3,"sources":["webpack:///./src/app/class/crud.ts","webpack:///./src/app/class/data/entity.ts","webpack:///./src/app/class/data/phase.ts","webpack:///./src/app/class/data/boat.ts","webpack:///./src/app/class/data/event.ts","webpack:///./src/app/class/data/penalty.ts","webpack:///./src/app/class/data/crew.ts","webpack:///./src/app/class/data/racer.ts","webpack:///./src/app/class/database.ts","webpack:///./src/app/class/data/flight.ts","webpack:///./src/app/class/data/match.ts","webpack:///./src/app/class/data/settings.ts","webpack:///./src/app/class/data/subscriber.ts","webpack:///./src/app/class/searchbar.ts","webpack:///./src/app/services/event.service.ts","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/crews-list/crews-list.component.ts","webpack:///./src/app/components/events-list/events-list.component.ts","webpack:///./src/app/components/guide/guide.component.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/phase/phase.component.ts","webpack:///./src/app/components/results-boat/results-boat.component.ts","webpack:///./src/app/components/results-subscriber/results-subscriber.component.ts","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/services/boat.service.ts","webpack:///./src/app/services/crew.service.ts","webpack:///./src/app/services/phase.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/app/services/subscriber.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/class/data/resultBoat.ts","webpack:///./src/app/class/data/resultSubscriber.ts","webpack:///./src/app/class/ucelaboratepairinglist.ts","webpack:///./src/app/class/ucmanagecrews.ts","webpack:///./src/app/class/ucorganizeevent.ts","webpack:///./src/app/class/ucorganizephase.ts","webpack:///./src/app/services/flight.service.ts","webpack:///./src/app/services/match.service.ts","webpack:///./src/app/services/penalty.service.ts","webpack:///./src/app/services/racer.service.ts","webpack:///./src/app/services/result-boat.service.ts","webpack:///./src/app/services/result-subscriber.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/crews-list/crews-list.component.css","webpack:///./src/app/components/events-list/events-list.component.css","webpack:///./src/app/components/guide/guide.component.css","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/phase/phase.component.css","webpack:///./src/app/components/results-boat/results-boat.component.css","webpack:///./src/app/components/results-subscriber/results-subscriber.component.css","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/crews-list/crews-list.component.html","webpack:///./src/app/components/events-list/events-list.component.html","webpack:///./src/app/components/guide/guide.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/phase/phase.component.html","webpack:///./src/app/components/results-boat/results-boat.component.html","webpack:///./src/app/components/results-subscriber/results-subscriber.component.html","webpack:///./src/app/components/settings/settings.component.html"],"names":[],"mappings":"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89b","file":"main.bundle.js","sourcesContent":["/**\n* \\file crud.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-05 19:47:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { DataBase } from './database';\n\n/**\n * \\class CRUD\n * \\brief Create / Read / Update / Delete\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-05 19:47:00 +0100\n */\nexport abstract class CRUD extends DataBase {\n  private currentID: {ref: number};\n\n  /**\n   * \\fn    constructor();\n   * \\brief Créer une entité\n   * \\param[in] entity L'entité qui doit être créé\n   */\n  constructor(divID: string, table: string, tableName: string){\n    super(divID,table);\n    this.currentID = {ref: 0};\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = 'SELECT MAX(id) as currentID FROM '+tableName;\n    if(!document.getElementById(tableName+'CurrentID'))\n      document.getElementById(\"data\").innerHTML += '<div id=\"'+tableName+'CurrentID'+'\" style=\"background-color: orange; margin: 10px;\"></div>';\n    this.readDB(requestSQL, this.currentID, this.updateCurrentID, tableName+'CurrentID');\n  }\n\n  /**\n   * \\fn    create();\n   * \\brief Créer une entité\n   * \\param[in] entity L'entité qui doit être créé\n   */\n  public abstract create(entity: any): void;\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les entités\n   * \\param entitys La liste des entités\n   */\n  public abstract read(entitys: any);\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'entité\n   * \\param entity Une Entité\n   * \\param dataID Le de la div de stockage\n   */\n  protected abstract applyResult(entity: {ref: any}, dataID: string);\n  \n  /**\n   * \\fn    update();\n   * \\brief Mets à jour l'entité\n   * \\param[in] entity L'entité qui doit être mise à jour\n   */\n  public abstract update(entity: any): void;\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'entité\n   * \\param[in] entity L'entité qui doit être supprimé\n   */\n  public abstract delete(entity: any): void;\n\n  /**\n   * \\fn    getNewID();\n   * \\brief Supprime l'entité\n   * \\param[in] entity L'entité qui doit être supprimé\n   */\n  public getNewID(): number{\n    this.currentID.ref = this.currentID.ref + 1;\n    return this.currentID.ref;\n  }\n\n  /**\n   * \\fn    updateCurrentID();\n   * \\brief Recuperation de la donnée dans la div et met à jour currentID\n   * \\param currentID L'identifiant courant\n   * \\param[in] divID Le nom de la div de stockage\n   */\n  private updateCurrentID(currentID: {ref: number}, divID: string){\n    currentID.ref = JSON.parse(document.getElementById(divID).innerHTML)[0].currentID;\n    document.getElementById(divID).innerHTML = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/crud.ts","/**\n* \\file entity.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-01 10:17:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n\n/**\n * \\class Entity\n * \\brief Représentation général de l'entité\n * \\version $Rev 2$\n * \\date 2017-04-01 10:17:00 +0100\n */\nexport abstract class Entity {\n  protected id: number;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise l'attribut de l'entité\n   * \\param[in] id L'identifiant de l'entité\n   */\n  constructor(id: number) {\n    this.id = id;\n  }\n\n  /**\n   * \\fn     getId();\n   * \\brief Assesseur de l'attribut id\n   * \\return id Retourne l'identifiant de l'entité\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * \\fn     setId();\n   * \\brief Mutateur de l'attribut id\n   * \\param[in] id L'identifiant de l'entité\n   */\n  public setId(id: number): void {\n    this.id = id;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/entity.ts","/**\n* \\file phase.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 13:35:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\nimport { Flight } from './flight';\n\n/**\n * \\class Phase\n * \\brief Représentation d'une phase\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 13:35:00 +0100\n */\nexport class Phase extends Entity {\n  private name: string;\n  private roundRobin: boolean;\n  private flightsList: Flight[];\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs d'une phase\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] name Le nom de la phase\n   * \\param[in] roundRobin Indication si c'est un RoundRobin\n   * \\param[in] flightsList La liste des flights dans la phase\n   */\n  constructor(id: number, name: string, roundRobin: boolean, flightsList: Flight[]) {\n    super(id); // Appel du constructeur Entity\n    this.name = name;\n    this.roundRobin = roundRobin;\n    this.flightsList = flightsList;\n  }\n\n  /**\n   * \\fn     getName();\n   * \\brief Assesseur de l'attribut name\n   * \\return name Retourne le nom de la phase\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * \\fn     setName();\n   * \\brief Mutateur de l'attribut name\n   * \\param[in] name Le nom de la phase\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * \\fn     getRoundRobin();\n   * \\brief Assesseur de l'attribut roundRobin\n   * \\return roundRobin Retourne le nom de la phase\n   */\n  public getRoundRobin(): boolean {\n    return this.roundRobin;\n  }\n\n  /**\n   * \\fn     setRoundRobin();\n   * \\brief Mutateur de l'attribut roundRobin\n   * \\param[in] roundRobin Indication si c'est un RoundRobin\n   */\n  public setRoundRobin(roundRobin: boolean): void {\n    this.roundRobin = roundRobin;\n  }\n\n  /**\n   * \\fn     getFlightsList();\n   * \\brief Assesseur de l'attribut flightsList\n   * \\return flightsList Retourne la liste des flights dans la phase\n   */\n  public getFlightsList(): Flight[] {\n    return this.flightsList;\n  }\n\n  /**\n   * \\fn     setFlightsList();\n   * \\brief Mutateur de l'attribut flightsList\n   * \\param[in] flightsList La liste des flights dans la phase\n   */\n  public setFlightsList(flightsList: Flight[]): void {\n    this.flightsList = flightsList;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/phase.ts","/**\n* \\file boat.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 11:50:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\n\n/**\n * \\class Boat\n * \\brief Représentation d'un bateau\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 11:50:00 +0100\n */\nexport class Boat extends Entity {\n  boatNumber: number;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs du bateau\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] boatNumber Le numero du bateau\n   */\n  constructor(id: number, boatNumber: number ) {\n    super(id);\n    this.boatNumber = boatNumber;\n  }\n\n  /**\n   * \\fn     getBoatNumber();\n   * \\brief Assesseur de l'attribut name\n   * \\return boatNumber Retourne le numero du bateau\n   */\n  public getBoatNumber(): number {\n    return this.boatNumber;\n  }\n\n  /**\n   * \\fn     setBoatNumber();\n   * \\brief Mutateur de l'attribut boatNumber\n   * \\param[in] boatNumber Le numero du bateau\n   */\n  public setBoatNumber(value: number): void {\n    this.boatNumber = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/boat.ts","/**\n* \\file event.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 11:20:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\nimport { Crew } from './crew';\nimport { Subscriber } from './subscriber';\nimport { Boat } from './boat';\nimport { Phase } from './phase';\n\n/**\n * \\class Event\n * \\brief Représentation d'une épreuve\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 11:20:00 +0100\n */\nexport class Event extends Entity {\n  private name: string;\n  private organization: string;\n  private location: string;\n  private ranking: number;\n  private numberBoats: number;\n  private date: string;\n\n  private subscribers: Subscriber[];\n  private phasesList: Phase[];\n  private boatsList: Boat[];\n  private timeManagement: boolean;\n  private hiddenContent: boolean;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs de l'épreuve\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] name Le nom de l'épreuve\n   * \\param[in] organization Le nom de l'organisation qui réalise l'épreuve\n   * \\param[in] location Lieu de déroulement de l'épreuve\n   * \\param[in] ranking Le grade de l'épreuve\n   * \\param[in] numberBoats Le nombre de bateaux dans l'épreuve\n   * \\param[in] date La date de déroulement du l'épreuve\n   * \\param[in] subscribers La liste des participants de l'épreuve\n   * \\param[in] phasesList La liste des phases de l'épreuve\n   * \\param[in] timeManagement Inclusion du gestionnaire de départ\n   */\n  constructor(id: number, name: string, organization: string, location: string, ranking: number, numberBoats: number, date: string,\n              subscribers: Subscriber[], phasesList: Phase[], timeManagement: boolean\n  ) {\n    super(id); // Appel du constructeur Entity\n    this.name = name;\n    this.organization = organization;\n    this.location = location;\n    this.ranking = ranking;\n    this.numberBoats = numberBoats;\n    this.date = date;\n    this.subscribers = subscribers;\n    this.phasesList = phasesList;\n    this.boatsList = [];\n    this.timeManagement = timeManagement;\n    this.hiddenContent = true;\n  }\n\n  /**\n   * \\fn     getName();\n   * \\brief Assesseur de l'attribut name\n   * \\return name Retourne le nom de l'épreuve\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * \\fn     setName();\n   * \\brief Mutateur de l'attribut name\n   * \\param[in] name Le nom de l'épreuve\n   */\n  public setName(value: string): void {\n    this.name = value;\n  }\n\n  /**\n   * \\fn     getOrganization();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation qui réalise l'épreuves\n   */\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  /**\n   * \\fn     setOrganization();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation qui réalise l'épreuve\n   */\n  public setOrganization(value: string): void {\n    this.organization = value;\n  }\n\n  /**\n   * \\fn     getLocation();\n   * \\brief Assesseur de l'attribut location\n   * \\return location Retourne le lieu de déroulement de l'épreuve\n   */\n  public getLocation(): string {\n    return this.location;\n  }\n\n  /**\n   * \\fn     setLocation();\n   * \\brief Mutateur de l'attribut location\n   * \\param[in] location Lieu de déroulement de l'épreuve\n   */\n  public setLocation(value: string): void {\n    this.location = value;\n  }\n\n  /**\n   * \\fn     getRanking();\n   * \\brief Assesseur de l'attribut ranking\n   * \\return ranking Retourne le grade de l'épreuve\n   */\n  public getRanking(): number {\n    return this.ranking;\n  }\n\n  /**\n   * \\fn     setRanking();\n   * \\brief Mutateur de l'attribut ranking\n   * \\param[in] ranking Le grade de l'épreuve\n   */\n  public setRanking(value: number): void {\n    this.ranking = value;\n  }\n\n  /**\n   * \\fn     getNumberBoats();\n   * \\brief Assesseur de l'attribut numberBoats\n   * \\return numberBoats Retourne le nombre de bateaux dans l'épreuve\n   */\n  public getNumberBoats(): number {\n    return this.numberBoats;\n  }\n\n  /**\n   * \\fn     setNumberBoats();\n   * \\brief Mutateur de l'attribut numberBoats\n   * \\param[in] numberBoats Le nombre de bateaux dans l'épreuve\n   */\n  public setNumberBoats(value: number): void {\n    this.numberBoats = value;\n  }\n\n  /**\n   * \\fn     getDate();\n   * \\brief Assesseur de l'attribut date\n   * \\return date Retourne la date du déroulement de l'épreuve\n   */\n  public getDate(): string {\n    return this.date;\n  }\n\n  /**\n   * \\fn     setDate();\n   * \\brief Mutateur de l'attribut date\n   * \\param[in] date La date du déroulement de l'épreuve\n   */\n  public setDate(value: string): void {\n    this.date = value;\n  }\n\n  /**\n   * \\fn     getSubscriberss();\n   * \\brief Assesseur de l'attribut subscribers\n   * \\return subscribers Retourne la liste des participants de l'épreuve\n   */\n  public getSubscribers(): Subscriber[] {\n    return this.subscribers;\n  }\n\n  /**\n   * \\fn     setSubscribers();\n   * \\brief Mutateur de l'attribut subscribers\n   * \\param[in] subscribers Le nom de l'épreuve\n   */\n  public setSubscribers(value: Subscriber[]): void {\n    this.subscribers = value;\n  }\n\n  /**\n   * \\fn     getPhasesList();\n   * \\brief Assesseur de l'attribut phasesList\n   * \\return phasesList Retourne la liste des phases de l'épreuve\n   */\n  public getPhasesList(): Phase[] {\n    return this.phasesList;\n  }\n\n  /**\n   * \\fn     setPhasesList();\n   * \\brief Mutateur de l'attribut phasesList\n   * \\param[in] phasesList La liste des phases de l'épreuve\n   */\n  public setPhasesList(value: Phase[]): void {\n    this.phasesList = value;\n  }\n\n  /**\n   * \\fn     getBoatsList();\n   * \\brief Assesseur de l'attribut boatsList\n   * \\return boatsList Retourne la liste des bateaux\n   */\n  public getBoatsList(): Boat[] {\n    return this.boatsList;\n  }\n\n  /**\n   * \\fn     setBoatsList();\n   * \\brief Mutateur de l'attribut boatsList\n   * \\param[in] boatsList La liste des bateaux\n   */\n  public setBoatsList(value: Boat[]): void {\n    this.boatsList = value;\n  }\n\n  /**\n   * \\fn     getTimeManagement();\n   * \\brief Assesseur de l'attribut timeManagement\n   * \\return phasesList Retourne l'état inclusion du gestionnaire de départ\n   */\n  public getTimeManagement(): boolean {\n    return this.timeManagement;\n  }\n\n  /**\n   * \\fn     setTimeManagement();\n   * \\brief Mutateur de l'attribut phasesList\n   * \\param[in] timeManagement Inclusion du gestionnaire de départ\n   */\n  public setTimeManagement(value: boolean): void {\n    this.timeManagement = value;\n  }\n\n  /**\n   * \\fn     getHiddenContent();\n   * \\brief Assesseur de l'attribut hiddenContent\n   * \\return hiddenContent Retourne l'état d'affichage du contenu\n   */\n  public getHiddenContent(): boolean {\n    return this.hiddenContent;\n  }\n\n  /**\n   * \\fn     setHiddenContent();\n   * \\brief Mutateur de l'attribut hiddenContent\n   * \\param[in] hiddenContent L'état d'affichage du contenu\n   */\n  public setHiddenContent(value: boolean): void {\n    this.hiddenContent = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/event.ts","/**\n* \\file penalty.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 18:19:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\n\n/**\n * \\class Racer\n * \\brief Représentation d'une pénalité\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 18:19:00 +0100\n */\nexport class Penalty extends Entity {\n  private points: number;\n  private detail: string;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs de la pénalité\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] points Les points de pénalité\n   * \\param[in] detail Le détail de la pénalité\n   */\n  constructor(id: number, points: number, detail: string) {\n    super(id); // Appel du constructeur Entity\n    this.points = points;\n    this.detail = detail;\n  }\n\n  /**\n   * \\fn     getPoints();\n   * \\brief Assesseur de l'attribut points\n   * \\return points Retourne les points de pénalité\n   */\n  public getPoints(): number {\n    return this.points;\n  }\n\n  /**\n   * \\fn     setPoints();\n   * \\brief Mutateur de l'attribut points\n   * \\param[in] points Les points de pénalité\n   */\n  public setPoints(value: number): void {\n    this.points = value;\n  }\n\n  /**\n   * \\fn     getDetail();\n   * \\brief Assesseur de l'attribut detail\n   * \\return detail Retourne le détail de la pénalité\n   */\n  public getDetail(): string {\n    return this.detail;\n  }\n\n  /**\n   * \\fn     setDetail();\n   * \\brief Mutateur de l'attribut detail\n   * \\param[in] detail Le détail de la pénalité\n   */\n  public setDetail(value: string): void {\n    this.detail = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/penalty.ts","/**\n* \\file crew.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-01 10:31:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\n\n/**\n * \\class Crew\n * \\brief Représentation d'un équipage\n * \\author Zarzitski\n * \\version $Rev 2$\n * \\date 2017-04-01 10:31:00 +0100\n */\nexport class Crew extends Entity {\n  private name: string;\n  private country: string;\n  private isaf: string;\n  private ranking: number;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs de l'équipage\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] name Le nom de l'équipage\n   * \\param[in] country Le pays de l'équipage\n   * \\param[in] isaf Le code ISAF de l'équipage\n   * \\param[in] ranking Le classement de l'équipage\n   */\n  constructor(id: number, name: string, country: string, isaf: string, ranking: number) {\n    super(id); // Appel du constructeur Entity\n    this.name = name;\n    this.country = country;\n    this.isaf = isaf;\n    this.ranking = ranking;\n  }\n\n  /**\n   * \\fn     getName();\n   * \\brief Assesseur de l'attribut name\n   * \\return name Retourne le nom de l'équipage\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * \\fn     setName();\n   * \\brief Mutateur de l'attribut name\n   * \\param[in] name Le nom de l'équipage\n   */\n  public setName(value: string): void {\n    this.name = value;\n  }\n\n  /**\n   * \\fn     getCountry();\n   * \\brief Assesseur de l'attribut country\n   * \\return country Retourne le pays de l'équipage\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n   /**\n   * \\fn     setCountry();\n   * \\brief Mutateur de l'attribut country\n   * \\param[in] country Le pays de l'équipage\n   */\n  public setCountry(value: string): void {\n    this.country = value;\n  }\n\n  /**\n   * \\fn     getIsaf();\n   * \\brief Assesseur de l'attribut isaf\n   * \\return isaf Retourne le code ISAF de l'équipage\n   */\n  public getIsaf(): string {\n    return this.isaf;\n  }\n\n   /**\n   * \\fn     setIsaf();\n   * \\brief Mutateur de l'attribut isaf\n   * \\param[in] isaf Le code ISAF de l'équipage\n   */\n  public setIsaf(value: string): void {\n    this.isaf = value;\n  }\n\n  /**\n   * \\fn     getRanking();\n   * \\brief Assesseur de l'attribut ranking\n   * \\return ranking Retourne le classement de l'équipage\n   */\n  public getRanking(): number {\n    return this.ranking;\n  }\n\n  /**\n   * \\fn     setRanking();\n   * \\brief Mutateur de l'attribut ranking\n   * \\param[in] ranking Le classement de l'équipage\n   */\n  public setRanking(value): void {\n    this.ranking = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/crew.ts","/**\n* \\file penalty.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 17:48:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Subscriber } from './subscriber';\nimport { Boat } from './boat';\nimport { Penalty } from './penalty';\n\n/**\n * \\class Racer\n * \\brief Représentation d'un coureur\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 17:48:00 +0100\n */\nexport class Racer extends Subscriber {\n  private points: number;\n  private boat: {ref: Boat};\n  private penalty: Penalty;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs du coureur\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] points Les points du coureur\n   * \\param boat Le bateau du coureur\n   * \\param[in] penalty La pénalité du coureur\n   */\n  constructor(id: number, name: string, country: string, isaf: string, ranking: number, letter: string,\n              points: number, boat: {ref: Boat}, penalty: Penalty\n  ) {\n    super(id, name, country, isaf, ranking, letter); // Appel du constructeur Crew\n    this.points = points;\n    this.boat = boat;\n    this.penalty = penalty;\n  }\n\n  /**\n   * \\fn     getPoints();\n   * \\brief Assesseur de l'attribut points\n   * \\return points Retourne les points du coureur\n   */\n  public getPoints(): number {\n    return this.points;\n  }\n\n  /**\n   * \\fn     setPoints();\n   * \\brief Mutateur de l'attribut points\n   * \\param[in] points Les points du coureur\n   */\n  public setPoints(value: number): void {\n    this.points = value;\n  }\n\n  /**\n   * \\fn     getBoat();\n   * \\brief Assesseur de l'attribut boat\n   * \\return boat Retourne le bateau du coureur\n   */\n  public getBoat(): Boat {\n    return this.boat.ref;\n  }\n\n  /**\n   * \\fn     setBoat();\n   * \\brief Mutateur de l'attribut boat\n   * \\param boat Le bateau du coureur\n   */\n  public setBoat(value: {ref: Boat}): void {\n    this.boat = value;\n  }\n\n  /**\n   * \\fn     getPenalty();\n   * \\brief Assesseur de l'attribut penalty\n   * \\return penalty Retourne la pénalité du coureur\n   */\n  public getPenalty(): Penalty {\n    return this.penalty;\n  }\n\n  /**\n   * \\fn     setPenalty();\n   * \\brief Mutateur de l'attribut penalty\n   * \\param[in] penalty La pénalité du coureur\n   */\n  public setPenalty(value: Penalty): void {\n    this.penalty = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/racer.ts","/**\n* \\file database.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-05 19:47:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"./requestSQL.ts\" />\ndeclare var SQLite;\ndeclare const TIME_TO_WAIT;\n\n/**\n * \\class DataBase\n * \\brief Base de données SQLite\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-11 21:54:00 +0100\n */\nexport class DataBase {\n  private table: string\n  private dataID: string\n  protected divID: string;\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs, crée la table SQL s'il n'existe pas et crée la div de stockage des chênes JSON\n   * \\param[in] dataID Le nom du service\n   * \\param[in] table La requéte qui crée la table SQL s'il n'existe pas\n   */\n  constructor(dataID: string, table: string){\n    this.table = table;\n    this.dataID = dataID;\n    this.writeDB([ this.table, [] ]);\n    if(!document.getElementById(this.dataID))\n      document.getElementById(\"data\").innerHTML += '<div id=\"'+this.dataID+'\" style=\"background-color: orange; margin: 10px;\"></div>';\n  }\n\n  /**\n   * \\fn     readDB();\n   * \\brief Stock dans une div les données extréte de la base de donnée selon la requête\n   * \\param[in] request La requête à exécuter\n   * \\param[in] entitys La liste des entités à modifier\n   * \\param[in] applyResult La fonction qui doit être lancée à la fin du chargement\n   * \\param[in] divID\n   */\n  public readDB(request: RequestSQL, entitys: {ref: any}, applyResult, divID: string): void {\n    SQLite.read(request, divID);\n    this.waitResult(this.waitResult, divID, entitys, applyResult);\n  }\n\n  /**\n   * \\fn     writeDB();\n   * \\brief Créer la table SQL si elle nexiste pas et exécute la requête\n   * \\param[in] request La requête à exécuter\n   */\n  public writeDB(request: any): void {\n    SQLite.write(this.table, request);\n  }\n\n  /**\n   * \\fn     waitResult();\n   * \\brief La fonction qui s'appelle de façon récurrente jusqu'à la détection des données dans la div, puis elle exécute la fonction passée dans les paramètres\n   * \\param[in] waitResult La fonction elle-même\n   * \\param[in] divID\n   * \\param[in] entitys La liste des entités à modifier\n   * \\param[in] applyResult La fonction qui doit être lancée à la fin du chargement\n   */\n  private waitResult(waitResult, divID: string, entitys: any, applyResult){\n    if(document.getElementById(divID).innerHTML == ''){\n      setTimeout(waitResult.bind(null, waitResult, divID, entitys, applyResult), TIME_TO_WAIT);\n    }\n    else{\n      applyResult(entitys, divID);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/database.ts","/**\n* \\file flight.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 14:20:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\nimport { Match } from './match';\n\n/**\n * \\class Flight\n * \\brief Représentation d'un fligth\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 14:20:00 +0100\n */\nexport class Flight extends Entity {\n  private flightNumber: number;\n  private matchsList: Match[];\n  private startDateTime: string;\n  private hiddenContent: boolean;\n  private blueSubscriberId: number;\n  private yellowSubscriberId: number;\n  private blueBoatId: number;\n  private yellowBoatId: number;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs d'un flight\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] flightNumber Le numero du flight\n   * \\param[in] matchsList La liste des matchs dans le fligth\n   * \\param[in] startDateTime Le debut de la course\n   */\n  constructor(id: number, flightNumber: number, matchsList: Match[], startDateTime: string) {\n    super(id); // Appel du constructeur Entity\n    this.flightNumber = flightNumber;\n    this.matchsList = matchsList;\n    this.startDateTime = startDateTime;\n    this.blueSubscriberId = 0;\n    this.blueBoatId = 0;\n    this.yellowSubscriberId = 0;\n    this.yellowBoatId = 0;\n  }\n\n  /**\n   * \\fn     getFlightNumber();\n   * \\brief Assesseur de l'attribut flightNumber\n   * \\return flightNumber Retourne le numero du flight\n   */\n  public getFlightNumber(): number {\n    return this.flightNumber;\n  }\n\n  /**\n   * \\fn     setFlightNumber();\n   * \\brief Mutateur de l'attribut flightNumber\n   * \\param[in] flightNumber Le numero du flight\n   */\n  public setFlightNumber(flightNumber: number): void {\n    this.flightNumber = flightNumber;\n  }\n\n  /**\n   * \\fn     getMatchsList();\n   * \\brief Assesseur de l'attribut matchsList\n   * \\return matchsList Retourne la liste des matches dans le fligth\n   */\n  public getMatchsList(): Match[] {\n    return this.matchsList;\n  }\n\n  /**\n   * \\fn     setMatchsList();\n   * \\brief Mutateur de l'attribut matchsList\n   * \\param[in] matchsList La liste des matches dans le fligth\n   */\n  public setMatchsList(matchsList: Match[]): void {\n    this.matchsList = matchsList;\n  }\n\n  /**\n   * \\fn     getStartDateTime();\n   * \\brief Assesseur de l'attribut matchesList\n   * \\return matchesList Retourne le debut de la course\n   */\n  public getStartDateTime(): string {\n    return this.startDateTime;\n  }\n\n  /**\n   * \\fn     setStartDateTime();\n   * \\brief Mutateur de l'attribut startDateTime\n   * \\param[in] startDateTime Le debut de la course\n   */\n  public setStartDateTime(startDateTime: string): void {\n    this.startDateTime = startDateTime;\n  }\n\n  /**\n   * \\fn     getHiddenContent();\n   * \\brief Assesseur de l'attribut hiddenContent\n   * \\return hiddenContent Retourne l'état d'affichage du contenu\n   */\n  public getHiddenContent(): boolean {\n    return this.hiddenContent;\n  }\n\n  /**\n   * \\fn     setHiddenContent();\n   * \\brief Mutateur de l'attribut hiddenContent\n   * \\param[in] hiddenContent L'état d'affichage du contenu\n   */\n  public setHiddenContent(value: boolean): void {\n    this.hiddenContent = value;\n  }\n\n  /**\n   * \\fn     getBlueSubscriberId();\n   * \\brief Assesseur de l'attribut blueSubscriberId\n   * \\return blueSubscriberId Retourne l'identifiant du participant bleu sélectionné\n   */\n  public getBlueSubscriberId(): number {\n    return this.blueSubscriberId;\n  }\n\n  /**\n   * \\fn     setBlueSubscriberId();\n   * \\brief Mutateur de l'attribut blueSubscriberId\n   * \\param[in] blueSubscriberId L'identifiant du participant bleu sélectionné\n   */\n  public setBlueSubscriberId(blueSubscriberId: number): void {\n    this.blueSubscriberId = blueSubscriberId;\n  }\n\n  /**\n   * \\fn     getBlueBoatId();\n   * \\brief Assesseur de l'attribut blueBoatId\n   * \\return blueBoatId Retourne l'identifiant du bateau bleu sélectionné\n   */\n  public getBlueBoatId(): number {\n    return this.blueBoatId;\n  }\n\n  /**\n   * \\fn     setBlueBoatId();\n   * \\brief Mutateur de l'attribut blueBoatId\n   * \\param[in] blueBoatId L'identifiant du bateau bleu sélectionné\n   */\n  public setBlueBoatId(blueBoatId: number): void {\n    this.blueBoatId = blueBoatId;\n  }\n\n  /**\n   * \\fn     getYellowSubscriberId();\n   * \\brief Assesseur de l'attribut yellowSubscriberId\n   * \\return yellowSubscriberId Retourne l'identifiant du participant jaune sélectionné\n   */\n  public getYellowSubscriberId(): number {\n    return this.yellowSubscriberId;\n  }\n\n  /**\n   * \\fn     setYellowSubscriberId();\n   * \\brief Mutateur de l'attribut yellowSubscriberId\n   * \\param[in] yellowSubscriberId L'identifiant du participant jaune sélectionné\n   */\n  public setYellowSubscriberId(yellowSubscriberId: number): void {\n    this.yellowSubscriberId = yellowSubscriberId;\n  }\n\n  /**\n   * \\fn     getYellowBoatId();\n   * \\brief Assesseur de l'attribut yellowBoatId\n   * \\return yellowBoatId Retourne l'identifiant du bateau jaune sélectionné\n   */\n  public getYellowBoatId(): number {\n    return this.yellowBoatId;\n  }\n\n  /**\n   * \\fn     setYellowBoatId();\n   * \\brief Mutateur de l'attribut yellowBoatId\n   * \\param[in] yellowBoatId L'identifiant du bateau jaune sélectionné\n   */\n  public setYellowBoatId(yellowBoatId: number): void {\n    this.yellowBoatId = yellowBoatId;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/flight.ts","/**\n* \\file match.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 17:15:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Entity } from './entity';\nimport { Racer } from './racer';\n\n/**\n * \\class Match\n * \\brief Représentation d'un match\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 17:15:00 +0100\n */\nexport class Match extends Entity {\n  private blue: Racer;\n  private yellow: Racer;\n  private locked: boolean;\n  private finishDateTime: string;\n  private blueSubscriberId: number;\n  private yellowSubscriberId: number;\n  private blueBoatId: number;\n  private yellowBoatId: number;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs de l'équipage\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] blue Le coureur bleu du match\n   * \\param[in] yellow Le coureur jaune du match\n   * \\param[in] locked Le verrou de l'édition\n   * \\param[in] finishDateTime L'heure et date de fin de la course\n   */\n  constructor(id: number, blue: Racer, yellow: Racer, locked: boolean, finishDateTime: string) {\n    super(id); // Appel du constructeur Entity\n    this.blue = blue;\n    this.yellow = yellow;\n    this.locked = locked;\n    this.finishDateTime = finishDateTime;\n    this.blueSubscriberId = 0;\n    this.blueBoatId = 0;\n    this.yellowSubscriberId = 0;\n    this.yellowBoatId = 0;\n  }\n\n  /**\n   * \\fn     getBlue();\n   * \\brief Assesseur de l'attribut blue\n   * \\return blue Retourne le coureur bleu du match\n   */\n  public getBlue(): Racer {\n    return this.blue;\n  }\n\n  /**\n   * \\fn     setBlue();\n   * \\brief Mutateur de l'attribut blue\n   * \\param[in] blue Le coureur bleu du match\n   */\n  public setBlue(value: Racer): void {\n    this.blue = value;\n  }\n\n  /**\n   * \\fn     getYellow();\n   * \\brief Assesseur de l'attribut yellow\n   * \\return yellow Retourne le coureur jaune du match\n   */\n  public getYellow(): Racer {\n    return this.yellow;\n  }\n\n  /**\n   * \\fn     setYellow();\n   * \\brief Mutateur de l'attribut yellow\n   * \\param[in] yellow Le coureur jaune du match\n   */\n  public setYellow(value: Racer): void {\n    this.yellow = value;\n  }\n\n  /**\n   * \\fn     getLocked();\n   * \\brief Assesseur de l'attribut locked\n   * \\return locked Retourne le verrou de l'édition\n   */\n  public getLocked(): boolean {\n    return this.locked;\n  }\n\n  /**\n   * \\fn     setsetLocked();\n   * \\brief Mutateur de l'attribut locked\n   * \\param[in] locked Le verrou de l'édition\n   */\n  public setLocked(value: boolean): void {\n    this.locked = value;\n  }\n\n  /**\n   * \\fn     getFinishDateTime();\n   * \\brief Assesseur de l'attribut finishDateTime\n   * \\return finishDateTime Retourne l'heure et date de fin de la course\n   */\n  public getFinishDateTime(): string {\n    return this.finishDateTime;\n  }\n\n  /**\n   * \\fn     setFinishDateTime();\n   * \\brief Mutateur de l'attribut finishDateTime\n   * \\param[in] finishDateTime L'heure et date de fin de la course\n   */\n  public setFinishDateTime(value: string): void {\n    this.finishDateTime = value;\n  }\n\n  /**\n   * \\fn     getBlueSubscriberId();\n   * \\brief Assesseur de l'attribut blueSubscriberId\n   * \\return blueSubscriberId Retourne l'identifiant du participant bleu sélectionné\n   */\n  public getBlueSubscriberId(): number {\n    return this.blueSubscriberId;\n  }\n\n  /**\n   * \\fn     setBlueSubscriberId();\n   * \\brief Mutateur de l'attribut blueSubscriberId\n   * \\param[in] blueSubscriberId L'identifiant du participant bleu sélectionné\n   */\n  public setBlueSubscriberId(blueSubscriberId: number): void {\n    this.blueSubscriberId = blueSubscriberId;\n  }\n\n  /**\n   * \\fn     getBlueBoatId();\n   * \\brief Assesseur de l'attribut blueBoatId\n   * \\return blueBoatId Retourne l'identifiant du bateau bleu sélectionné\n   */\n  public getBlueBoatId(): number {\n    return this.blueBoatId;\n  }\n\n  /**\n   * \\fn     setBlueBoatId();\n   * \\brief Mutateur de l'attribut blueBoatId\n   * \\param[in] blueBoatId L'identifiant du bateau bleu sélectionné\n   */\n  public setBlueBoatId(blueBoatId: number): void {\n    this.blueBoatId = blueBoatId;\n  }\n\n  /**\n   * \\fn     getYellowSubscriberId();\n   * \\brief Assesseur de l'attribut yellowSubscriberId\n   * \\return yellowSubscriberId Retourne l'identifiant du participant jaune sélectionné\n   */\n  public getYellowSubscriberId(): number {\n    return this.yellowSubscriberId;\n  }\n\n  /**\n   * \\fn     setYellowSubscriberId();\n   * \\brief Mutateur de l'attribut yellowSubscriberId\n   * \\param[in] yellowSubscriberId L'identifiant du participant jaune sélectionné\n   */\n  public setYellowSubscriberId(yellowSubscriberId: number): void {\n    this.yellowSubscriberId = yellowSubscriberId;\n  }\n\n  /**\n   * \\fn     getYellowBoatId();\n   * \\brief Assesseur de l'attribut yellowBoatId\n   * \\return yellowBoatId Retourne l'identifiant du bateau jaune sélectionné\n   */\n  public getYellowBoatId(): number {\n    return this.yellowBoatId;\n  }\n\n  /**\n   * \\fn     setYellowBoatId();\n   * \\brief Mutateur de l'attribut yellowBoatId\n   * \\param[in] yellowBoatId L'identifiant du bateau jaune sélectionné\n   */\n  public setYellowBoatId(yellowBoatId: number): void {\n    this.yellowBoatId = yellowBoatId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/match.ts","/**\n* \\file settings.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-01 19:25:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n\n/**\n * \\class Settings\n * \\brief Représentation de la configuration de l'application SGER\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-01 19:25:00 +0100\n */\nexport class Settings {\n  private organization: string;\n  private phone: string;\n  private email: string;\n  private address: string;\n  private addressSupplement: string;\n  private country: string;\n  private postalCode: string;\n  private location: string;\n  private amountBoats: number;\n  private timeManagement: boolean;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param[in] organization Le nom de l'organisation\n   * \\param[in] phone Le numero de téléphone de l'organisation\n   * \\param[in] email Le courriel de l'organisation\n   * \\param[in] address L'adresse de l'organisation\n   * \\param[in] addressSupplement Le complément adresse de l'organisation\n   * \\param[in] country Le pays de l'organisation\n   * \\param[in] postalCode Le code postal de l'organisation\n   * \\param[in] logo La présence du logo de l'organisation\n   * \\param[in] location Lieu de déroulement de l'épreuve\n   * \\param[in] amountBoats Le nombre de bateaux dans l'épreuve\n   * \\param[in] timeManagement Inclusion du gestionnaire de départ\n   */\n  constructor(organization: string, phone: string, email: string, address: string, addressSupplement: string,\n              country: string, postalCode: string, location: string, amountBoats: number, timeManagement: boolean\n  ) {\n    this.organization = organization;\n    this.phone = phone;\n    this.email = email;\n    this.address = address;\n    this.addressSupplement = addressSupplement;\n    this.country = country;\n    this.postalCode = postalCode;\n    this.location = location;\n    this.amountBoats = amountBoats;\n    this.timeManagement = timeManagement;\n  }\n\n  /**\n   * \\fn     getOrganization();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getOrganization(): string {\n    return this.organization;\n  }\n\n  /**\n   * \\fn     setOrganization();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setOrganization(value: string): void {\n    this.organization = value;\n  }\n\n  /**\n   * \\fn     getPhone();\n   * \\brief Assesseur de l'attribut phone\n   * \\return phone Retourne le numero de téléphone de l'organisation\n   */\n  public getPhone(): string {\n    return this.phone;\n  }\n\n  /**\n   * \\fn     setPhone();\n   * \\brief Mutateur de l'attribut phone\n   * \\param[in] phone Le numero de téléphone de l'organisation\n   */\n  public setPhone(value: string): void {\n    this.phone = value;\n  }\n\n  /**\n   * \\fn     getEmail();\n   * \\brief Assesseur de l'attribut email\n   * \\return email Retourne le courriel de l'organisation\n   */\n  public getEmail(): string {\n    return this.email;\n  }\n\n  /**\n   * \\fn     setEmail();\n   * \\brief Mutateur de l'attribut email\n   * \\param[in] email Le courriel de l'organisation\n   */\n  public setEmail(value: string): void {\n    this.email = value;\n  }\n\n  /**\n   * \\fn     getAddress();\n   * \\brief Assesseur de l'attribut address\n   * \\return address Retourne l'adresse de l'organisation\n   */\n  public getAddress(): string {\n    return this.address;\n  }\n\n  /**\n   * \\fn     setAddress();\n   * \\brief Mutateur de l'attribut address\n   * \\param[in] address L'adresse de l'organisation\n   */\n  public setAddress(value: string): void {\n    this.address = value;\n  }\n\n  /**\n   * \\fn     getAddressSupplement();\n   * \\brief Assesseur de l'attribut addressSupplement\n   * \\return addressSupplement Retourne le complément adresse de l'organisation\n   */\n  public getAddressSupplement(): string {\n    return this.addressSupplement;\n  }\n\n  /**\n   * \\fn     setAddressSupplement();\n   * \\brief Mutateur de l'attribut addressSupplement\n   * \\param[in] addressSupplement Le complément adresse de l'organisation\n   */\n  public setAddressSupplement(value: string): void {\n    this.addressSupplement = value;\n  }\n\n  /**\n   * \\fn     getCountry();\n   * \\brief Assesseur de l'attribut country\n   * \\return country Retourne le pays de l'organisation\n   */\n  public getCountry(): string {\n    return this.country;\n  }\n\n  /**\n   * \\fn     setCountry();\n   * \\brief Mutateur de l'attribut country\n   * \\param[in] country Le pays de l'organisation\n   */\n  public setCountry(value: string): void {\n    this.country = value;\n  }\n\n  /**\n   * \\fn     getPostalCode();\n   * \\brief Assesseur de l'attribut postalCode\n   * \\return postalCode Retourne le code postal de l'organisation\n   */\n  public getPostalCode(): string {\n    return this.postalCode;\n  }\n\n  /**\n   * \\fn     setPostalCode();\n   * \\brief Mutateur de l'attribut postalCode\n   * \\param[in] postalCode Le code postal de l'organisation\n   */\n  public setPostalCode(value: string): void {\n    this.postalCode = value;\n  }\n\n  /**\n   * \\fn     getLocation();\n   * \\brief Assesseur de l'attribut location\n   * \\return location Retourne le lieu de déroulement de l'épreuve\n   */\n  public getLocation(): string {\n    return this.location;\n  }\n\n  /**\n   * \\fn     setLocation();\n   * \\brief Mutateur de l'attribut location\n   * \\param[in] location Lieu de déroulement de l'épreuve\n   */\n  public setLocation(value: string): void {\n    this.location = value;\n  }\n\n  /**\n   * \\fn     getAmountBoats();\n   * \\brief Assesseur de l'attribut amountBoats\n   * \\return amountBoats Retourne le nombre de bateaux dans l'épreuve\n   */\n  public getAmountBoats(): number {\n    return this.amountBoats;\n  }\n\n  /**\n   * \\fn     setAmountBoats();\n   * \\brief Mutateur de l'attribut amountBoats\n   * \\param[in] amountBoats Le nombre de bateaux dans l'épreuve\n   */\n  public setAmountBoats(value: number): void {\n    this.amountBoats = value;\n  }\n\n  /**\n   * \\fn     getTimeManagement();\n   * \\brief Assesseur de l'attribut timeManagement\n   * \\return phasesList Retourne l'état inclusion du gestionnaire de départ\n   */\n  public getTimeManagement(): boolean {\n    return this.timeManagement;\n  }\n\n  /**\n   * \\fn     setTimeManagement();\n   * \\brief Mutateur de l'attribut phasesList\n   * \\param[in] timeManagement Inclusion du gestionnaire de départ\n   */\n  public setTimeManagement(value: boolean): void {\n    this.timeManagement = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/settings.ts","/**\n* \\file subscriber.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-01 13:08:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Crew } from './crew';\n\n/**\n * \\class Subscriber\n * \\brief Représentation d'un participant\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-01 13:08:00 +0100\n */\nexport class Subscriber extends Crew {\n  private letter: string;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs d'un participant\n   * \\param[in] id L'identifiant de l'entité\n   * \\param[in] name Le nom de l'équipage\n   * \\param[in] country Le pays de l'équipage\n   * \\param[in] isaf Le code ISAF de l'équipage\n   * \\param[in] ranking Le classement de l'équipage\n   * \\param[in] letter La letter du participant\n   *\n   */\n  constructor(id: number, name: string, country: string, isaf: string, ranking: number, letter: string) {\n    super(id, name, country, isaf, ranking); // Appel du constructeur Crew\n    this.letter = letter;\n  }\n\n  /**\n   * \\fn     getLetter();\n   * \\brief Assesseur de l'attribut letter\n   * \\return letter Retourne la letter du participant\n   */\n  public getLetter(): string {\n    return this.letter;\n  }\n\n  /**\n   * \\fn     setLetter();\n   * \\brief Mutateur de l'attribut letter\n   * \\param[in] letter La letter du participant\n   */\n  public setLetter(letter: string): void {\n    this.letter = letter;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/subscriber.ts","/**\n* \\file\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-05-12 12:33:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n\n/**\n * \\class SearchBar\n * \\brief\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-11 21:54:00 +0100\n */\nexport abstract class SearchBar {\n  public resultSearchBar(title: string): boolean {\n    var result = true;\n    const tagsString = document.getElementById(\"searchBar\").innerHTML;\n    if(tagsString != ''){\n      var arrayTags = tagsString.split(' ');\n      for(var i = 0; i < arrayTags.length; i++){\n        if(arrayTags[i] != '' && arrayTags[i] != ' ')\n          result = result&&(title.search(new RegExp(arrayTags[i], \"i\")) != -1)?true:false;\n      }\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/searchbar.ts","/**\n* \\file event.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-02 00:37:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Event } from '../class/data/event';\nimport { Phase } from '../class/data/phase';\nimport { CRUD } from '../class/crud';\ndeclare var Date;\n\n@Injectable()\nexport class EventService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('EventService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Event ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, organization TEXT, \\\n    location TEXT, ranking INTEGER, numberBoats INTEGER, date TEXT, timeManagement INTEGER)',\n    'Event');\n    this.divID = 'EventService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(event: Event): void {\n     this.writeDB([\n       'INSERT INTO \\\n       Event(id, name, organization, location, ranking, numberBoats, date, timeManagement) \\\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)',\n       [event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(), +event.getTimeManagement()]\n     ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(events: {ref: Event[]}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = 'SELECT * FROM Event ORDER BY date DESC, name';\n    this.readDB(requestSQL, events, this.applyResult, this.divID);\n  }\n\n  /**\n   * \\fn    readByPhase();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public readByPhase(event: {ref: Event}, phase: Phase) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +phase.getId();\n    if(phaseID > 0){\n      requestSQL.request = '\\\n      SELECT * FROM Event \\\n      WHERE id = (SELECT event FROM Phase WHERE id = ' + phaseID + ')';\n      this.readDB(requestSQL, event, this.applyResultByPhase, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(events: {ref: Event[]}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    events.ref = [];\n    for (var i = 0; i < data.length; i++) {\n      events.ref.push(\n        new Event(data[i].id, data[i].name, data[i].organization, data[i].location, data[i].ranking, data[i].numberBoats, data[i].date, [], [], data[i].timeManagement)\n      );\n    }\n  }\n\n  /**\n   * \\fn    applyResultByPhase();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  private applyResultByPhase(event: {ref: Event}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    for (var i = 0; i < data.length; i++) {\n      event.ref.setId(data[i].id);\n      event.ref.setName(data[i].name);\n      event.ref.setTimeManagement(data[i].timeManagement);\n    }\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(event: Event): void {\n     this.writeDB([\n     'UPDATE Event \\\n     SET name = ?, organization = ?, location = ?, ranking = ?, numberBoats = ?, date = ?, timeManagement = ? \\\n     WHERE id = ?',\n     [event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(), +event.getTimeManagement(), event.getId()]\n     ]);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(event: Event): void {\n    const eventID = +event.getId();\n    if(eventID > 0){\n      this.writeDB(['DELETE FROM Penalty \\\n      WHERE id in (\\\n       SELECT R.penalty \\\n       FROM Racer R, Matchs M, Flight F, Phase P \\\n       WHERE R.matchs = M.id AND M.flight = F.id AND F.phase = P.id AND P.event = ' + eventID + ')',[]]);\n      this.writeDB(['DELETE FROM Racer \\\n      WHERE matchs = (SELECT M.id FROM Matchs M, Flight F, Phase P WHERE M.flight = F.id AND F.phase = P.id AND P.event = ' + eventID + ')',[]]);\n      this.writeDB(['DELETE FROM Matchs \\\n      WHERE flight = (SELECT F.id FROM Flight F, Phase P WHERE F.phase = P.id AND P.event = ' + eventID + ')',[]]);\n      this.writeDB(['DELETE FROM Flight \\\n      WHERE phase = (SELECT id FROM Phase WHERE event = ' + eventID + ')',[]]);\n      this.writeDB(['DELETE FROM \\\n      Phase WHERE event = ?',[eventID]]);\n      this.writeDB(['DELETE FROM Event \\\n      WHERE id = ?',[eventID]]);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/event.service.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/about/about.component.ts","/**\n* \\file crews-list.component.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-01 22:53:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { CrewService } from '../../services/crew.service';\n\nimport { SearchBar } from '../../class/searchbar';\nimport { Crew } from '../../class/data/crew';\nimport { UcManageCrews } from '../../class/ucmanagecrews';\n\n@Component({\n  selector: 'app-crews-list',\n  templateUrl: './crews-list.component.html',\n  styleUrls: ['./crews-list.component.css'],\n  providers: [CrewService]\n})\n\n/**\n * \\class CrewsListComponent\n * \\brief Environnement de gestion des équipages\n * \\author Zarzitski\n * \\version 3\n * \\date 2017-04-01 22:53:00 +0100\n */\nexport class CrewsListComponent extends SearchBar implements OnInit {\n  protected crews: {ref: Crew[]};\n  protected crew: {ref: Crew};\n  protected crewPanelIhm: {ref: boolean};\n  protected deletePanelIhm: {ref: boolean};\n  protected editMode: {ref: boolean};\n  protected ucmanagecrews: UcManageCrews;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param crewsService persistance des équipages\n   */\n  constructor(private crewService: CrewService) {\n    super();\n    this.crews = {ref: []};\n    this.crew = {ref: new Crew(0, '', '', '', 0)};\n    this.editMode = {ref: true};\n    this.deletePanelIhm = {ref: false};\n    this.crewPanelIhm = {ref: true};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui initialise ucmanagecrews au chargement du CrewsListComponent\n   */\n  ngOnInit(): void {\n    this.ucmanagecrews = new UcManageCrews(\n      this.crewService, this.crews, this.crew, this.crewPanelIhm, this.editMode, this.deletePanelIhm\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/crews-list/crews-list.component.ts","/**\n* \\file events-list.component.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-13 18:15:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from '../../services/event.service';\nimport { SettingsService } from '../../services/settings.service';\nimport { CrewService } from '../../services/crew.service';\nimport { SubscriberService } from '../../services/subscriber.service';\nimport { PhaseService } from '../../services/phase.service';\nimport { BoatService } from '../../services/boat.service';\n\nimport { SearchBar } from '../../class/searchbar';\nimport { Event } from '../../class/data/event';\nimport { Settings } from '../../class/data/settings';\nimport { Crew } from '../../class/data/crew';\nimport { Subscriber } from '../../class/data/subscriber';\nimport { Phase } from '../../class/data/phase';\nimport { UcOrganizeEvent } from '../../class/ucorganizeevent';\nimport { UcOrganizePhase } from '../../class/ucorganizephase';\n\n@Component({\n  selector: 'app-events-list',\n  templateUrl: './events-list.component.html',\n  styleUrls: ['./events-list.component.css'],\n  providers: [\n    EventService,\n    SettingsService,\n    CrewService,\n    SubscriberService,\n    PhaseService,\n    BoatService\n  ]\n})\n\n/**\n * \\class EventsListComponent\n * \\brief Environnement de gestion des événements\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-13 18:15:00 +0100\n */\nexport class EventsListComponent extends SearchBar implements OnInit {\n  protected events: {ref: Event[]};\n  protected event: {ref: Event};\n  protected settings: {ref: Settings};\n  protected crews: {ref: Crew[]};\n  protected phase: {ref: Phase};\n\n  protected eventPanelIhm: {ref: boolean};\n  protected deleteEventPanelIhm: {ref: boolean};\n  protected phasePanelIhm: {ref: boolean};\n  protected deletePhasePanelIhm: {ref: boolean};\n  protected editMode: {ref: boolean};\n  protected crewId: {ref: number};\n  protected crewLetter: {ref: string};\n\n  protected ucorganizeevent: UcOrganizeEvent;\n  protected ucorganizephase: UcOrganizePhase;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param eventService persistance des événements\n   * \\param settingsService persistance des paramètres\n   * \\param crewService persistance des équipages\n   * \\param subscriberService persistance des participants\n   * \\param phaseService La persistance des phases\n   * \\param boatService persistance des bateaux\n   */\n  constructor(\n    private eventService: EventService,\n    private settingsService: SettingsService,\n    private crewService: CrewService,\n    private subscriberService: SubscriberService,\n    private phaseService: PhaseService,\n    private boatService: BoatService\n  ) {\n    super();\n    this.events = {ref: []};\n    this.event = {ref: new Event(0,'', '', '', 0, 1, '', [], [], false)};\n    this.settings = {ref: new Settings('', '', '', '', '', '', '', '', 0, false)};\n    this.phase = {ref: new Phase(0, '', false, [])};\n    this.crews = {ref: []};\n    this.eventPanelIhm = {ref: true};\n    this.phasePanelIhm = {ref: true};\n    this.editMode = {ref: true};\n    this.deleteEventPanelIhm = {ref: false};\n    this.deletePhasePanelIhm = {ref: false};\n    this.crewId = {ref: 0};\n    this.crewLetter = {ref: ''};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui initialise ucorganizeevent au chargement du EventsListComponent\n   */\n  ngOnInit() {\n    this.ucorganizeevent = new UcOrganizeEvent(\n      this.eventService, this.settingsService, this.crewService, this.subscriberService, this.boatService,\n      this.events, this.event, this.settings, this.crews,\n      this.eventPanelIhm, this.editMode, this.deleteEventPanelIhm,\n      this.crewId, this.crewLetter\n    );\n    this.ucorganizephase = new UcOrganizePhase(\n      this.phaseService, this.events, this.event, this.phase,\n      this.phasePanelIhm, this.editMode, this.deletePhasePanelIhm\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/events-list/events-list.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guide',\n  templateUrl: './guide.component.html',\n  styleUrls: ['./guide.component.css']\n})\nexport class GuideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/guide/guide.component.ts","/**\n* \\file home.component.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-02 00:26:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { Event } from '../../class/data/event';\nimport { EventService } from '../../services/event.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers: [EventService]\n})\n\n/**\n * \\class HomeComponent\n * \\brief Environnement de la page d'accueil\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-13 18:15:00 +0100\n */\nexport class HomeComponent implements OnInit {\n  protected events: {ref: Event[]};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param eventService persistance des événements\n   */\n  constructor(protected eventService: EventService) {\n    this.events = {ref: []};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui initialise eventService au chargement du HomeComponent\n   */\n  ngOnInit() {\n    this.eventService.read(this.events);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","/**\n* \\file phase.component.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-22 09:30:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"../../class/winnerPanel.ts\" />\nimport 'rxjs/add/operator/switchMap';\nimport { Component, OnInit }      from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location }               from '@angular/common';\nimport { EventService } from '../../services/event.service';\nimport { PhaseService } from '../../services/phase.service';\nimport { FlightService } from '../../services/flight.service';\nimport { SubscriberService } from '../../services/subscriber.service';\nimport { BoatService } from '../../services/boat.service';\nimport { MatchService } from '../../services/match.service';\nimport { RacerService } from '../../services/racer.service';\nimport { PenaltyService } from '../../services/penalty.service';\n\nimport { SearchBar } from '../../class/searchbar';\nimport { Event } from '../../class/data/event';\nimport { Phase } from '../../class/data/phase';\nimport { Flight } from '../../class/data/flight';\nimport { Match } from '../../class/data/match';\nimport { Racer } from '../../class/data/racer';\nimport { Boat } from '../../class/data/boat';\nimport { Penalty } from '../../class/data/penalty';\nimport { Subscriber } from '../../class/data/subscriber';\nimport { UcElaboratePairingList } from '../../class/ucelaboratepairinglist';\n\n@Component({\n  selector: 'app-phase',\n  templateUrl: './phase.component.html',\n  styleUrls: ['./phase.component.css'],\n  providers: [\n    EventService,\n    PhaseService,\n    FlightService,\n    SubscriberService,\n    BoatService,\n    MatchService,\n    RacerService,\n    PenaltyService\n  ]\n})\n/**\n * \\class PhaseComponent\n * \\brief Environnement de gestion des phases\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-22 09:30:00 +0100\n */\nexport class PhaseComponent extends SearchBar implements OnInit {\n  protected event: {ref: Event};\n  protected phase: {ref: Phase};\n  protected flight: {ref: Flight};\n  protected match: {ref: Match};\n  protected racer: {ref: Racer};\n  protected winnerPanelIhm: {ref: WinnerPanel};\n  protected deleteFlightPanelIhm: {ref: boolean};\n  protected penaltyPanelIhm: {ref: boolean};\n  protected startTime: {ref: string};\n  protected startDate: {ref: string};\n\n  protected ucelaboratepairinglist: UcElaboratePairingList;\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param eventService persistance des événements\n   * \\param phaseService La persistance des phases\n   * \\param flightService La persistance des flights\n   * \\param subscriberService persistance des participants\n   * \\param boatService persistance des bateaux\n   * \\param matchService persistance des matchs\n   * \\param racerService persistance des concurrents\n   * \\param penaltyService persistance des pénalités\n   * \\param route composant Angular\n   * \\param location composant Angular\n\n   */\n  constructor(\n    private eventService: EventService,\n    private phaseService: PhaseService,\n    private flightService: FlightService,\n    private subscriberService: SubscriberService,\n    private boatService: BoatService,\n    private matchService: MatchService,\n    private racerService: RacerService,\n    private penaltyService: PenaltyService,\n    private route: ActivatedRoute, private location: Location\n  ) {\n    super();\n    this.event = {ref: new Event(0,'', '', '', 0, 1, '', [], [], false)};\n    this.phase = {ref: new Phase(0, '', false, [])};\n    this.route.params.switchMap((params: Params) => params['id']).subscribe(id => this.phase.ref.setId(+id));\n    var phases = [];\n    phases.push(this.phase.ref);\n    this.event.ref.setPhasesList(phases);\n    this.flight = {ref: new Flight(0, 0, [], '')};\n    const racer = new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''));\n    this.match = {ref: new Match(0, racer, racer, false, '')};\n    this.racer = {ref: new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''))};\n    this.winnerPanelIhm = {ref: {hide: true, deletePanelhide: true, scoreBar: 0, time: ''}};\n    this.deleteFlightPanelIhm = {ref: false};\n    this.penaltyPanelIhm = {ref: false};\n    this.startTime = {ref: ''};\n    this.startDate = {ref: ''};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui initialise ucelaboratepairinglist au chargement du PhaseComponent\n   */\n  ngOnInit() {\n    this.ucelaboratepairinglist = new UcElaboratePairingList(\n      this.eventService, this.phaseService, this.flightService, this.subscriberService,\n      this.boatService, this.matchService, this.racerService, this.penaltyService,\n      this.event, this.phase, this.flight, this.match, this.racer,\n      this.deleteFlightPanelIhm, this.winnerPanelIhm, this.penaltyPanelIhm, this.startTime, this.startDate\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/phase/phase.component.ts","import 'rxjs/add/operator/switchMap';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location }               from '@angular/common';\nimport { ResultBoatService} from '../../services/result-boat.service';\n\nimport { ResultBoat } from '../../class/data/resultBoat';\nimport { Phase } from '../../class/data/phase';\n\n@Component({\n  selector: 'app-results-boat',\n  templateUrl: './results-boat.component.html',\n  styleUrls: ['./results-boat.component.css'],\n  providers: [ResultBoatService]\n})\nexport class ResultsBoatComponent implements OnInit {\n  protected resultBoatList: {ref: ResultBoat[]}\n  protected phase: {ref: Phase};\n\n  constructor(private resultBoatService: ResultBoatService, private route: ActivatedRoute, private location: Location) {\n    this.resultBoatList = {ref: []};\n    this.phase = {ref: new Phase(0, '', false, [])};\n    this.route.params.switchMap((params: Params) => params['id']).subscribe(id => this.phase.ref.setId(+id));\n  }\n\n  ngOnInit() {\n     this.resultBoatService.read(this.resultBoatList, this.phase.ref);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/results-boat/results-boat.component.ts","import 'rxjs/add/operator/switchMap';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location }               from '@angular/common';\nimport { ResultSubscriberService} from '../../services/result-subscriber.service';\n\nimport { ResultSubscriber } from '../../class/data/resultSubscriber';\nimport { Phase } from '../../class/data/phase';\n//import { Event } from '../../class/data/event';\n//import { Event } from '../../class/data/event';\n//import { Subscriber } from '../../class/data/subscriber';\n\n@Component({\n  selector: 'app-results-subscriber',\n  templateUrl: './results-subscriber.component.html',\n  styleUrls: ['./results-subscriber.component.css'],\n  providers: [ResultSubscriberService]\n})\nexport class ResultSubscriberComponent implements OnInit {\n  protected resultSubscriberList: {ref: ResultSubscriber[]}\n  protected phase: {ref: Phase};\n//  protected phase2: Phase[];\n//  protected event: {ref: Event};\n  //protected subscriber: {ref: Subscriber};\n\n  constructor(private resultSubscriberService: ResultSubscriberService, private route: ActivatedRoute, private location: Location) {\n    this.resultSubscriberList = {ref: []};\n    this.phase = {ref: new Phase(0, '', false, [])};\n//    this.event = {ref: new Event(0,'', '', '', 0, 1, '', [], [], false)};\n    this.route.params.switchMap((params: Params) => params['id']).subscribe(id => this.phase.ref.setId(+id));\n\n  }\n\n  ngOnInit() {\n//    subscriber.readByPhase(this.event,this.phase.ref)\n    //this.resultSubscriberService.read(this.resultSubscriberList, this.phase.ref);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/results-subscriber/results-subscriber.component.ts","/**\n* \\file settings.component.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-12 16:13:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from '../../class/data/settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n  providers: [SettingsService]\n})\n\n/**\n * \\class SettingsComponent\n * \\brief Environnement de configuration général de SGER\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-12 16:13:00 +0100\n */\nexport class SettingsComponent implements OnInit {\n  protected settings: {ref: Settings};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param settingsService La persistance de la configuration\n   */\n  constructor(private settingsService: SettingsService) {\n    this.settings = {ref: new Settings('', '', '', '', '', '', '', '', 0, false)};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui lit les données la configuration\n   */\n  ngOnInit() {\n    this.settingsService.read(this.settings);\n  }\n\n  /**\n   * \\fn     saveSettings();\n   * \\brief Méthode qui sauvegarde les modifications si elles sont conformes\n   */\n  saveSettings() {\n    if(this.testSettingsPanel()){\n      this.settingsService.update(this.settings.ref);\n      alert('Settings was successfully updated');\n    }\n  }\n\n  /**\n   * \\fn    testSettingsPanel(): boolean\n   * \\brief Test les champs du formulaire SettingsPanel et affiche les erreurs\n   * \\return testResult Retourne le resultat du test\n   */\n  public testSettingsPanel(): boolean {\n    var testResult = true;\n    if(!/^[A-Za-z0-9-]{2,}[A-Za-z0-9-]*$/.test(this.settings.ref.getOrganization())){\n      testResult = false;\n      alert('The organization contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[+0-9]*$/.test(this.settings.ref.getPhone()) && this.settings.ref.getPhone() != ''){\n      testResult = false;\n      alert('The phone number contains unauthorized characters or is incorrect, please correct it with the allowed characters (\"+\", \"-\", \" \", \"0-9\").');\n    }\n    if(!/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(this.settings.ref.getEmail()) && this.settings.ref.getEmail() != ''){\n      testResult = false;\n      alert('The E-mail contains unauthorized characters or is incorrect, please correct it with the allowed characters (\"@\", \",\", \".\", \"_\", \"-\", \"0-9\", \"a-z\", \"A-Z\").');\n    }\n    if(!/^[A-Za-z0-9-,.]*$/.test(this.settings.ref.getAddress())){\n      testResult = false;\n      alert('The Address contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\", \".\", \",\").');\n    }\n    if(!/^[A-Za-z0-9-,.]*$/.test(this.settings.ref.getAddressSupplement())){\n      testResult = false;\n      alert('The Address Supplement contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\", \".\", \",\").');\n    }\n    if(!/^[A-Z]{2}$/.test(this.settings.ref.getCountry()) && this.settings.ref.getCountry() != ''){\n      testResult = false;\n      alert('The Country contains unauthorized country.');\n    }\n    if(!/^[0-9]{6}$/.test(this.settings.ref.getPostalCode()) && this.settings.ref.getPostalCode() != ''){\n      testResult = false;\n      alert('The Postal Code contains unauthorized characters, please use numbers');\n    }\n    if(!/^[A-Za-z0-9-,.]*$/.test(this.settings.ref.getLocation())){\n      testResult = false;\n      alert('The Location contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\", \".\", \",\").');\n    }\n    if(!/^[1-9]{1,}[0-9]*$/.test(this.settings.ref.getAmountBoats().toString()) && this.settings.ref.getAmountBoats().toString() != ''){\n      testResult = false;\n      alert('The Number of Boats contains unauthorized number');\n    }\n    return testResult;\n  }\n\n  /**\n   * \\fn     cancelSettings();\n   * \\brief Méthode qui annule les modifications en rechargeant le contenu précédent\n   */\n  cancelSettings() {\n    this.settingsService.read(this.settings);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/settings/settings.component.ts","/**\n* \\file boat.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-23 11:38:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Event } from '../class/data/event';\nimport { Boat } from '../class/data/boat';\nimport { Flight } from '../class/data/flight';\nimport { Racer } from '../class/data/racer';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class BoatService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('BoatService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Boat ( id INTEGER PRIMARY KEY AUTOINCREMENT, boatNumber INTEGER)',\n    'Boat');\n    this.divID = 'BoatService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(event: Event): void {\n     for (var i = 1; i <= event.getNumberBoats(); i++) {\n       this.writeDB([\n         'INSERT INTO Boat(boatNumber) \\\n         SELECT ? WHERE NOT EXISTS(SELECT * FROM Boat WHERE boatNumber = ?)',\n         [i, i]\n       ]);\n     }\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(event: {ref: Event}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +event.ref.getPhasesList()[0].getId();\n    if(phaseID > 0){\n      requestSQL.request = '\\\n      SELECT B.id, B.boatNumber \\\n      FROM Boat B, Event E, Phase P \\\n      WHERE B.boatNumber <= E.numberBoats \\\n      AND E.id = P.event AND P.id = ' + phaseID + ' \\\n      ORDER BY boatNumber';\n      this.readDB(requestSQL, event, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    associationBoatsToRacer();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public associationBoatsToRacer(flight: {ref: Flight}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const flightID = +flight.ref.getId();\n    if(flightID > 0){\n      requestSQL.request = '\\\n      SELECT B.id, M.id as matchsId, R.color, B.boatNumber \\\n      FROM Boat B, Racer R, Flight F, Matchs M \\\n      WHERE F.id = M.flight AND M.id = R.matchs \\\n      AND R.boat = B.id AND F.id = ' + flightID;\n      this.readDB(requestSQL, flight, this.applyResultBoatsToRacer, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(event: {ref: Event}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    var boats = [];\n    for (var i = 0; i < data.length; i++) {\n      boats.push(new Boat(data[i].id, data[i].boatNumber));\n    }\n    event.ref.setBoatsList(boats.slice(0));\n  }\n\n  /**\n   * \\fn    applyResultBoatsToRacer();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  private applyResultBoatsToRacer(flight: {ref: Flight}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    var boats = [];\n    var matchs = flight.ref.getMatchsList().slice(0);\n    for (var i = 0; i < data.length; i++) {\n      const index = matchs.findIndex(x => x.getId() == data[i].matchsId);\n      if(data[i].color == 'b'){\n        matchs[index].getBlue().setBoat({ref: new Boat(data[i].id, data[i].boatNumber)});\n      }\n      else{\n        matchs[index].getYellow().setBoat({ref: new Boat(data[i].id, data[i].boatNumber)});\n      }\n    }\n    flight.ref.setMatchsList(matchs.slice(0));\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(event: Event): void {\n     this.create(event);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(boat: Boat): void {\n     this.writeDB([\n     'DELETE FROM Boat WHERE id = ?',\n     [boat.getId()]\n     ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/boat.service.ts","/**\n* \\file crew.service.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-02 00:34:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"../class/requestSQL.ts\" />\nimport { Injectable } from '@angular/core';\nimport { Crew } from '../class/data/crew';\nimport { DataBase } from '../class/database';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\n/**\n * \\class CrewService\n * \\brief Cette classe s'occupe de la persistance des équipages\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-11 23:41:00 +0100\n */\nexport class CrewService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('CrewService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Crew (id INTEGER, name TEXT, country TEXT, isaf TEXT, ranking INTEGER, PRIMARY KEY (id))',\n    'Crew');\n    this.divID = 'CrewService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(crew: Crew): void {\n     this.writeDB([\n     'INSERT INTO \\\n     Crew(id, name, country, isaf, ranking) \\\n     VALUES (?, ?, ?, ?, ?)',\n     [crew.getId(), crew.getName(), crew.getCountry(), crew.getIsaf(), crew.getRanking()]\n     ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(crews: {ref: Crew[]}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = 'SELECT * FROM Crew ORDER BY name';\n    this.readDB(requestSQL, crews, this.applyResult, this.divID);\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(crews: {ref: Crew[]}, dataID: string){\n    const data = JSON.parse(document.getElementById(dataID).innerHTML);\n    document.getElementById(dataID).innerHTML = '';\n    crews.ref = [];\n    for (var i = 0; i < data.length; i++) {\n      crews.ref.push(\n        new Crew(data[i].id, data[i].name, data[i].country, data[i].isaf, data[i].ranking)\n      );\n    }\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(crew: Crew): void {\n     this.writeDB([\n     'UPDATE Crew SET name = ?, country = ?, isaf = ?, ranking = ? WHERE id = ?',\n     [crew.getName(), crew.getCountry(), crew.getIsaf(), crew.getRanking(), crew.getId()]\n     ]);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(crew: Crew): void {\n     this.writeDB([\n     'DELETE FROM Crew WHERE id = ?',\n     [crew.getId()]\n     ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/crew.service.ts","/**\n* \\file phase.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-17 14:24:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Event } from '../class/data/event';\nimport { Phase } from '../class/data/phase';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class PhaseService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('PhaseService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Phase ( id INTEGER PRIMARY KEY AUTOINCREMENT, event INTEGER, name TEXT, roundRobin INTEGER, \\\n    FOREIGN KEY(event) REFERENCES Event(id))',\n    'Phase');\n    this.divID = 'PhaseService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(phase: Phase): void {\n     this.writeDB([\n       'INSERT INTO Phase(id, name, roundrobin) VALUES (?, ?, ?)',\n       [phase.getId(), phase.getName(), +phase.getRoundRobin()]\n     ]);\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public setEventID(phase: Phase, event: Event): void {\n     this.writeDB([\n       'UPDATE Phase SET event = ? WHERE id = ?',\n       [event.getId(), phase.getId()]\n     ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(events: {ref: Event[]}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = 'SELECT * FROM Phase ORDER BY id';\n    this.readDB(requestSQL, events, this.applyResult, this.divID);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public readById(phase: {ref: Phase}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +phase.ref.getId();\n    if(phaseID > 0){\n      requestSQL.request = 'SELECT * FROM Phase WHERE id = ' + phaseID + ' ORDER BY id';\n      this.readDB(requestSQL, phase, this.applyResultById, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(events: {ref: Event[]}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    for (var i = 0; i < data.length; i++) {\n      const indexEvent = events.ref.findIndex(x => x.getId() == data[i].event);\n      var phases = events.ref[indexEvent].getPhasesList().slice(0);\n      phases.push( new Phase(data[i].id, data[i].name, data[i].roundRobin, []) );\n      events.ref[indexEvent].setPhasesList(phases.slice(0));\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResultById(phase: {ref: Phase}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    for (var i = 0; i < data.length; i++) {\n      phase.ref.setName(data[i].name);\n      phase.ref.setRoundRobin(data[i].roundRobin);\n    }\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(phase: Phase): void {\n    this.writeDB([\n     'UPDATE Phase SET name = ?, roundrobin = ? WHERE id = ?',\n     [phase.getName(), +phase.getRoundRobin(), phase.getId()]\n    ]);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(phase: Phase): void {\n    const phaseID = +phase.getId();\n    if(phaseID > 0){\n      this.writeDB(['DELETE FROM Penalty \\\n      WHERE id in (\\\n        SELECT R.penalty \\\n        FROM Racer R, Matchs M, Flight F \\\n        WHERE R.matchs = M.id AND M.flight = F.id AND F.phase = ' + phaseID + ')',\n      []]);\n      this.writeDB(['DELETE FROM Racer \\\n      WHERE matchs = (\\\n        SELECT M.id \\\n        FROM Matchs M, Flight F \\\n        WHERE M.flight = F.id AND F.phase = ' + phaseID + ')',[]]);\n      this.writeDB(['DELETE FROM Matchs \\\n      WHERE flight = (SELECT id FROM Flight WHERE phase = ' + phaseID + ')',[]]);\n      this.writeDB(['DELETE FROM Flight WHERE phase = ?',[phaseID]]);\n      this.writeDB(['DELETE FROM Phase WHERE id = ?',[phaseID]]);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/phase.service.ts","/**\n* \\file settings.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-12 18:26:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"../class/requestSQL.ts\" />\nimport { Injectable } from '@angular/core';\nimport { Settings } from '../class/data/settings';\nimport { DataBase } from '../class/database';\n\n@Injectable()\n/**\n * \\class SettingsService\n * \\brief Cette classe s'occupe de la persistance de la configuration général de SGER\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-12 18:26:00 +0100\n */\nexport class SettingsService extends DataBase {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase et ajoute à la table les parametres par defaut si ils n'existent pas\n   */\n  constructor(){\n    super('SettingsService','CREATE TABLE IF NOT EXISTS \\\n    Settings (id INTEGER, organization TEXT, phone TEXT, email TEXT, address TEXT, \\\n      addressSupplement TEXT, country TEXT, postalCode TEXT, location TEXT, \\\n      amountBoats INTEGER, timeManagement INTEGER, PRIMARY KEY (id))');\n    this.divID = 'SettingsService';\n    this.writeDB([\n    \"INSERT INTO Settings (id, organization, phone, email, address, addressSupplement, country, \\\n      postalCode, location, amountBoats, timeManagement) \\\n      SELECT 1,'SGER', '', '', '', '', '', '', '', 1, 0 \\\n      WHERE NOT EXISTS(SELECT 1 FROM Settings WHERE id = 1)\",\n    []]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir la configuration\n   * \\param settings La configuration\n   */\n  public read(settings: {ref: Settings}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = 'SELECT * FROM Settings WHERE id = 1';\n    this.readDB(requestSQL, settings, this.applyResult, this.divID);\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour la configuration\n   * \\param settings La configuration\n   * \\param dataID Le nom du service\n   */\n  private applyResult(settings: {ref: Settings}, dataID: string){\n    const data = JSON.parse(document.getElementById(dataID).innerHTML)[0];\n    document.getElementById(dataID).innerHTML = '';\n    settings.ref = new Settings(data.organization, data.phone, data.email, data.address, data.addressSupplement, data.country, data.postalCode, data.location, data.amountBoats, data.timeManagement);\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour la configuration\n   * \\param[in] settings La configuration qui doit être mise à jour\n   */\n  public update(settings: Settings): void {\n     this.writeDB([\n     'UPDATE Settings SET organization = ?, phone = ?, email = ?, address = ?, \\\n     addressSupplement = ?, country = ?, postalCode = ?, location = ?, amountBoats = ?, \\\n     timeManagement = ? WHERE id = 1',\n     [settings.getOrganization(), settings.getPhone(), settings.getEmail(), settings.getAddress(), settings.getAddressSupplement(), settings.getCountry(), settings.getPostalCode(), settings.getLocation(), settings.getAmountBoats(), +settings.getTimeManagement()]\n     ]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/settings.service.ts","/**\n* \\file subscriber.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-15 21:05:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Subscriber } from '../class/data/subscriber';\nimport { Event } from '../class/data/event';\nimport { Phase } from '../class/data/phase';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class SubscriberService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('SubscriberService','CREATE TABLE IF NOT EXISTS \\\n    Subscriber ( id INTEGER PRIMARY KEY AUTOINCREMENT, letter TEXT, event INTEGER, name TEXT, \\\n    country TEXT, isaf TEXT, ranking TEXT, FOREIGN KEY(event) REFERENCES Event(id) )', 'Subscriber');\n    this.divID = 'SubscriberService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(event: Event): void {\n    var subscribers = event.getSubscribers().slice(0);\n    for (var i = 0; i < subscribers.length; i++) {\n      this.writeDB([\n        'INSERT INTO Subscriber(id, letter, event, name, country, isaf, ranking) \\\n        VALUES (?, ?, ?, ?, ?, ?, ?)',\n        [subscribers[i].getId(), subscribers[i].getLetter(), event.getId(), subscribers[i].getName(), subscribers[i].getCountry(), subscribers[i].getIsaf(), subscribers[i].getRanking()]\n      ]);\n    }\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(event: {ref: Event}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const eventID = +event.ref.getId();\n    if(eventID > 0){\n      requestSQL.request = '\\\n      SELECT * FROM Subscriber WHERE event = ' + eventID + ' ORDER BY name';\n      var subscribers = {ref: event.ref};\n      this.readDB(requestSQL, event, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public readByPhase(event: {ref: Event}, phase: Phase) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +phase.getId();\n    if(phaseID > 0){\n      requestSQL.request = '\\\n      SELECT S.* \\\n      FROM Subscriber S, Event E, Phase P \\\n      WHERE S.event = E.id AND E.id = P.event AND P.id = ' + phaseID + ' ORDER BY name';\n      this.readDB(requestSQL, event, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(event: {ref: Event}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    var subscribers = [];\n    for (var i = 0; i < data.length; i++) {\n      subscribers.push(\n        new Subscriber(data[i].id, data[i].name, data[i].country, data[i].isaf, data[i].ranking, data[i].letter)\n      );\n    }\n    event.ref.setSubscribers(subscribers.slice(0));\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(event: Event): void {\n    this.delete(event);\n    this.create(event);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(event: Event): void {\n     this.writeDB([\n     'DELETE FROM Subscriber WHERE event = ?',\n     [event.getId()]\n     ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/subscriber.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 112;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 112\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\ndocument.addEventListener('deviceready', function() {\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  platformBrowserDynamic().bootstrapModule(AppModule);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { EventsListComponent } from './components/events-list/events-list.component';\nimport { CrewsListComponent } from './components/crews-list/crews-list.component';\nimport { GuideComponent } from './components/guide/guide.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { PhaseComponent } from './components/phase/phase.component';\nimport { ResultSubscriberComponent } from './components/results-subscriber/results-subscriber.component';\nimport { ResultsBoatComponent } from './components/results-boat/results-boat.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'events-list', component: EventsListComponent },\n  { path: 'crews-list', component: CrewsListComponent },\n  { path: 'guide', component: GuideComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'results-subscriber/:id', component: ResultSubscriberComponent },\n  { path: 'results-boat/:id', component: ResultsBoatComponent },\n  { path: 'phase/:id', component: PhaseComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","/// <reference path=\"./class/navMenu.ts\" />\nimport { Component } from '@angular/core';\n\ndeclare const TIME_TO_WAIT;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  private sidenav: boolean;\n  private searchBar: boolean;\n  private searchBarContent: string;\n  private navMenu: {ref: NavMenu[]};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs\n   * \\param settingsService La persistance de la configuration\n   */\n  constructor() {\n    this.sidenav = false;\n    this.searchBar = false;\n    this.searchBarContent = '';\n    this.navMenu = {ref: []};\n  }\n\n  /**\n   * \\fn     ngOnInit();\n   * \\brief Méthode qui lit les données la configuration\n   */\n  ngOnInit() {\n    this.navMenu.ref.push({title: 'Home', link: 'home'});\n    this.findMenuDescription(this.findMenuDescription, this.navMenu);\n  }\n\n  public pushButtonNav(link: string): void {\n    this.navMenu.ref = [];\n    this.searchBar = false;\n    this.searchBarContent = '';\n    switch(link){\n      case 'home': this.navMenu.ref.push({title: 'Home', link: 'home'});\n        break;\n      case 'events-list':\n        this.navMenu.ref.push({title: 'Events List', link: 'events-list'});\n        this.searchBar = true;\n        break;\n      case 'crews-list':\n        this.navMenu.ref.push({title: 'Crews List', link: 'crews-list'});\n        this.searchBar = true;\n        break;\n      case 'guide': this.navMenu.ref.push({title: 'Guide', link: 'guide'});\n        break;\n      case 'settings': this.navMenu.ref.push({title: 'Settings', link: 'settings'});\n        break;\n      case 'about': this.navMenu.ref.push({title: 'About', link: 'about'});\n        break;\n    }\n    document.getElementById('MenuData').innerHTML = '';\n    this.sidenavShowHide();\n  }\n\n  private findMenuDescription(findMenuDescription, navMenu:{ref: NavMenu[]}): void {\n    if(document.getElementById(\"MenuData\")){\n      if(document.getElementById('MenuData').innerHTML != ''){\n        navMenu.ref = JSON.parse(document.getElementById('MenuData').innerHTML).splice(0);\n      }\n    }\n    setTimeout(findMenuDescription.bind(null, findMenuDescription, navMenu), TIME_TO_WAIT);\n  }\n\n  public sidenavShowHide(): void {\n    this.sidenav = this.sidenav ? false : true;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { EventsListComponent } from './components/events-list/events-list.component';\nimport { CrewsListComponent } from './components/crews-list/crews-list.component';\nimport { GuideComponent } from './components/guide/guide.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { PhaseComponent } from './components/phase/phase.component';\nimport { ResultsBoatComponent } from './components/results-boat/results-boat.component';\nimport { ResultSubscriberComponent } from './components/results-subscriber/results-subscriber.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EventsListComponent,\n    CrewsListComponent,\n    GuideComponent,\n    SettingsComponent,\n    AboutComponent,\n    PhaseComponent,\n    ResultsBoatComponent,\n    ResultSubscriberComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n* \\file results.ts\n* $Author: Sixou$\n* $Rev: 1 $\n* $Date: 2017-04-20 17:15:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n\nimport { Entity } from './entity';\nimport { Boat } from './boat';\n\n/**\n * \\class Result\n * \\brief Représentation des resultats\n * \\author Sixou\n * \\version 1\n * \\date 2017-04-20 18:19:00 +0100\n */\n export class ResultBoat {\n   private winTotBoat: number;\n   private winPercentBoat: number;\n   private idBoat: Boat;\n\n\n /**\n  * \\fn     constructor();\n  * \\brief Constructeur qui initialise les attributs du coureur\n  * \\param[in] points Les points du coureur\n  * \\param boat Le bateau du coureur\n  * \\param[in] penalty La pénalité du coureur\n  */\n\n  constructor( winTotBoat: number,  winPercentBoat: number, idBoat: Boat) {\n    this.winTotBoat = winTotBoat;\n    this.winPercentBoat = winPercentBoat;\n    this.idBoat = idBoat;\n  }\n\n  /**\n   * \\fn     getWinTotBoat();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getWinTotBoat(): number {\n    return this.winTotBoat;\n  }\n\n  /**\n   * \\fn     setWinTotBoat();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setWinTotBoat(value: number): void {\n    this.winTotBoat = value;\n  }\n\n  /**\n   * \\fn     getWinPercentBoat();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getWinPercentBoat(): number {\n    return this.winPercentBoat;\n  }\n\n  /**\n   * \\fn     setWinPercentBoat();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setWinPercentBoat(value: number): void {\n    this.winPercentBoat = value;\n  }\n\n  /**\n   * \\fn     getIdBoat();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getIdBoat(): Boat {\n    return this.idBoat;\n  }\n\n  /**\n   * \\fn     setIdBoat();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setIdBoat(value: Boat): void {\n    this.idBoat = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/resultBoat.ts","/**\n* \\file results.ts\n* $Author: Sixou$\n* $Rev: 1 $\n* $Date: 2017-04-20 17:15:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n\nimport { Entity } from './entity';\nimport { Subscriber } from './subscriber';\n\n/**\n * \\class Result\n * \\brief Représentation des resultats\n * \\author Sixou\n * \\version 1\n * \\date 2017-04-20 18:19:00 +0100\n */\n export class ResultSubscriber extends Entity {\n   private winTotSub: number;\n   private winPercentSub: number;\n   private idSub: Subscriber;\n\n\n /**\n  * \\fn     constructor();\n  * \\brief Constructeur qui initialise les attributs du coureur\n  * \\param[in] id L'identifiant de l'entité\n  * \\param[in] points Les points du coureur\n  * \\param boat Le bateau du coureur\n  * \\param[in] penalty La pénalité du coureur\n  */\n\n  constructor(id: number, winTotSub: number, winPercentSub: number, idSub: Subscriber) {\n    super(id); // Appel du constructeur Entity\n    this.winTotSub = winTotSub;\n    this.winPercentSub = winPercentSub;\n    this.idSub = idSub;\n  }\n\n  /**\n   * \\fn     getWinTotSub();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getWinTotSub(): number {\n    return this.winTotSub;\n  }\n\n  /**\n   * \\fn     setWinTotSub();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setWinTotSub(value: number): void {\n    this.winTotSub = value;\n  }\n\n  /**\n   * \\fn     getWinPercentSub();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getWinPercentSub(): number {\n    return this.winPercentSub;\n  }\n\n  /**\n   * \\fn     setWinPercentSub();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setWinPercentSub(value: number): void {\n    this.winPercentSub = value;\n  }\n\n  /**\n   * \\fn     getIdSub();\n   * \\brief Assesseur de l'attribut organization\n   * \\return organization Retourne le nom de l'organisation\n   */\n  public getIdSub(): Subscriber {\n    return this.idSub;\n  }\n\n  /**\n   * \\fn     setIdSub();\n   * \\brief Mutateur de l'attribut organization\n   * \\param[in] organization Le nom de l'organisation\n   */\n  public setIdSub(value: Subscriber): void {\n    this.idSub = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/data/resultSubscriber.ts","/**\n* \\file ucelaboratepairinglist.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-21 11:33:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"./winnerPanel.ts\" />\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { PhaseService } from '../services/phase.service';\nimport { FlightService } from '../services/flight.service';\nimport { SubscriberService } from '../services/subscriber.service';\nimport { BoatService } from '../services/boat.service';\nimport { MatchService } from '../services/match.service';\nimport { RacerService } from '../services/racer.service';\nimport { PenaltyService } from '../services/penalty.service';\n\nimport { Event } from './data/event';\nimport { Phase } from './data/phase';\nimport { Flight } from './data/flight';\nimport { Match } from './data/match';\nimport { Racer } from './data/racer';\nimport { Boat } from './data/boat';\nimport { Subscriber } from './data/subscriber';\nimport { Penalty } from './data/penalty';\n\ndeclare var Date;\ndeclare const TIME_TO_WAIT;\ndeclare const TIME_TO_WAIT_BUTTON;\n\n/**\n * \\class UcElaboratePairingList\n * \\brief UcElaborerPairingList\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-21 11:33:00 +0100\n */\nexport class UcElaboratePairingList {\n  private eventService: EventService;\n  private phaseService: PhaseService;\n  private flightService: FlightService;\n  private subscriberService: SubscriberService;\n  private boatService: BoatService;\n  private matchService: MatchService;\n  private racerService: RacerService;\n  private penaltyService: PenaltyService;\n  private event: {ref: Event};\n  private phase: {ref: Phase};\n  private flight: {ref: Flight};\n  private match: {ref: Match};\n  private racer: {ref: Racer};\n  private winnerPanelIhm: {ref: WinnerPanel};\n  private deleteFlightPanelIhm: {ref: boolean};\n  private penaltyPanelIhm: {ref: boolean};\n  private startTime: {ref: string};\n  private startDate: {ref: string};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs passés par référence, récupère les informations sur les flights et lance l'autocréation et l'autodescruction des matchs\n   * \\param eventService Persistance des événements\n   * \\param phaseService Persistance des phases\n   * \\param flightService Persistance des flights\n   * \\param subscriberService Persistance des subscribers\n   * \\param boatService Persistance des bateaux\n   * \\param matchService Persistance des matchs\n   * \\param racerService Persistance des courses\n   * \\param penaltyService Persistance des pénalités\n   * \\param event représente un événement\n   * \\param phase représente une phase\n   * \\param flight représente un flight\n   * \\param match représente un match\n   * \\param racer représente un concurrent\n   * \\param deleteFlightPanelIhm Variable qui indique le comportement de l'IHM deletePanel\n   * \\param winnerPanelIhm Booléen qui indique le comportement de l'IHM deletePanel\n   * \\param penaltyPanelIhm Booléen qui indique le comportement de l'IHM deletePanel\n   * \\param\n   * \\param\n   */\n  constructor(\n    eventService: EventService, phaseService: PhaseService, flightService: FlightService, subscriberService: SubscriberService,\n     boatService: BoatService, matchService: MatchService, racerService: RacerService, penaltyService: PenaltyService,\n    event: {ref: Event}, phase: {ref: Phase}, flight: {ref: Flight}, match: {ref: Match}, racer: {ref: Racer},\n    deleteFlightPanelIhm: {ref: boolean}, winnerPanelIhm: {ref: WinnerPanel}, penaltyPanelIhm: {ref: boolean}, startTime: {ref: string}, startDate: {ref: string}\n  ) {\n    this.eventService = eventService;\n    this.phaseService = phaseService;\n    this.flightService = flightService;\n    this.subscriberService = subscriberService;\n    this.boatService = boatService;\n    this.matchService = matchService;\n    this.racerService = racerService;\n    this.penaltyService = penaltyService;\n    this.event = event;\n    this.phase = phase;\n    this.flight = flight;\n    this.match = match;\n    this.racer = racer;\n    this.winnerPanelIhm = winnerPanelIhm;\n    this.deleteFlightPanelIhm = deleteFlightPanelIhm;\n    this.penaltyPanelIhm = penaltyPanelIhm;\n    this.startTime = startTime;\n    this.startDate = startDate;\n    this.read();\n    this.autoCreateMatch(this.autoCreateMatch, this.matchService, this.racerService, this.event, this.phase);\n    this.autoDeleteMatch(this.autoDeleteMatch, this.matchService, this.phase);\n  }\n\n  /**\n   * \\fn    createFlight(): void\n   * \\brief Créer un flight\n   */\n  public createFlight(): void {\n    this.flight.ref = new Flight(this.flightService.getNewID(), this.flightService.getNewFlightNumber(), [], '');\n    var flights = this.phase.ref.getFlightsList().slice(0);\n    flights.push(new Flight(this.flight.ref.getId(), this.flight.ref.getFlightNumber(), [], ''));\n    this.phase.ref.setFlightsList(flights.slice(0));\n    this.flightService.create(this.flight.ref);\n    this.flightService.setPhaseID(this.flight.ref, this.phase.ref);\n  }\n\n  /**\n   * \\fn    read(): void\n   * \\brief Initialise toutes les informations sur l'événement sélectionné\n   */\n  public read(): void {\n    this.flightService.readCurrentFlightNumber(this.phase.ref);\n    this.flightService.read(this.phase);\n    this.eventService.readByPhase(this.event, this.phase.ref);\n    this.subscriberService.readByPhase(this.event, this.phase.ref);\n    this.boatService.read(this.event);\n    this.phaseService.readById(this.phase);\n    this.updateMenu(this.updateMenu, this.event, this.phase);\n  }\n\n  private updateMenu(updateMenu, event: {ref: Event}, phase: {ref: Phase}): void{\n    if(event.ref.getId() != 0 && phase.ref.getName() != ''){\n      var menuList = [];\n      menuList.push({title: \"Event: \" + event.ref.getName(), link:\"events-list\"});\n      menuList.push({title: \"Phase: \" + phase.ref.getName(), link:\"phase/\" + phase.ref.getId()});\n      document.getElementById('MenuData').innerHTML = JSON.stringify(menuList);\n    }\n    else\n      setTimeout(updateMenu.bind(null, updateMenu, event, phase), TIME_TO_WAIT);\n  }\n\n  /**\n   * \\fn    deleteFlight(): void\n   * \\brief Supprime le flight selectionné\n   */\n  public deleteFlight(): void {\n    var flights = this.phase.ref.getFlightsList().slice(0);\n    const indexFlights = flights.findIndex(x => x.getId() == this.flight.ref.getId());\n    flights.splice(indexFlights, 1);\n    this.phase.ref.setFlightsList(flights.slice(0));\n    this.flightService.delete(this.flight.ref);\n    this.flightService.readCurrentFlightNumber(this.phase.ref);\n    this.deletePanelHide();\n  }\n\n  /**\n   * \\fn    autoCreateMatch(): void\n   * \\brief crée automatiquement un match lorsque les champs sont remplis\n   */\n  public autoCreateMatch(\n    autoCreateMatch, matchService: MatchService, racerService: RacerService,\n    event: {ref: Event}, phase: {ref: Phase}\n  ): void{\n    var fligths = phase.ref.getFlightsList().slice(0);\n    for (var i = 0; i < fligths.length; i++) {\n      if(fligths[i].getHiddenContent()){\n        if(fligths[i].getBlueSubscriberId() > 0 && fligths[i].getBlueBoatId() > 0 && fligths[i].getYellowSubscriberId() > 0 && fligths[i].getYellowBoatId() > 0){\n          var subscribers = event.ref.getSubscribers().slice(0);\n          var boats = event.ref.getBoatsList().slice(0);\n\n          const indexBlueSubscriber = subscribers.findIndex(x => x.getId() == fligths[i].getBlueSubscriberId());\n          const indexYellowSubscriber = subscribers.findIndex(x => x.getId() == fligths[i].getYellowSubscriberId());\n          const indexBlueBoat = boats.findIndex(x => x.getId() == fligths[i].getBlueBoatId());\n          const indexYellowBoat = boats.findIndex(x => x.getId() == fligths[i].getYellowBoatId());\n          var blueRacer = new Racer(\n            racerService.getNewID(), subscribers[indexBlueSubscriber].getName(), subscribers[indexBlueSubscriber].getCountry(),\n            subscribers[indexBlueSubscriber].getIsaf(), subscribers[indexBlueSubscriber].getRanking(), subscribers[indexBlueSubscriber].getLetter(),\n            0, {ref: boats[indexBlueBoat]}, new Penalty(0, 0, '')\n          );\n          var yellowRacer = new Racer(\n            racerService.getNewID(), subscribers[indexYellowSubscriber].getName(), subscribers[indexYellowSubscriber].getCountry(),\n            subscribers[indexYellowSubscriber].getIsaf(), subscribers[indexYellowSubscriber].getRanking(), subscribers[indexYellowSubscriber].getLetter(),\n            0, {ref: boats[indexYellowBoat]}, new Penalty(0, 0, '')\n          );\n          var match = new Match(matchService.getNewID(), blueRacer, yellowRacer, true, '');\n          var matchsList = fligths[i].getMatchsList().slice(0);\n          matchsList.push(match);\n          fligths[i].setMatchsList(matchsList.slice(0));\n\n          matchService.create(match);\n          matchService.setEventID(match, fligths[i]);\n          racerService.create(match);\n          fligths[i].setBlueSubscriberId(0);\n          fligths[i].setBlueBoatId(0);\n          fligths[i].setYellowSubscriberId(0);\n          fligths[i].setYellowBoatId(0);\n          phase.ref.setFlightsList(fligths.slice(0));\n        }\n      }\n    }\n    setTimeout(autoCreateMatch.bind(null, autoCreateMatch, matchService, racerService, event, phase), TIME_TO_WAIT_BUTTON);\n  }\n\n  /**\n   * \\fn    autoDeleteMatch(): void\n   * \\brief  Détruit automatiquement un match lorsque les champs sont vidés\n   */\n  public autoDeleteMatch(\n    autoDeleteMatch, matchService: MatchService, phase: {ref: Phase}\n  ): void{\n    var fligths = phase.ref.getFlightsList().slice(0);\n    for (var i = 0; i < fligths.length; i++) {\n      if(fligths[i].getHiddenContent()){\n        var matchsList = fligths[i].getMatchsList().slice(0);\n        for (var j = 0; j < matchsList.length; j++) {\n          if(!matchsList[j].getLocked()){\n            if(matchsList[j].getBlueSubscriberId() == -1 && matchsList[j].getBlueBoatId() == -1 && matchsList[j].getYellowSubscriberId() == -1 && matchsList[j].getYellowBoatId() == -1){\n              matchService.delete(matchsList[j]);\n              matchsList.splice(j, 1);\n            }\n          }\n        }\n        fligths[i].setMatchsList(matchsList.slice(0));\n        phase.ref.setFlightsList(fligths.slice(0));\n      }\n\n    }\n    setTimeout(autoDeleteMatch.bind(null, autoDeleteMatch, matchService, phase), TIME_TO_WAIT_BUTTON);\n  }\n\n  /**\n   * \\fn    unlockMatch(): void\n   * \\brief Déverouille le match afin de pouvoir le modifier\n   */\n  public unlockMatch(match: Match): void{\n    match.setLocked(false);\n    var blueRacer = match.getBlue();\n    var yellowRacer = match.getYellow();\n    const indexBlueSubscriber = this.event.ref.getSubscribers().findIndex(\n      x => x.getName() == blueRacer.getName() && x.getCountry() == blueRacer.getCountry()\n      && x.getIsaf() == blueRacer.getIsaf() && x.getRanking() == blueRacer.getRanking()\n      && x.getLetter() == blueRacer.getLetter()\n    );\n    const indexYellowSubscriber = this.event.ref.getSubscribers().findIndex(\n      x => x.getName() == yellowRacer.getName() && x.getCountry() == yellowRacer.getCountry()\n      && x.getIsaf() == yellowRacer.getIsaf() && x.getRanking() == yellowRacer.getRanking()\n      && x.getLetter() == yellowRacer.getLetter()\n    );\n    match.setBlueSubscriberId(this.event.ref.getSubscribers()[indexBlueSubscriber].getId());\n    match.setYellowSubscriberId(this.event.ref.getSubscribers()[indexYellowSubscriber].getId());\n    match.setBlueBoatId(blueRacer.getBoat().getId());\n    match.setYellowBoatId(yellowRacer.getBoat().getId());\n  }\n\n  /**\n   * \\fn    updateMatch(): void\n   * \\brief Met à jour les informations concernant le match\n   */\n  public updateMatch(match: Match): void{\n    var subscribers = this.event.ref.getSubscribers().slice(0);\n    var boats = this.event.ref.getBoatsList().slice(0);\n\n    const indexBlueSubscriber = subscribers.findIndex(x => x.getId() == match.getBlueSubscriberId());\n    const indexYellowSubscriber = subscribers.findIndex(x => x.getId() == match.getYellowSubscriberId());\n    const indexBlueBoat = boats.findIndex(x => x.getId() == match.getBlueBoatId());\n    const indexYellowBoat = boats.findIndex(x => x.getId() == match.getYellowBoatId());\n    var blueRacer = new Racer(\n      match.getBlue().getId(), subscribers[indexBlueSubscriber].getName(), subscribers[indexBlueSubscriber].getCountry(),\n      subscribers[indexBlueSubscriber].getIsaf(), subscribers[indexBlueSubscriber].getRanking(), subscribers[indexBlueSubscriber].getLetter(),\n      0, {ref: boats[indexBlueBoat]}, new Penalty(0, 0, '')\n    );\n    var yellowRacer = new Racer(\n      match.getYellow().getId(), subscribers[indexYellowSubscriber].getName(), subscribers[indexYellowSubscriber].getCountry(),\n      subscribers[indexYellowSubscriber].getIsaf(), subscribers[indexYellowSubscriber].getRanking(), subscribers[indexYellowSubscriber].getLetter(),\n      0, {ref: boats[indexYellowBoat]}, new Penalty(0, 0, '')\n    );\n    match.setBlue(blueRacer);\n    match.setYellow(yellowRacer);\n    match.setLocked(true);\n    this.racerService.update(match);\n  }\n\n  /**\n   * \\fn    deletePanelShow(): void\n   * \\brief Affiche l'IHM deletePanel en récuperant le flight à supprimer\n   * \\param[in] crew L'équipage selectionné pour la suppression\n   */\n  public deletePanelShow(flight: Flight): void {\n    this.flight.ref = new Flight(\n      flight.getId(), flight.getFlightNumber(),\n      flight.getMatchsList(), flight.getStartDateTime()\n    );\n    this.deleteFlightPanelIhm.ref = true;\n    document.body.scrollTop = 0;\n  }\n\n  /**\n   * \\fn    deletePanelHide(): void\n   * \\brief Cache l'IHM deletePanel et vide la variable flight\n   */\n  public deletePanelHide(): void {\n    this.flight.ref = new Flight(0, 0, [], '');\n    this.deleteFlightPanelIhm.ref = false;\n  }\n\n  /**\n   * \\fn    saveWinnerScore(): void\n   * \\brief met à jour l'équipage gagnant dans la base de données en lui ajoutant un point ou met à jour les deux équipages en leur attribuant 0.5 points chacun dans le cas d'un match nul\n   */\n  public saveWinnerScore(): void {\n    this.match.ref.setFinishDateTime(this.winnerPanelIhm.ref.time);\n    switch(this.winnerPanelIhm.ref.scoreBar){\n      case 0:\n        this.match.ref.getBlue().setPoints(1);\n       break;\n      case 1:\n        this.match.ref.getBlue().setPoints(0.5);\n        this.match.ref.getYellow().setPoints(0.5);\n       break;\n      case 2:\n        this.match.ref.getYellow().setPoints(1);\n       break;\n    }\n    var flights = this.phase.ref.getFlightsList();\n    for (var i = 0; i < flights.length; i++) {\n      var matchs = flights[i].getMatchsList()\n      const index = matchs.findIndex(x => x.getId() == this.match.ref.getId());\n      if(index != -1){\n        matchs[index].getBlue().setPoints(this.match.ref.getBlue().getPoints());\n        matchs[index].getYellow().setPoints(this.match.ref.getYellow().getPoints());\n        matchs[index].setFinishDateTime(this.match.ref.getFinishDateTime());\n        i = flights.length;\n      }\n    }\n    this.matchService.update(this.match.ref);\n    this.racerService.update(this.match.ref);\n    this.winnerPanelHide();\n  }\n\n  /**\n   * \\fn    removeWinnerScore(): void\n   * \\brief remet à zéro le nombre de point et de pénalité des deux équipages\n   */\n  public removeWinnerScore(): void {\n    this.match.ref.setFinishDateTime('');\n    this.match.ref.getBlue().setPoints(0);\n    this.match.ref.getBlue().setPenalty(new Penalty(0, 0, ''));\n    this.match.ref.getYellow().setPoints(0);\n    this.match.ref.getYellow().setPenalty(new Penalty(0, 0, ''));\n\n    var flights = this.phase.ref.getFlightsList();\n    for (var i = 0; i < flights.length; i++) {\n      var matchs = flights[i].getMatchsList();\n      const index = matchs.findIndex(x => x.getId() == this.match.ref.getId());\n      if(index != -1){\n        matchs[index].getBlue().setPoints(this.match.ref.getBlue().getPoints());\n        matchs[index].getBlue().setPenalty(new Penalty(0, 0, ''));\n        matchs[index].getYellow().setPoints(this.match.ref.getYellow().getPoints());\n        matchs[index].getYellow().setPenalty(new Penalty(0, 0, ''));\n        matchs[index].setFinishDateTime(this.match.ref.getFinishDateTime());\n        i = flights.length;\n      }\n    }\n    this.matchService.update(this.match.ref);\n    this.racerService.update(this.match.ref);\n    this.deleteWinnerPanelHide();\n  }\n\n  /**\n   * \\fn    winnerPanelShow(): void\n   * \\brief affiche le formulaire de sélection du vainqueur en présélectionnant l'équipage cliqué\n   * \\param[in] match représente le match concerné\n   * \\param[in] racer représente l'équipage sélectionné\n   */\n  public winnerPanelShow(match: Match, racer: string): void {\n    this.winnerPanelIhm.ref.time = new Date().toTimeString().split(' ')[0];\n    this.winnerPanelIhm.ref.hide = false;\n    switch(racer){\n      case 'blue': this.winnerPanelIhm.ref.scoreBar = 0; break;\n      case 'blue/yellow': this.winnerPanelIhm.ref.scoreBar = 1; break;\n      case 'yellow': this.winnerPanelIhm.ref.scoreBar = 2; break;\n    }\n    const blueRacer = match.getBlue();\n    const blueBoat = blueRacer.getBoat();\n    var blueRacerNew = new Racer(\n      blueRacer.getId(), blueRacer.getName(), blueRacer.getCountry(), blueRacer.getIsaf(), blueRacer.getRanking(),\n      blueRacer.getLetter(), blueRacer.getPoints(), {ref: new Boat(blueBoat.getId(), blueBoat.getBoatNumber())},\n      new Penalty(0, 0, '')\n    );\n    const yellowRacer = match.getYellow();\n    const yellowBoat = yellowRacer.getBoat();\n    var yellowRacerNew = new Racer(\n      yellowRacer.getId(), yellowRacer.getName(), yellowRacer.getCountry(), yellowRacer.getIsaf(), yellowRacer.getRanking(),\n      yellowRacer.getLetter(), yellowRacer.getPoints(), {ref: new Boat(yellowBoat.getId(), yellowBoat.getBoatNumber())},\n      new Penalty(0, 0, '')\n    );\n    this.match.ref = new Match(match.getId(), blueRacerNew, yellowRacerNew, match.getLocked(), match.getFinishDateTime());\n    document.body.scrollTop = 0;\n  }\n\n  /**\n   * \\fn    winnerPanelHide(): void\n   * \\brief Cache l'IHM winnerPanel et vide les variables racer et match\n   */\n  public winnerPanelHide(): void {\n    this.winnerPanelIhm.ref.hide = true;\n    this.winnerPanelIhm.ref.time = '';\n    this.winnerPanelIhm.ref.scoreBar = 0;\n    const racer = new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''))\n    this.match.ref = new Match(0, racer, racer, false, '');\n  }\n\n  /**\n   * \\fn    deleteWinnerPanelShow(): void\n   * \\brief Affiche l'IHM deletePanel en récupérant le match dont les scores sont à supprimer\n   * \\param[in] match selectionné pour la suppression des scores\n   */\n  public deleteWinnerPanelShow(match: Match): void {\n    const blueRacer = match.getBlue();\n    const blueBoat = blueRacer.getBoat();\n    var blueRacerNew = new Racer(\n      blueRacer.getId(), blueRacer.getName(), blueRacer.getCountry(), blueRacer.getIsaf(), blueRacer.getRanking(),\n      blueRacer.getLetter(), blueRacer.getPoints(), {ref: new Boat(blueBoat.getId(), blueBoat.getBoatNumber())},\n      new Penalty(0, 0, '')\n    );\n    const yellowRacer = match.getYellow();\n    const yellowBoat = yellowRacer.getBoat();\n    var yellowRacerNew = new Racer(\n      yellowRacer.getId(), yellowRacer.getName(), yellowRacer.getCountry(), yellowRacer.getIsaf(), yellowRacer.getRanking(),\n      yellowRacer.getLetter(), yellowRacer.getPoints(), {ref: new Boat(yellowBoat.getId(), yellowBoat.getBoatNumber())},\n      new Penalty(0, 0, '')\n    );\n    this.match.ref = new Match(match.getId(), blueRacerNew, yellowRacerNew, match.getLocked(), match.getFinishDateTime());\n    this.winnerPanelIhm.ref.deletePanelhide = false;\n    document.body.scrollTop = 0;\n  }\n\n  /**\n   * \\fn    deleteWinnerPanelHide(): void\n   * \\brief Cache l'IHM deletePanel et vide les variables racer et match\n   */\n  public deleteWinnerPanelHide(): void {\n    const racer = new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''))\n    this.match.ref = new Match(0, racer, racer, false, '');\n    this.winnerPanelIhm.ref.deletePanelhide = true;\n  }\n\n  /**\n   * \\fn    getRefRacer(): Racer\n   * \\brief récupère le concurrent sélectionné\n   * \\return racer le concurrent sélectionné\n   */\n  private getRefRacer(): Racer {\n    var flights = this.phase.ref.getFlightsList();\n    var racer: Racer;\n    for (var i = 0; i < flights.length; i++) {\n      var matchs = flights[i].getMatchsList()\n      for (var j = 0; j < matchs.length; j++) {\n        if(matchs[j].getBlue().getId() == this.racer.ref.getId()){\n          racer = matchs[j].getBlue();\n          i = flights.length;\n          j = flights.length;\n        }\n        else if(matchs[j].getYellow().getId() == this.racer.ref.getId()){\n          racer = matchs[j].getYellow();\n          i = flights.length;\n          j = flights.length;\n        }\n      }\n    }\n    return racer;\n  }\n\n  /**\n   * \\fn    createUpdateDeletePenalty(): void\n   * \\brief gère l'ajout, la mise à jour et la suppression des pénalités\n   */\n  private createUpdateDeletePenalty(): void {\n    var penalty = this.racer.ref.getPenalty();\n    var racer = this.getRefRacer();\n\n    if(penalty.getId() == 0 && penalty.getPoints() != 0){\n      //Create\n      penalty.setId(this.penaltyService.getNewID());\n      racer.getPenalty().setId(penalty.getId());\n      racer.getPenalty().setPoints(penalty.getPoints());\n      racer.getPenalty().setDetail(penalty.getDetail());\n      this.penaltyService.create(this.racer.ref);\n    }\n    else{\n      if(penalty.getPoints() == 0){\n        //Delete\n        racer.getPenalty().setId(0);\n        racer.getPenalty().setPoints(0);\n        racer.getPenalty().setDetail('');\n        this.penaltyService.delete(this.racer.ref.getPenalty());\n      }\n      else{\n        //Update\n        racer.getPenalty().setPoints(penalty.getPoints());\n        racer.getPenalty().setDetail(penalty.getDetail());\n        this.penaltyService.update(this.racer.ref);\n      }\n    }\n    this.penaltyPanelIhmHide();\n  }\n\n  /**\n   * \\fn    penaltyPanelIhmShow(): void\n   * \\brief Affiche l'IHM de gestion des pénalités\n   * \\param[in] racer concurrent selectionné\n   */\n  public penaltyPanelIhmShow(racer: Racer): void {\n    this.racer.ref = new Racer(\n      racer.getId(), racer.getName(), racer.getCountry(), racer.getIsaf(), racer.getRanking(),\n      racer.getLetter(), racer.getPoints(), {ref: new Boat(racer.getBoat().getId(), racer.getBoat().getBoatNumber())},\n      new Penalty(racer.getPenalty().getId(), racer.getPenalty().getPoints(), racer.getPenalty().getDetail())\n    );\n    this.penaltyPanelIhm.ref = true;\n    document.body.scrollTop = 0;\n  }\n\n  /**\n   * \\fn    penaltyPanelIhmHide(): void\n   * \\brief Cache l'IHM de gestion des pénalités et vide la variable racer\n   */\n  public penaltyPanelIhmHide(): void {\n    this.racer.ref = new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''));\n    this.penaltyPanelIhm.ref = false;\n  }\n\n  /**\n   * \\fn    detailPanelShowHide(): void\n   * \\brief Affiche les détails du flight sélectionné : match, concurrents, bateaux et pénalité\n   */\n  public detailPanelShowHide(flight: Flight): void {\n    flight.setHiddenContent(flight.getHiddenContent()?false:true);\n    if(flight.getHiddenContent()){\n      this.matchService.read({ref: flight});\n      this.racerService.read({ref: flight});\n      this.boatService.associationBoatsToRacer({ref: flight});\n      this.penaltyService.read({ref: flight});\n    }\n  }\n\n  public getBoatsList(flight: Flight, boatId: number): Boat[]{\n    var boatsList = this.event.ref.getBoatsList().slice(0);\n    var matchsInFlight = flight.getMatchsList();\n    for(var i = 0; i < matchsInFlight.length; i++){\n      const indexBlue = boatsList.findIndex(x => x.getId() == matchsInFlight[i].getBlue().getBoat().getId());\n      boatsList.splice(indexBlue, 1);\n      const indexYellow = boatsList.findIndex(x => x.getId() == matchsInFlight[i].getYellow().getBoat().getId());\n      boatsList.splice(indexYellow, 1);\n    }\n\n    const indexBlueTmp = boatsList.findIndex(x => x.getId() == flight.getBlueBoatId());\n    if(indexBlueTmp != -1)\n      boatsList.splice(indexBlueTmp, 1);\n    const indexYellowTmp = boatsList.findIndex(x => x.getId() == flight.getYellowBoatId());\n    if(indexYellowTmp != -1)\n      boatsList.splice(indexYellowTmp, 1);\n\n    const index = this.event.ref.getBoatsList().findIndex(x => x.getId() == boatId);\n    if(index != -1)\n      boatsList.push(this.event.ref.getBoatsList().slice(0)[index]);\n\n    return boatsList;\n  }\n\n  public getSubscribersList(flight: Flight, subscriberId: number): Subscriber[]{\n    var subscribersList = this.event.ref.getSubscribers().slice(0);\n    var matchsInFlight = flight.getMatchsList();\n    for(var i = 0; i < matchsInFlight.length; i++){\n      const indexBlue = subscribersList.findIndex(x => x.getLetter() == matchsInFlight[i].getBlue().getLetter());\n      subscribersList.splice(indexBlue, 1);\n      const indexYellow = subscribersList.findIndex(x => x.getLetter() == matchsInFlight[i].getYellow().getLetter());\n      subscribersList.splice(indexYellow, 1);\n    }\n\n    const indexBlueTmp = subscribersList.findIndex(x => x.getId() == flight.getBlueSubscriberId());\n    if(indexBlueTmp != -1)\n      subscribersList.splice(indexBlueTmp, 1);\n    const indexYellowTmp = subscribersList.findIndex(x => x.getId() == flight.getYellowSubscriberId());\n    if(indexYellowTmp != -1)\n      subscribersList.splice(indexYellowTmp, 1);\n    const index = this.event.ref.getSubscribers().findIndex(x => x.getId() == subscriberId);\n    if(index != -1)\n      subscribersList.push(this.event.ref.getSubscribers().slice(0)[index]);\n    return subscribersList;\n  }\n\n  public createStartDateTime(flight: Flight){\n    if(this.startDate.ref == '' || this.startTime.ref == ''){\n      this.startDate.ref = new Date().yyyymmdd();\n      this.startTime.ref = new Date().toTimeString().split(' ')[0];;\n    }\n    flight.setStartDateTime(this.startDate.ref + ' ' + this.startTime.ref);\n    this.flightService.update(flight);\n    this.startDate.ref = '';\n    this.startTime.ref = '';\n  }\n\n  public deleteStartDateTime(flight: Flight){\n    flight.setStartDateTime('');\n    this.flightService.update(flight);\n  }\n\n  public getMaxFligthInArray(): number{\n    const numberMax = Math.max.apply(Math,this.phase.ref.getFlightsList().map(this.getNumberOfFligth));\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(numberMax)?numberMax:0;\n  }\n\n  private getNumberOfFligth(flight: Flight): number{\n    return flight.getFlightNumber();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/ucelaboratepairinglist.ts","/**\n* \\file ucmanagecrews.ts\n* $Author: Zarzitski$\n* $Rev: 2 $\n* $Date: 2017-04-01 20:53:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { Entity } from './data/entity';\nimport { Crew } from './data/crew';\nimport { CrewService } from '../services/crew.service';\n\n/**\n * \\class UcManageCrews\n * \\brief UcGererEquipage\n * \\author Zarzitski\n * \\version 3\n * \\date 2017-04-05 08:45:00 +0100\n */\nexport class UcManageCrews {\n  private crewService: CrewService;\n  private crews: {ref: Crew[]};\n  private crew: {ref: Crew};\n  private crewPanelIhm: {ref: boolean};\n  private editMode: {ref: boolean};\n  private deletePanelIhm: {ref: boolean};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs passés par référence et récupère la liste des équipages\n   * \\param crewsService La persistance des équipages\n   * \\param crews Liste des équipages\n   * \\param crew Stockage de l'equipage selectionné\n   * \\param crewPanelIhm Variable qui indique le comportement de l'IHM crewPanel\n   * \\param editMode Variable qui indique si on est en mode édition ou création\n   * \\param deletePanelIhm Variable qui indique le comportement de l'IHM deletePanel\n   */\n  constructor(\n              crewService: CrewService,\n              crews: {ref: Crew[]},\n              crew: {ref: Crew},\n              crewPanelIhm: {ref: boolean},\n              editMode: {ref: boolean},\n              deletePanelIhm: {ref: boolean}\n  ) {\n    this.crewService = crewService;\n    this.crews = crews;\n    this.crew = crew;\n    this.crewPanelIhm = crewPanelIhm;\n    this.editMode = editMode;\n    this.deletePanelIhm = deletePanelIhm;\n    this.read();\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   */\n  public create(): void {\n    if(this.testCrewPanel()){\n      this.crew.ref.setId(this.crewService.getNewID());\n      this.crewService.create(this.crew.ref);\n      this.crews.ref.push(\n        new Crew(this.crew.ref.getId(), this.crew.ref.getName(), this.crew.ref.getCountry(), this.crew.ref.getIsaf(), +this.crew.ref.getRanking())\n      );\n      this.crewPanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    update(): void\n   * \\brief Met à jour l'équipage selectionné\n   */\n  public update(): void {\n    if(this.testCrewPanel()){\n      const index = this.crews.ref.findIndex(x => x.getId() === this.crew.ref.getId());\n      this.crews.ref[index] = new Crew(\n        this.crew.ref.getId(), this.crew.ref.getName(), this.crew.ref.getCountry(), this.crew.ref.getIsaf(), +this.crew.ref.getRanking()\n      );\n      this.crewService.update(this.crew.ref);\n      this.crewPanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    testCrewPanel(): boolean\n   * \\brief Test les champs du formulaire CrewPanel et affiche les erreurs\n   * \\return testResult Retourne le resultat du test\n   */\n  public testCrewPanel(): boolean {\n    var testResult = true;\n    if(!/^[A-Za-z0-9-]{2,}[A-Za-z0-9-]*$/.test(this.crew.ref.getName())){\n      testResult = false;\n      alert('The name contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[A-Z]{2}$/.test(this.crew.ref.getCountry())){\n      testResult = false;\n      alert('The Country contains unauthorized country.');\n    }\n    if(!/^[A-Za-z0-9-]*$/.test(this.crew.ref.getIsaf())){\n      testResult = false;\n      alert('The ISAF contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[0-5]{1}$/.test(this.crew.ref.getRanking().toString())){\n      testResult = false;\n      alert('The ranking contains unauthorized number, please correct it with the allowed number (\"0-5\")');\n    }\n    return testResult;\n  }\n\n  /**\n   * \\fn    read(): void\n   * \\brief Initialise tous les équipages sauvegardés\n   */\n  public read(): void {\n    this.crewService.read(this.crews);\n  }\n\n  /**\n   * \\fn    delete(): void\n   * \\brief Supprime l'équipage selectionné\n   */\n  public delete(): void {\n    const index = this.crews.ref.findIndex(x => x.getId() === this.crew.ref.getId());\n    this.crewService.delete(this.crew.ref);\n    this.crews.ref.splice(index, 1);\n    this.deletePanelHide();\n  }\n\n  /**\n   * \\fn    createCrewPanel(): void\n   * \\brief Affiche l'IHM crewPanel en mode création\n   */\n  protected createCrewPanel(): void  {\n    this.crewPanelShowHide();\n    this.editMode.ref = false;\n  }\n\n  /**\n   * \\fn    editCrewPanel(): void\n   * \\brief Affiche l'IHM crewPanel en mode édition en récuperant l'équipage à modifier\n   * \\param[in] crew L'équipage selectionné pour la modification\n   */\n  protected editCrewPanel(crew: Crew): void  {\n    this.crewPanelShowHide();\n    this.crew.ref = new Crew(crew.getId(), crew.getName(), crew.getCountry(), crew.getIsaf(), crew.getRanking());\n    this.editMode.ref = true;\n  }\n\n  /**\n   * \\fn    crewPanelShowHide(): void\n   * \\brief Affiche l'IHM crewPanel et vide la variable crew\n   */\n  protected crewPanelShowHide(): void  {\n    this.crew.ref = new Crew(0, '', '', '', 0);\n    this.crewPanelIhm.ref = this.crewPanelIhm.ref ? false : true;\n  }\n\n  /**\n   * \\fn    deletePanelShow(): void\n   * \\brief Affiche l'IHM deletePanel en récuperant l'équipage à supprimer\n   * \\param[in] crew L'équipage selectionné pour la suppression\n   */\n  protected deletePanelShow(crew: Crew): void  {\n    this.crew.ref = new Crew(crew.getId(), crew.getName(), crew.getCountry(), crew.getIsaf(), crew.getRanking());\n    this.deletePanelIhm.ref = true;\n  }\n\n  /**\n   * \\fn    deletePanelHide(): void\n   * \\brief Cache l'IHM deletePanel et vide la variable crew\n   */\n  protected deletePanelHide(): void  {\n    this.crew.ref = new Crew(0, '', '', '', 0);\n    this.deletePanelIhm.ref = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/ucmanagecrews.ts","/**\n* \\file ucorganizeevent.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-13 21:34:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { SettingsService } from '../services/settings.service';\nimport { CrewService } from '../services/crew.service';\nimport { SubscriberService } from '../services/subscriber.service';\nimport { BoatService } from '../services/boat.service';\n\nimport { Event } from './data/event';\nimport { Settings } from './data/settings';\nimport { Crew } from './data/crew';\nimport { Subscriber } from './data/subscriber';\n\ndeclare var Date;\ndeclare const TIME_TO_WAIT_BUTTON;\n\n/**\n * \\class UcOrganizeEvent\n * \\brief UcOrganiserEpreuve\n * \\author Zarzitski\n * \\version 2\n * \\date 2017-04-23 16:18:00 +0100\n */\nexport class UcOrganizeEvent {\n  private eventService: EventService;\n  private settingsService: SettingsService;\n  private crewService: CrewService;\n  private subscriberService: SubscriberService;\n  private boatService: BoatService;\n  private events: {ref: Event[]};\n  private event: {ref: Event};\n  private settings: {ref: Settings};\n  private crews: {ref: Crew[]};\n  private eventPanelIhm: {ref: boolean};\n  private deleteEventPanelIhm: {ref: boolean};\n  private editMode: {ref: boolean};\n  private crewId: {ref: number};\n  private crewLetter: {ref: string};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs passés par référence et récupère les informations concernant l'événement\n   * \\param eventService persistance des événements\n   * \\param settingsService persistance des paramètres\n   * \\param crewService persistance des équipages\n   * \\param subscriberService persistance des participants\n   * \\param boatService persistance des bateaux\n   * \\param eventPanelIhm booleen qui indique le comportement de l'IHM évenement\n   * \\param editMode booleen qui indique si le mode édition est sélectionné ou non\n   * \\param deleteEventPanelIhm booleen qui indique si une suppression est demandée\n   * \\param crewId identifiant du bateau\n   * \\param crewLetter lettre du bateau\n   */\n  constructor(\n    eventService: EventService, settingsService: SettingsService, crewService: CrewService, subscriberService: SubscriberService, boatService: BoatService,\n    events: {ref: Event[]}, event: {ref: Event}, settings: {ref: Settings}, crews: {ref: Crew[]},\n    eventPanelIhm: {ref: boolean}, editMode: {ref: boolean}, deleteEventPanelIhm: {ref: boolean},\n    crewId: {ref: number}, crewLetter: {ref: string}\n  ) {\n    this.eventService = eventService;\n    this.settingsService = settingsService;\n    this.crewService = crewService;\n    this.subscriberService = subscriberService;\n    this.boatService = boatService;\n    this.events = events;\n    this.event = event;\n    this.settings = settings;\n    this.crews = crews;\n    this.eventPanelIhm = eventPanelIhm;\n    this.editMode = editMode;\n    this.deleteEventPanelIhm = deleteEventPanelIhm;\n    this.crewId = crewId;\n    this.crewLetter = crewLetter;\n    this.read();\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un événement\n   */\n  public create(): void {\n    if(this.testEventPanel()){\n      this.event.ref.setId(this.eventService.getNewID());\n      this.eventService.create(this.event.ref);\n      this.subscriberService.create(this.event.ref);\n      this.boatService.create(this.event.ref);\n      this.events.ref.push(\n        new Event(\n          this.event.ref.getId(), this.event.ref.getName(), this.event.ref.getOrganization(), this.event.ref.getLocation(), this.event.ref.getRanking(), this.event.ref.getNumberBoats(), this.event.ref.getDate(),\n          this.event.ref.getSubscribers(), this.event.ref.getPhasesList(), this.event.ref.getTimeManagement()\n        )\n      );\n      this.eventPanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    update(): void\n   * \\brief Met à jour la liste des événements\n   */\n  public update(): void {\n    if(this.testEventPanel()){\n      const index = this.events.ref.findIndex(x => x.getId() == this.event.ref.getId());\n      this.events.ref[index] = new Event(\n        this.event.ref.getId(), this.event.ref.getName(), this.event.ref.getOrganization(), this.event.ref.getLocation(), this.event.ref.getRanking(), this.event.ref.getNumberBoats(), this.event.ref.getDate(),\n        this.event.ref.getSubscribers(), this.event.ref.getPhasesList(), this.event.ref.getTimeManagement()\n      );\n      this.eventService.update(this.event.ref);\n      this.subscriberService.update(this.event.ref);\n      this.boatService.create(this.event.ref);\n      this.eventPanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    testEventPanel(): boolean\n   * \\brief Test les champs du formulaire EventPanel et affiche les erreurs\n   * \\return testResult Retourne le resultat du test\n   */\n  public testEventPanel(): boolean {\n    var testResult = true;\n    if(!/^[A-Za-z0-9- ]{2,}[A-Za-z0-9-]*$/.test(this.event.ref.getName())){\n      testResult = false;\n      alert('The event name contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[A-Za-z0-9- ]{2,}[A-Za-z0-9-]*$/.test(this.event.ref.getOrganization())){\n      testResult = false;\n      alert('The event organization name contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[A-Za-z0-9- ]{2,}[A-Za-z0-9-]*$/.test(this.event.ref.getLocation())){\n      testResult = false;\n      alert('The event location contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n    }\n    if(!/^[0-5]{1}$/.test(this.event.ref.getRanking().toString())){\n      testResult = false;\n      alert('The ranking contains unauthorized number, please correct it with the allowed number (\"0-5\")');\n    }\n    if(!/^[1-9]{1,}[0-9]*$/.test(this.event.ref.getNumberBoats().toString())){\n      testResult = false;\n      alert('The boats contains unauthorized number, please correct it with the allowed number');\n    }\n    if(!/^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(this.event.ref.getDate())){\n      testResult = false;\n      alert('The date contains unauthorized format, please correct it with the allowed format (\"YYYY-MM-DD\")');\n    }\n    return testResult;\n  }\n\n  /**\n   * \\fn    read(): void\n   * \\brief Initialise tous les paramètres, événements et équipages sauvegardés\n   */\n  public read(): void {\n    this.settingsService.read(this.settings);\n    this.eventService.read(this.events);\n    this.crewService.read(this.crews);\n  }\n\n  /**\n   * \\fn    delete(): void\n   * \\brief Supprime l'événement selectionné\n   */\n  public delete(): void {\n    const index = this.events.ref.findIndex(x => x.getId() == this.event.ref.getId());\n    this.eventService.delete(this.event.ref);\n    this.subscriberService.delete(this.event.ref);\n    this.events.ref.splice(index, 1);\n    this.deletePanelHide();\n  }\n\n  /**\n   * \\fn    createCrewPanel(): void\n   * \\brief Affiche l'IHM crewPanel en mode création\n   */\n  public createEventPanel(): void {\n    this.eventPanelShowHide();\n    this.editMode.ref = false;\n  }\n\n  /**\n   * \\fn    editCrewPanel(): void\n   * \\brief Affiche l'IHM crewPanel en mode édition en récuperant l'événement à modifier\n   * \\param[in] event L'événement selectionné pour la modification\n   */\n  public editEventPanel(event: Event): void {\n    this.eventPanelShowHide();\n    this.event.ref = new Event(\n      event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(),\n      event.getSubscribers().slice(0), event.getPhasesList(), event.getTimeManagement()\n    );\n    this.subscriberService.read(this.event);\n    this.editMode.ref = true;\n  }\n\n  /**\n   * \\fn    eventPanelShowHide(): void\n   * \\brief Affiche l'IHM crewPanel et vide les variables crewId et crewLetter\n   */\n  public eventPanelShowHide(): void {\n    const date = new Date();\n    this.event.ref = new Event(\n      0,'', this.settings.ref.getOrganization(), this.settings.ref.getLocation(), 0, this.settings.ref.getAmountBoats(),\n      date.yyyymmdd(), [], [], this.settings.ref.getTimeManagement()\n    );\n    this.crewId.ref = 0;\n    this.crewLetter.ref = '';\n    this.eventPanelIhm.ref = this.eventPanelIhm.ref ? false : true;\n    this.addSubscriberEvent(this.addSubscriberEvent, this.subscriberService, this.crewLetter, this.crewId, this.crews, this.event, this.eventPanelIhm);\n  }\n\n  /**\n   * \\fn    addSubscriberEvent(): void\n   * \\brief ajoute un participant à l'événement\n   * \\param[in] addSubscriberEvent fonction addSubscriberEvent\n   * \\param[in] subscriberService Persistance des participants\n   * \\param[in] crewLetter lettre de l'équipage\n   * \\param[in] crewId identifiant de l'équipage\n   * \\param[in] crews Liste des équipages\n   * \\param[in] event Liste des événements\n   * \\param[in] eventPanelIhm Etat de l'ihm de gestion des événements\n   */\n  public addSubscriberEvent(addSubscriberEvent, subscriberService: SubscriberService, crewLetter: {ref: string}, crewId: {ref: number}, crews: {ref: Crew[]}, event: {ref: Event}, eventPanelIhm: {ref: boolean}): void{\n    if(crewLetter.ref != '' && crewId.ref != 0){\n      const index = crews.ref.findIndex(x => x.getId() == crewId.ref);\n      var subscribers = event.ref.getSubscribers().slice(0);\n      subscribers.push(new Subscriber(subscriberService.getNewID(), crews.ref[index].getName(), crews.ref[index].getCountry(), crews.ref[index].getIsaf(), crews.ref[index].getRanking(), crewLetter.ref));\n      event.ref.setSubscribers(subscribers.slice(0));\n      crewLetter.ref = '';\n      crewId.ref = 0;\n    }\n    if(!eventPanelIhm.ref)\n      setTimeout(addSubscriberEvent.bind(null, addSubscriberEvent, subscriberService, crewLetter, crewId, crews, event, eventPanelIhm), TIME_TO_WAIT_BUTTON);\n  }\n\n  /**\n   * \\fn    removeSubscriberEvent(): void\n   * \\brief Supprime le participant sélectionné\n   * \\param[in] subscriber participant sélectionné\n   */\n  public removeSubscriberEvent(subscriber: Subscriber): void{\n    var subscribers = this.event.ref.getSubscribers().slice(0);\n    const index = subscribers.findIndex(x => x.getId() == subscriber.getId());\n    subscribers.splice(index, 1);\n    this.event.ref.setSubscribers(subscribers.slice(0));\n  }\n\n  /**\n   * \\fn    deletePanelShow(): void\n   * \\brief Affiche l'IHM deletePanel en récuperant l'événement à supprimer\n   * \\param[in] event événement selectionné pour la suppression\n   */\n  public deletePanelShow(event: Event): void {\n    this.event.ref = new Event(\n      event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(),\n      event.getSubscribers(), event.getPhasesList(), event.getTimeManagement()\n    );\n    this.deleteEventPanelIhm.ref = true;\n  }\n\n  /**\n   * \\fn    deletePanelHide(): void\n   * \\brief Cache l'IHM deletePanel et vide la variable event\n   */\n  public deletePanelHide(): void {\n    this.event.ref = new Event(0,'', '', '', 0, 1, '', [], [], false);\n    this.deleteEventPanelIhm.ref = false;\n  }\n\n  /**\n   * \\fn    detailPanelShowHide(): void\n   * \\brief affiche et cache les détails de l'événement sélectionné\n   */\n  public detailPanelShowHide(event: Event): void {\n    event.setHiddenContent(event.getHiddenContent()?false:true);\n  }\n\n  public getLattersList(): string[]{\n    var letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n    var subscribersInEvent = this.event.ref.getSubscribers();\n    for(var i = 0; i < subscribersInEvent.length; i++){\n      const index = letters.findIndex(x => x == subscribersInEvent[i].getLetter());\n      letters.splice(index, 1);\n    }\n    return letters;\n  }\n\n  public getCrewsList(): Crew[]{\n    var crewsList = this.crews.ref.slice(0);\n    var subscribersInEvent = this.event.ref.getSubscribers();\n    for(var i = 0; i < subscribersInEvent.length; i++){\n      const index = crewsList.findIndex(x =>\n        x.getName() == subscribersInEvent[i].getName() &&\n        x.getCountry() == subscribersInEvent[i].getCountry() &&\n        x.getIsaf() == subscribersInEvent[i].getIsaf() &&\n        x.getRanking() == subscribersInEvent[i].getRanking()\n      );\n      crewsList.splice(index, 1);\n    }\n    return crewsList;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/ucorganizeevent.ts","/**\n* \\file ucorganizephase.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-17 13:51:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { PhaseService } from '../services/phase.service';\n\nimport { Event } from './data/event';\nimport { Phase } from './data/phase';\n\ndeclare const TIME_TO_WAIT;\n\n/**\n * \\class UcOrganizePhase\n * \\brief UcOrganiserPhase\n * \\author Zarzitski\n * \\version 1\n * \\date 2017-04-13 21:34:00 +0100\n */\nexport class UcOrganizePhase {\n  private phaseService: PhaseService;\n  private events: {ref: Event[]};\n  private event: {ref: Event};\n  private phase: {ref: Phase};\n  private phasePanelIhm: {ref: boolean};\n  private deletePhasePanelIhm: {ref: boolean};\n  private editMode: {ref: boolean};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui initialise les attributs passés par référence et récupère les informations concernant les phases\n   * \\param phaseService La persistance des phases\n   * \\param events Liste des événements\n   * \\param event événement selectionné\n   * \\param phase phase sélectionné\n   * \\param phasePanelIhm booleen qui indique le comportement de l'IHM phase\n   * \\param editMode booleen qui indique si le mode édition est sélectionné ou non\n   * \\param deleteEventPanelIhm booleen qui indique si une suppression est demandée\n   */\n  constructor(\n    phaseService: PhaseService, events: {ref: Event[]}, event: {ref: Event}, phase: {ref: Phase},\n    phasePanelIhm: {ref: boolean}, editMode: {ref: boolean}, deletePhasePanelIhm: {ref: boolean}\n  ) {\n    this.phaseService = phaseService;\n    this.events = events;\n    this.event = event;\n    this.phase = phase;\n    this.phasePanelIhm = phasePanelIhm;\n    this.editMode = editMode;\n    this.deletePhasePanelIhm = deletePhasePanelIhm;\n    this.read(this.read, this.phaseService, this.events);\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer une phase\n   */\n  public create(): void {\n    if(this.testPhasePanel()){\n      const index = this.events.ref.findIndex(x => x.getId() == this.event.ref.getId());\n      var phases = this.event.ref.getPhasesList().slice(0);\n      this.phase.ref.setId(this.phaseService.getNewID());\n      phases.push(new Phase(this.phase.ref.getId(), this.phase.ref.getName(), this.phase.ref.getRoundRobin(), this.phase.ref.getFlightsList()));\n      this.events.ref[index].setPhasesList(phases.slice(0));\n      this.phaseService.create(this.phase.ref);\n      this.phaseService.setEventID(this.phase.ref, this.event.ref);\n      this.phasePanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    update(): void\n   * \\brief Met à jour la phase selectionnée\n   */\n  public update(): void {\n    if(this.testPhasePanel()){\n      const indexEvent = this.events.ref.findIndex(x => x.getId() == this.event.ref.getId());\n      var phases = this.event.ref.getPhasesList().slice(0);\n      const indexPhases = phases.findIndex(x => x.getId() == this.phase.ref.getId());\n      phases[indexPhases] = new Phase(this.phase.ref.getId(), this.phase.ref.getName(), this.phase.ref.getRoundRobin(), this.phase.ref.getFlightsList());\n      this.events.ref[indexEvent].setPhasesList(phases.slice(0));\n      this.phaseService.update(this.phase.ref);\n      this.phasePanelShowHide();\n    }\n  }\n\n  /**\n   * \\fn    testPhasePanel(): boolean\n   * \\brief Test les champs du formulaire testPhasePanel et affiche les erreurs\n   * \\return testResult Retourne le resultat du test\n   */\n  public testPhasePanel(): boolean {\n    var testResult = true;\n    if(!/^[A-Za-z0-9-]{2,}[A-Za-z0-9- ]*$/.test(this.phase.ref.getName())){\n      alert('The phase name contains unauthorized characters, please correct it with the allowed characters (\"A-Z\", \"a-z\", \"0-9\", \"-\").');\n      testResult = false;\n    }\n    return testResult;\n  }\n\n  /**\n   * \\fn    read(): void\n   * \\brief Initialise toutes les phases sauvegardés\n   */\n  public read(read, phaseService, events): void {\n    if(events.ref == []){\n      setTimeout(read.bind(null, read, phaseService, events), TIME_TO_WAIT);\n    }\n    else{\n      phaseService.read(events);\n    }\n  }\n\n  /**\n   * \\fn    delete(): void\n   * \\brief Supprime la phase selectionnée\n   */\n  public delete(): void {\n    const indexEvent = this.events.ref.findIndex(x => x.getId() == this.event.ref.getId());\n    var phases = this.event.ref.getPhasesList().slice(0);\n    const indexPhases = phases.findIndex(x => x.getId() == this.phase.ref.getId());\n    phases.splice(indexPhases, 1);\n    this.events.ref[indexEvent].setPhasesList(phases.slice(0));\n    this.phaseService.delete(this.phase.ref);\n    this.deletePanelHide();\n  }\n\n  /**\n   * \\fn    createPhasePanel(): void\n   * \\brief Ajoute une phase\n   */\n  protected createPhasePanel(event: Event): void {\n    this.phasePanelShowHide();\n    this.event.ref = new Event(\n      event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(),\n      event.getSubscribers(), event.getPhasesList(), event.getTimeManagement()\n    );\n    this.editMode.ref = false;\n  }\n\n  /**\n   * \\fn    editPhasePanel(): void\n   * \\brief Modifie une phase\n   * \\param[in] phase phase selectionné pour la modification\n   * \\param[in] event événement dans lequel se trouve la phase sélectionnée\n   */\n  protected editPhasePanel(phase: Phase, event: Event): void {\n    this.phasePanelShowHide();\n    this.event.ref = new Event(\n      event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(),\n      event.getSubscribers(), event.getPhasesList(), event.getTimeManagement()\n    );\n    this.phase.ref = new Phase(phase.getId(), phase.getName(), phase.getRoundRobin(), phase.getFlightsList());\n    this.editMode.ref = true;\n  }\n\n  /**\n   * \\fn    phasePanelShowHide(): void\n   * \\brief Affiche et cache l'IHM phasePanel et vide la variable phase\n   */\n  protected phasePanelShowHide(): void {\n    this.phase.ref = new Phase(0, '', false, []);\n    this.phasePanelIhm.ref = this.phasePanelIhm.ref ? false : true;\n  }\n\n  /**\n   * \\fn    deletePanelShow(): void\n   * \\brief Supprime une phase\n   * \\param[in] phase phase selectionné pour la suppression\n   * \\param[in] event événement dans lequel se trouve la phase selectionné pour la suppression\n   */\n  protected deletePanelShow(phase: Phase, event: Event): void {\n    this.event.ref = new Event(\n      event.getId(), event.getName(), event.getOrganization(), event.getLocation(), event.getRanking(), event.getNumberBoats(), event.getDate(),\n      event.getSubscribers(), event.getPhasesList(), event.getTimeManagement()\n    );\n    this.phase.ref = new Phase(phase.getId(), phase.getName(), phase.getRoundRobin(), phase.getFlightsList());\n    this.deletePhasePanelIhm.ref = true;\n  }\n\n  /**\n   * \\fn    deletePanelHide(): void\"'('''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''')'\n   * \\brief Cache l'IHM deletePanel et vide la variable phase\n   */\n  protected deletePanelHide(): void {\n    this.phase.ref = new Phase(0, '', false, []);\n    this.deletePhasePanelIhm.ref = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/class/ucorganizephase.ts","/**\n* \\file flight.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-17 14:24:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Phase } from '../class/data/phase';\nimport { Flight } from '../class/data/flight';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class FlightService extends CRUD {\n  private currentFlightNumber: {ref: number};\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('FlightService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Flight ( id INTEGER PRIMARY KEY AUTOINCREMENT, phase INTEGER, flightNumber INTEGER, startDateTime TEXT, FOREIGN KEY(phase) REFERENCES Phase(id) )',\n    'Flight');\n    this.divID = 'FlightService';\n  }\n\n  /**\n   * \\fn    readCurrentFlightNumber();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  public readCurrentFlightNumber(phase: Phase){\n    this.currentFlightNumber = {ref: 0};\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +phase.getId();\n    if(phaseID > 0){\n      requestSQL.request = '\\\n      SELECT MAX(flightNumber) as currentFlightNumber \\\n      FROM Flight F, Phase P, Event E \\\n      WHERE F.phase = P.id  AND E.id = P.event AND \\\n      E.id = (SELECT event FROM Phase WHERE id = ' + phaseID + ')';\n      if(!document.getElementById('CurrentFlightNumber'))\n        document.getElementById(\"data\").innerHTML += '<div id=\"CurrentFlightNumber\" style=\"background-color: orange; margin: 10px;\"></div>';\n      this.readDB(requestSQL, this.currentFlightNumber, this.updateCurrentFlightNumber, 'CurrentFlightNumber');\n    }\n  }\n\n  /**\n   * \\fn    updateCurrentFlightNumber();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  private updateCurrentFlightNumber(currentFlightNumber: {ref: number}, divID: string){\n    currentFlightNumber.ref = JSON.parse(document.getElementById(divID).innerHTML)[0].currentFlightNumber;\n    document.getElementById(divID).innerHTML = '';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(flight: Flight): void {\n     this.writeDB([\n       'INSERT INTO Flight(id, flightNumber, startDateTime) VALUES (?, ?, ?)',\n       [flight.getId(), flight.getFlightNumber(), flight.getStartDateTime()]\n     ]);\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public setPhaseID(flight: Flight, phase: Phase): void {\n     this.writeDB([\n       'UPDATE Flight SET phase = ?, flightNumber = ? WHERE id = ?',\n       [phase.getId(), flight.getFlightNumber(), flight.getId()]\n     ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(phase: {ref: Phase}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const phaseID = +phase.ref.getId();\n    if(phaseID > 0){\n      requestSQL.request = 'SELECT * FROM Flight WHERE phase = ' + phaseID + ' ORDER BY id';\n      this.readDB(requestSQL, phase, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(phase: {ref: Phase}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    for (var i = 0; i < data.length; i++) {\n      var fligths = phase.ref.getFlightsList().slice(0);\n      fligths.push( new Flight(data[i].id, data[i].flightNumber, [], data[i].startDateTime));\n      phase.ref.setFlightsList(fligths.slice(0));\n    }\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(flight: Flight): void {\n    this.writeDB([\n      'UPDATE Flight SET flightNumber = ?, startDateTime = ? WHERE id = ?',\n      [flight.getFlightNumber(), flight.getStartDateTime(), flight.getId()]\n    ]);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(flight: Flight): void {\n    const flightID = +flight.getId();\n    if(flightID > 0){\n     this.writeDB(['DELETE FROM Penalty \\\n     WHERE id in (\\\n       SELECT R.penalty FROM Racer R, Matchs M \\\n       WHERE R.matchs = M.id AND M.flight = ' + flightID + ')',\n     []]);\n     this.writeDB(['DELETE FROM Racer \\\n     WHERE matchs = (SELECT id FROM Matchs WHERE flight = ' + flightID + ')',[]]);\n     this.writeDB(['DELETE FROM Matchs \\\n     WHERE flight = ?',[flightID]]);\n     this.writeDB(['DELETE FROM Flight \\\n     WHERE id = ?',[flightID]]);\n   }\n  }\n\n  /**\n   * \\fn    getNewID();\n   * \\brief Supprime l'entité\n   * \\param[in] entity L'entité qui doit être supprimé\n   */\n  public getNewFlightNumber(): number{\n    this.currentFlightNumber.ref = this.currentFlightNumber.ref + 1;\n    return this.currentFlightNumber.ref;\n  }\n\n  /**\n   * \\fn    getNewID();\n   * \\brief Supprime l'entité\n   * \\param[in] entity L'entité qui doit être supprimé\n   */\n  public getLastFlightNumber(): number{\n    return this.currentFlightNumber.ref;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/flight.service.ts","/**\n* \\file match.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-23 14:40:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Match } from '../class/data/match';\nimport { Flight } from '../class/data/flight';\nimport { Racer } from '../class/data/racer';\nimport { Boat } from '../class/data/boat';\nimport { Penalty } from '../class/data/penalty';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class MatchService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('MatchService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Matchs ( id INTEGER PRIMARY KEY AUTOINCREMENT, flight INTEGER, locked INTEGER, finishDateTime INTEGER,\\\n     FOREIGN KEY(flight) REFERENCES Flight(id) )',\n    'Matchs');\n    this.divID = 'MatchService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(match: Match): void {\n     this.writeDB([\n       'INSERT INTO Matchs(id, locked, finishDateTime) VALUES (?, ?, ?)',\n       [match.getId(), match.getLocked(), match.getFinishDateTime()]\n     ]);\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public setEventID(match: Match, flight: Flight): void {\n     this.writeDB([\n       'UPDATE Matchs SET flight = ? WHERE id = ?',\n       [flight.getId(), match.getId()]\n     ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(flight: {ref: Flight}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const flightID = +flight.ref.getId();\n    if(flightID > 0){\n      requestSQL.request = '\\\n      SELECT * FROM Matchs \\\n      WHERE flight = ' + flightID + ' \\\n      ORDER BY id';\n      this.readDB(requestSQL, flight, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(flight: {ref: Flight}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    var matchs = [];\n    const racer = new Racer(0, '', '', '', 0, '', 0, {ref: new Boat(0, 0)}, new Penalty(0, 0, ''))\n    for (var i = 0; i < data.length; i++) {\n      matchs.push(new Match(data[i].id, racer, racer, data[i].locked, data[i].finishDateTime));\n    }\n    flight.ref.setMatchsList(matchs.slice(0));\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(match: Match): void {\n    this.writeDB([\n      'UPDATE Matchs SET locked = ?, finishDateTime = ? WHERE id = ?',\n      [match.getLocked(), match.getFinishDateTime(), match.getId()]\n    ]);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(match: Match): void {\n    const matchID = +match.getId();\n    if(matchID > 0){\n      this.writeDB(['DELETE FROM Penalty \\\n      WHERE id in (SELECT penalty FROM Racer WHERE matchs = ' + matchID + ')',[]]);\n      this.writeDB(['DELETE FROM Racer \\\n      WHERE matchs = ?',[matchID]]);\n      this.writeDB(['DELETE FROM Matchs WHERE id = ?',[matchID]]);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/match.service.ts","/**\n* \\file penalty.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-23 15:51:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Racer } from '../class/data/racer';\nimport { Match } from '../class/data/match';\nimport { Flight } from '../class/data/flight';\nimport { Boat } from '../class/data/boat';\nimport { Penalty } from '../class/data/penalty';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class PenaltyService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('PenaltyService','\\\n    CREATE TABLE IF NOT EXISTS \\\n    Penalty ( id INTEGER PRIMARY KEY AUTOINCREMENT, points REAL,  detail TEXT )',\n    'Penalty');\n    this.divID = 'PenaltyService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(racer: Racer): void {\n    this.writeDB([\n      'INSERT INTO Penalty(id, points, detail) VALUES (?, ?, ?)',\n      [racer.getPenalty().getId(), racer.getPenalty().getPoints(), racer.getPenalty().getDetail()]\n    ]);\n    this.writeDB([\n      'UPDATE Racer SET penalty = ? WHERE id = ?',\n      [racer.getPenalty().getId(), racer.getId()]\n    ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(flight: {ref: Flight}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const flightID = +flight.ref.getId();\n    if(flightID > 0){\n      requestSQL.request = '\\\n      SELECT P.*, M.id as idMatch, R.color \\\n      FROM Penalty P, Racer R, Matchs M \\\n      WHERE R.penalty = P.id AND R.matchs = M.id AND M.flight = ' + flightID;\n      this.readDB(requestSQL, flight, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(flight: {ref: Flight}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    for (var i = 0; i < data.length; i++) {\n      const index = flight.ref.getMatchsList().findIndex(x => x.getId() == data[i].idMatch);\n      switch (data[i].color) {\n        case \"b\":\n          flight.ref.getMatchsList()[index].getBlue().setPenalty(new Penalty(data[i].id, data[i].points, data[i].detail));\n          break;\n        case \"y\":\n          flight.ref.getMatchsList()[index].getYellow().setPenalty(new Penalty(data[i].id, data[i].points, data[i].detail));\n          break;\n      }\n    }\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(racer: Racer): void {\n    this.delete(racer.getPenalty());\n    this.create(racer);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(penalty: Penalty): void {\n    this.writeDB([\n     'DELETE FROM Penalty WHERE id = ?',\n     [penalty.getId()]\n    ]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/penalty.service.ts","/**\n* \\file racer.service.ts\n* $Author: Zarzitski$\n* $Rev: 1 $\n* $Date: 2017-04-23 12:05:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\nimport { Injectable } from '@angular/core';\nimport { Racer } from '../class/data/racer';\nimport { Match } from '../class/data/match';\nimport { Flight } from '../class/data/flight';\nimport { Boat } from '../class/data/boat';\nimport { Penalty } from '../class/data/penalty';\nimport { CRUD } from '../class/crud';\n\n@Injectable()\nexport class RacerService extends CRUD {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase\n   */\n  constructor(){\n    super('RacerService','CREATE TABLE IF NOT EXISTS\\\n     Racer ( id INTEGER PRIMARY KEY AUTOINCREMENT, matchs INTEGER, color TEXT, points REAL,\\\n     boat INTEGER, penalty INTEGER, letter TEXT, name TEXT, country TEXT, isaf TEXT, ranking TEXT, \\\n     FOREIGN KEY(matchs) REFERENCES Matchs(id), FOREIGN KEY(penalty) REFERENCES Penalty(id), \\\n     FOREIGN KEY(boat) REFERENCES Boat(id))', 'Racer');\n    this.divID = 'RacerService';\n  }\n\n  /**\n   * \\fn    create(): void\n   * \\brief Créer un équipage\n   * \\param[in] crew L'équipage qui doit être créé\n   */\n  public create(match: Match): void {\n    this.writeDB([\n      'INSERT INTO Racer(id, matchs, color, points, boat, penalty, letter, name, country, isaf, ranking) \\\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',\n      [match.getBlue().getId(), match.getId(), 'b', match.getBlue().getPoints(),\n      match.getBlue().getBoat().getId(), match.getBlue().getPenalty().getId(),\n      match.getBlue().getLetter(), match.getBlue().getName(), match.getBlue().getCountry(),\n      match.getBlue().getIsaf(), match.getBlue().getRanking()]\n    ]);\n    this.writeDB([\n      'INSERT INTO Racer(id, matchs, color, points, boat, penalty, letter, name, country, isaf, ranking) \\\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',\n      [match.getYellow().getId(), match.getId(), 'y', match.getYellow().getPoints(),\n      match.getYellow().getBoat().getId(), match.getYellow().getPenalty().getId(),\n      match.getYellow().getLetter(), match.getYellow().getName(), match.getYellow().getCountry(),\n      match.getYellow().getIsaf(), match.getYellow().getRanking()]\n    ]);\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir tous les équipages\n   * \\param crews La liste des équipages\n   */\n  public read(flight: {ref: Flight}) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    const flightID = +flight.ref.getId();\n    if(flightID > 0){\n      requestSQL.request = '\\\n      SELECT R.* \\\n      FROM Racer R, Matchs M \\\n      WHERE R.matchs = M.id AND M.flight = ' + flightID + ' \\\n      ORDER BY R.id';\n      this.readDB(requestSQL, flight, this.applyResult, this.divID);\n    }\n  }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour l'équipage\n   * \\param crews La liste des équipages\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(flight: {ref: Flight}, divID: string){\n    const data = JSON.parse(document.getElementById(divID).innerHTML);\n    document.getElementById(divID).innerHTML = '';\n    var matchs = flight.ref.getMatchsList();\n    for (var i = 0; i < data.length; i++) {\n      const index = matchs.findIndex(x => x.getId() == data[i].matchs);\n      switch (data[i].color) {\n        case \"b\":\n          matchs[index].setBlue(new Racer(data[i].id, data[i].name, data[i].country, data[i].isaf, data[i].ranking, data[i].letter, data[i].points, {ref: new Boat(0, 0)}, new Penalty(0, 0, '')));\n          break;\n        case \"y\":\n          matchs[index].setYellow(new Racer(data[i].id, data[i].name, data[i].country, data[i].isaf, data[i].ranking, data[i].letter, data[i].points, {ref: new Boat(0, 0)}, new Penalty(0, 0, '')));\n          break;\n      }\n    }\n    flight.ref.setMatchsList(matchs.slice(0));\n  }\n\n  /**\n   * \\fn    update();\n   * \\brief Met à jour l'équipage\n   * \\param[in] crew L'équipage qui doit être mise à jour\n   */\n  public update(match: Match): void {\n    this.delete(match);\n    this.create(match);\n  }\n\n  /**\n   * \\fn    delete();\n   * \\brief Supprime l'équipage\n   * \\param[in] crew L'équipage qui doit être supprimé\n   */\n  public delete(match: Match): void {\n    const matchID = +match.getId();\n    if(matchID > 0){\n      this.writeDB(['DELETE FROM Penalty \\\n      WHERE id = (SELECT penalty FROM Racer WHERE matchs = ' + matchID + ')',[]]);\n      this.writeDB(['DELETE FROM Racer \\\n      WHERE matchs = ?',[matchID]]);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/racer.service.ts","/**\n* \\file crew.service.ts\n* $Author: Sixou$\n* $Rev: 2 $\n* $Date: 2017-04-22 00:34:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"../class/requestSQL.ts\" />\nimport { Injectable } from '@angular/core';\nimport { DataBase } from '../class/database';\nimport { ResultBoat } from '../class/data/resultBoat';\nimport { Phase } from '../class/data/phase';\n\n\n@Injectable()\n\n/**\n * \\class ResultBoatService\n * \\brief Cette classe s'occupe de la persistance des équipages\n * \\author Sixou\n * \\version 2\n * \\date 2017-04-11 23:41:00 +0100\n */\nexport class ResultBoatService extends DataBase {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase et ajoute à la table les parametres par defaut si ils n'existent pas\n   */\n  constructor(){\n    super('ResultBoatService','CREATE TABLE IF NOT EXISTS Crew (id INTEGER, name TEXT, country TEXT, isaf TEXT, ranking INTEGER, PRIMARY KEY (id))');\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Event ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, organization TEXT, location TEXT, ranking INTEGER, numberBoats INTEGER, date TEXT, timeManagement INTEGER)',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Boat ( id INTEGER PRIMARY KEY AUTOINCREMENT, boatNumber INTEGER)',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Flight ( id INTEGER PRIMARY KEY AUTOINCREMENT, phase INTEGER, flightNumber INTEGER, startDateTime TEXT, FOREIGN KEY(phase) REFERENCES Phase(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Matchs ( id INTEGER PRIMARY KEY AUTOINCREMENT, flight INTEGER, locked INTEGER, finishDateTime INTEGER, FOREIGN KEY(flight) REFERENCES Flight(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Phase ( id INTEGER PRIMARY KEY AUTOINCREMENT, event INTEGER, name TEXT, roundRobin INTEGER, FOREIGN KEY(event) REFERENCES Event(id))',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Penalty ( id INTEGER PRIMARY KEY AUTOINCREMENT, points REAL,  detail TEXT )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Racer ( id INTEGER PRIMARY KEY AUTOINCREMENT, matchs INTEGER, color TEXT, points REAL, boat INTEGER, penalty INTEGER, letter TEXT, name TEXT, country TEXT, isaf TEXT, ranking TEXT, FOREIGN KEY(matchs) REFERENCES Matchs(id), FOREIGN KEY(penalty) REFERENCES Penalty(id), FOREIGN KEY(boat) REFERENCES Boat(id))',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Subscriber ( id INTEGER PRIMARY KEY AUTOINCREMENT, letter TEXT, event INTEGER, name TEXT, country TEXT, isaf TEXT, ranking TEXT, FOREIGN KEY(event) REFERENCES Event(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Boat ( id INTEGER PRIMARY KEY AUTOINCREMENT, boatNumber INTEGER)',[]]);\n\n    this.writeDB(['\\\n    CREATE VIEW IF NOT EXISTS \\\n    Results as SELECT distinct P.id idPhase, M.id idMatchs, B.boatNumber boat, R.points, S.letter, S.name \\\n    FROM Event E, Phase P, Flight F, Subscriber S, Racer r, Matchs M, Boat B \\\n    WHERE P.event = E.id AND F.phase = P.id AND M.flight = F.id AND R.matchs = M.id AND R.boat = B.id AND S.event = E.id AND S.letter = R.letter \\\n    GROUP BY R.id, S.id \\\n    ',[]]);\n    this.divID = 'ResultBoatService';\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir la configuration\n   * \\param settings La configuration\n   */\n  public read(resultBoat: {ref: ResultBoat[]}, phase: Phase) {\n    var requestSQL: RequestSQL = {request: '', attribute : []};\n    requestSQL.request = '\\\n    SELECT boat, sum(points) tots, sum(points)*100/count(Boat) percentWin \\\n    FROM Results \\\n    WHERE idPhase = ' + phase.getId() + ' \\\n    GROUP BY boat ORDER BY tots DESC';\n    this.readDB(requestSQL, resultBoat, this.applyResult, this.divID);\n  }\n\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour la configuration\n   * \\param settings La configuration\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(resultBoatList: {ref: ResultBoat[]}, dataID){\n    const data = JSON.parse(document.getElementById(dataID).innerHTML);\n    document.getElementById(dataID).innerHTML = '';\n    for(var i = 0; i < data.length; i++){\n      resultBoatList.ref[i] = new ResultBoat( data[i].tots, data[i].percentWin, data[i].boat);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/result-boat.service.ts","/**\n* \\file crew.service.ts\n* $Author: Sixou$\n* $Rev: 2 $\n* $Date: 2017-04-22 00:34:00 +0100 $\n\n\\brief Projet : GEMARA - SGER\n*******************************************************/\n/// <reference path=\"../class/requestSQL.ts\" />\nimport { Injectable } from '@angular/core';\nimport { DataBase } from '../class/database';\nimport { ResultSubscriber } from '../class/data/resultSubscriber';\nimport { Match } from '../class/data/match';\nimport { Phase } from '../class/data/phase';\n\n\n@Injectable()\n\n/**\n * \\class ResultSubscriberService\n * \\brief Cette classe s'occupe de la persistance des équipages\n * \\author Sixou\n * \\version 2\n * \\date 2017-04-11 23:41:00 +0100\n */\nexport class ResultSubscriberService extends DataBase {\n\n  /**\n   * \\fn     constructor();\n   * \\brief Constructeur qui passe la requête de la table SQL au constructeur de la classe DataBase et ajoute à la table les parametres par defaut si ils n'existent pas\n   */\n  constructor() {\n    super('ResultBoatService','CREATE TABLE IF NOT EXISTS Crew (id INTEGER, name TEXT, country TEXT, isaf TEXT, ranking INTEGER, PRIMARY KEY (id))');\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Event ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, organization TEXT, location TEXT, ranking INTEGER, numberBoats INTEGER, date TEXT, timeManagement INTEGER)',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Boat ( id INTEGER PRIMARY KEY AUTOINCREMENT, boatNumber INTEGER)',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Flight ( id INTEGER PRIMARY KEY AUTOINCREMENT, phase INTEGER, flightNumber INTEGER, startDateTime TEXT, FOREIGN KEY(phase) REFERENCES Phase(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Matchs ( id INTEGER PRIMARY KEY AUTOINCREMENT, flight INTEGER, locked INTEGER, finishDateTime INTEGER, FOREIGN KEY(flight) REFERENCES Flight(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Phase ( id INTEGER PRIMARY KEY AUTOINCREMENT, event INTEGER, name TEXT, roundRobin INTEGER, FOREIGN KEY(event) REFERENCES Event(id))',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Penalty ( id INTEGER PRIMARY KEY AUTOINCREMENT, points REAL,  detail TEXT )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Racer ( id INTEGER PRIMARY KEY AUTOINCREMENT, matchs INTEGER, color TEXT, points REAL, boat INTEGER, penalty INTEGER, letter TEXT, name TEXT, country TEXT, isaf TEXT, ranking TEXT, FOREIGN KEY(matchs) REFERENCES Matchs(id), FOREIGN KEY(penalty) REFERENCES Penalty(id), FOREIGN KEY(boat) REFERENCES Boat(id))',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Subscriber ( id INTEGER PRIMARY KEY AUTOINCREMENT, letter TEXT, event INTEGER, name TEXT, country TEXT, isaf TEXT, ranking TEXT, FOREIGN KEY(event) REFERENCES Event(id) )',[]]);\n    this.writeDB(['CREATE TABLE IF NOT EXISTS Boat ( id INTEGER PRIMARY KEY AUTOINCREMENT, boatNumber INTEGER)',[]]);\n\n    this.writeDB(['\\\n    CREATE VIEW IF NOT EXISTS \\\n    Results as SELECT distinct P.id idPhase, M.id idMatchs, B.boatNumber boat, R.points, S.letter, S.name \\\n    FROM Event E, Phase P, Flight F, Subscriber S, Racer r, Matchs M, Boat B \\\n    WHERE P.event = E.id AND F.phase = P.id AND M.flight = F.id AND R.matchs = M.id AND R.boat = B.id AND S.event = E.id AND S.letter = R.letter \\\n    GROUP BY R.id, S.id \\\n    ',[]]);\n    this.divID = 'ResultSubscriberService';\n  }\n\n  /**\n   * \\fn    read();\n   * \\brief Obtenir la configuration\n   * \\param settings La configuration\n   */\n   public read(resultSubscriber: {ref: ResultSubscriber[]}, phase: Phase) {\n     var requestSQL: RequestSQL = {request: '', attribute : []};\n     requestSQL.request = '\\\n     SELECT idMatchs, name, points \\\n     FROM Results \\\n     WHERE idPhase = 2;' + phase.getId() +'';\n     this.readDB(requestSQL, resultSubscriber, this.applyResult, this.divID);\n   }\n\n  /**\n   * \\fn    applyResult();\n   * \\brief Recuperation de la donnée dans la div et met à jour la configuration\n   * \\param settings La configuration\n   * \\param dataID Le nom du service\n   */\n  protected applyResult(resultSubscriberList: {ref: ResultSubscriber[]}, dataID){\n    const data = JSON.parse(document.getElementById(dataID).innerHTML);\n    alert(document.getElementById(dataID).innerHTML);\n    document.getElementById(dataID).innerHTML = '';\n    for(var i; i < data.length; i++)\n      resultSubscriberList.ref[i] = new ResultSubscriber(data[i].id, data[i].winTotSub, data[i].winPercentSub, data[i].idSub);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/result-subscriber.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: true,\n  \"output-path\": \"/home/xela/workspace/GEMARA/AppSGER/www\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".w3-overlay {\\n\\tdisplay : block;\\n}\\n\\n.hide\\n{\\n    display: none !important;\\n}\\n\\ntable tbody td {\\n\\tword-break: break-all;\\n\\tborder: 1px solid grey;\\n}\\n\\n.matchButton:hover{\\n\\tbackground-color: grey;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 189\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.css\n// module id = 190\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".w3-overlay {\\n\\tdisplay : block;\\n}\\n\\n.hide\\n{\\n    display: none !important;\\n}\\n\\n.editMenu\\n{\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\tleft: 50%;\\n\\t-webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%);\\n}\\n\\na{\\n\\ttext-decoration: none;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/crews-list/crews-list.component.css\n// module id = 191\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".w3-overlay {\\n\\tdisplay : block;\\n}\\n\\n.hide\\n{\\n    display: none !important;\\n}\\n\\n.editMenu\\n{\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\tleft: 50%;\\n\\t-webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%);\\n}\\n\\na{\\n\\ttext-decoration: none;\\n}\\n\\n.stripe-3 {\\n  background: -webkit-repeating-linear-gradient(\\n    45deg,\\n    rgba(0, 0, 0, 0.2),\\n    rgba(0, 0, 0, 0.2) 10px,\\n    rgba(0, 0, 0, 0.3) 10px,\\n    rgba(0, 0, 0, 0.3) 20px\\n  );\\n  background: repeating-linear-gradient(\\n    45deg,\\n    rgba(0, 0, 0, 0.2),\\n    rgba(0, 0, 0, 0.2) 10px,\\n    rgba(0, 0, 0, 0.3) 10px,\\n    rgba(0, 0, 0, 0.3) 20px\\n  );\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/events-list/events-list.component.css\n// module id = 192\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/guide/guide.component.css\n// module id = 193\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = 194\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".w3-overlay {\\n\\tdisplay : block;\\n}\\n\\n.hide\\n{\\n    display: none !important;\\n}\\n\\n.editMenu\\n{\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\tleft: 50%;\\n\\t-webkit-transform: translate(-50%, -50%);\\n    transform: translate(-50%, -50%);\\n}\\n\\na{\\n\\ttext-decoration: none;\\n}\\n\\ntextarea{\\n\\twidth: 100%;\\n}\\n\\n.stripe-3 {\\n  background: -webkit-repeating-linear-gradient(\\n    45deg,\\n    rgba(0, 0, 0, 0),\\n    rgba(0, 0, 0, 0) 10px,\\n    rgba(255, 0, 0, 1) 10px,\\n    rgba(255, 0, 0, 1) 20px\\n  );\\n  background: repeating-linear-gradient(\\n    45deg,\\n    rgba(0, 0, 0, 0),\\n    rgba(0, 0, 0, 0) 10px,\\n    rgba(255, 0, 0, 1) 10px,\\n    rgba(255, 0, 0, 1) 20px\\n  );\\n}\\n\\ntable button, table a{\\n\\theight: 44px;\\n\\twidth: 100%;\\n\\tdisplay: block;\\n\\tbackground-size: auto 80%;\\n\\tbackground-position: center;\\n\\tbackground-repeat: no-repeat;\\n}\\n\\ntable a{\\n\\theight: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/phase/phase.component.css\n// module id = 195\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/results-boat/results-boat.component.css\n// module id = 196\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/results-subscriber/results-subscriber.component.css\n// module id = 197\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings.component.css\n// module id = 198\n// module chunks = 1","module.exports = \"<nav *ngIf=\\\"sidenav\\\" class=\\\"w3-sidenav w3-animate-left w3-padding w3-large globalColor\\\" style=\\\"z-index:5\\\">\\n\\t\\t<img class=\\\"w3-margin-bottom\\\" [src]=\\\"'assets/pictures/icon.png'\\\" style=\\\"width: 100%;\\\" />\\n\\t\\t<a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\"  class=\\\"w3-margin-top\\\" (click)=\\\"pushButtonNav('home')\\\">Home</a>\\n\\t\\t<a routerLink=\\\"/events-list\\\" routerLinkActive=\\\"active\\\" (click)=\\\"pushButtonNav('events-list')\\\">Events List</a>\\n\\t\\t<a routerLink=\\\"/crews-list\\\" routerLinkActive=\\\"active\\\" (click)=\\\"pushButtonNav('crews-list')\\\">Crews List</a>\\n\\t\\t<a routerLink=\\\"/guide\\\" routerLinkActive=\\\"active\\\" (click)=\\\"pushButtonNav('guide')\\\">Guide</a>\\n\\t\\t<a routerLink=\\\"/settings\\\" routerLinkActive=\\\"active\\\" (click)=\\\"pushButtonNav('settings')\\\">Settings</a>\\n\\t\\t<a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\" (click)=\\\"pushButtonNav('about')\\\">About</a>\\n</nav>\\n\\n<div (click)=\\\"sidenavShowHide()\\\" *ngIf=\\\"sidenav\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n\\n<nav class=\\\"w3-container globalColor\\\">\\n\\t<div class=\\\"w3-row w3-quarter globalColor\\\">\\n\\t\\t<div (click)=\\\"sidenavShowHide()\\\" class=\\\"w3-container w3-col w3-opennav w3-xlarge\\\" style=\\\"width:auto;\\\" >&#8801;</div>\\n\\t\\t<div class=\\\"w3-container w3-rest w3-medium\\\" ><input *ngIf=\\\"searchBar\\\" [(ngModel)]=\\\"searchBarContent\\\" type=\\\"text\\\" class=\\\"w3-input\\\" style=\\\"width:auto;\\\" placeholder=\\\"Search..\\\" /></div>\\n\\t\\t<div id=\\\"searchBar\\\" class=\\\"hide\\\" >{{searchBarContent}}</div>\\n\\t</div>\\n\\t<div class=\\\"w3-threequarter w3-medium\\\">\\n\\t\\t<ul class=\\\"w3-navbar\\\" >\\n\\t\\t\\t<li *ngFor=\\\"let index of navMenu.ref\\\">\\n\\t\\t\\t\\t<a [routerLink]=\\\"[index.link]\\\" >{{index.title}}</a></li>\\n\\t\\t</ul>\\n\\t</div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 200\n// module chunks = 1","module.exports = \"<p>\\n  about works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.html\n// module id = 201\n// module chunks = 1","module.exports = \"<nav id=\\\"crewPanel\\\" [ngClass]=\\\"{ 'hide': crewPanelIhm.ref }\\\" class=\\\"w3-margin w3-animate-left w3-padding globalColor\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Crew Edit</h2>\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Name</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"crew.ref.name\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Country</label>\\n\\t<select class=\\\"w3-input\\\" [(ngModel)]=\\\"crew.ref.country\\\">\\n\\t\\t<option value=\\\"AF\\\">Afghanistan</option>\\n\\t\\t<option value=\\\"AX\\\">Åland Islands</option>\\n\\t\\t<option value=\\\"AL\\\">Albania</option>\\n\\t\\t<option value=\\\"DZ\\\">Algeria</option>\\n\\t\\t<option value=\\\"AS\\\">American Samoa</option>\\n\\t\\t<option value=\\\"AD\\\">Andorra</option>\\n\\t\\t<option value=\\\"AO\\\">Angola</option>\\n\\t\\t<option value=\\\"AI\\\">Anguilla</option>\\n\\t\\t<option value=\\\"AQ\\\">Antarctica</option>\\n\\t\\t<option value=\\\"AG\\\">Antigua and Barbuda</option>\\n\\t\\t<option value=\\\"AR\\\">Argentina</option>\\n\\t\\t<option value=\\\"AM\\\">Armenia</option>\\n\\t\\t<option value=\\\"AW\\\">Aruba</option>\\n\\t\\t<option value=\\\"AU\\\">Australia</option>\\n\\t\\t<option value=\\\"AT\\\">Austria</option>\\n\\t\\t<option value=\\\"AZ\\\">Azerbaijan</option>\\n\\t\\t<option value=\\\"BS\\\">Bahamas</option>\\n\\t\\t<option value=\\\"BH\\\">Bahrain</option>\\n\\t\\t<option value=\\\"BD\\\">Bangladesh</option>\\n\\t\\t<option value=\\\"BB\\\">Barbados</option>\\n\\t\\t<option value=\\\"BY\\\">Belarus</option>\\n\\t\\t<option value=\\\"BE\\\">Belgium</option>\\n\\t\\t<option value=\\\"BZ\\\">Belize</option>\\n\\t\\t<option value=\\\"BJ\\\">Benin</option>\\n\\t\\t<option value=\\\"BM\\\">Bermuda</option>\\n\\t\\t<option value=\\\"BT\\\">Bhutan</option>\\n\\t\\t<option value=\\\"BO\\\">Bolivia, Plurinational State of</option>\\n\\t\\t<option value=\\\"BQ\\\">Bonaire, Sint Eustatius and Saba</option>\\n\\t\\t<option value=\\\"BA\\\">Bosnia and Herzegovina</option>\\n\\t\\t<option value=\\\"BW\\\">Botswana</option>\\n\\t\\t<option value=\\\"BV\\\">Bouvet Island</option>\\n\\t\\t<option value=\\\"BR\\\">Brazil</option>\\n\\t\\t<option value=\\\"IO\\\">British Indian Ocean Territory</option>\\n\\t\\t<option value=\\\"BN\\\">Brunei Darussalam</option>\\n\\t\\t<option value=\\\"BG\\\">Bulgaria</option>\\n\\t\\t<option value=\\\"BF\\\">Burkina Faso</option>\\n\\t\\t<option value=\\\"BI\\\">Burundi</option>\\n\\t\\t<option value=\\\"KH\\\">Cambodia</option>\\n\\t\\t<option value=\\\"CM\\\">Cameroon</option>\\n\\t\\t<option value=\\\"CA\\\">Canada</option>\\n\\t\\t<option value=\\\"CV\\\">Cape Verde</option>\\n\\t\\t<option value=\\\"KY\\\">Cayman Islands</option>\\n\\t\\t<option value=\\\"CF\\\">Central African Republic</option>\\n\\t\\t<option value=\\\"TD\\\">Chad</option>\\n\\t\\t<option value=\\\"CL\\\">Chile</option>\\n\\t\\t<option value=\\\"CN\\\">China</option>\\n\\t\\t<option value=\\\"CX\\\">Christmas Island</option>\\n\\t\\t<option value=\\\"CC\\\">Cocos (Keeling) Islands</option>\\n\\t\\t<option value=\\\"CO\\\">Colombia</option>\\n\\t\\t<option value=\\\"KM\\\">Comoros</option>\\n\\t\\t<option value=\\\"CG\\\">Congo</option>\\n\\t\\t<option value=\\\"CD\\\">Congo, the Democratic Republic of the</option>\\n\\t\\t<option value=\\\"CK\\\">Cook Islands</option>\\n\\t\\t<option value=\\\"CR\\\">Costa Rica</option>\\n\\t\\t<option value=\\\"CI\\\">Côte d'Ivoire</option>\\n\\t\\t<option value=\\\"HR\\\">Croatia</option>\\n\\t\\t<option value=\\\"CU\\\">Cuba</option>\\n\\t\\t<option value=\\\"CW\\\">Curaçao</option>\\n\\t\\t<option value=\\\"CY\\\">Cyprus</option>\\n\\t\\t<option value=\\\"CZ\\\">Czech Republic</option>\\n\\t\\t<option value=\\\"DK\\\">Denmark</option>\\n\\t\\t<option value=\\\"DJ\\\">Djibouti</option>\\n\\t\\t<option value=\\\"DM\\\">Dominica</option>\\n\\t\\t<option value=\\\"DO\\\">Dominican Republic</option>\\n\\t\\t<option value=\\\"EC\\\">Ecuador</option>\\n\\t\\t<option value=\\\"EG\\\">Egypt</option>\\n\\t\\t<option value=\\\"SV\\\">El Salvador</option>\\n\\t\\t<option value=\\\"GQ\\\">Equatorial Guinea</option>\\n\\t\\t<option value=\\\"ER\\\">Eritrea</option>\\n\\t\\t<option value=\\\"EE\\\">Estonia</option>\\n\\t\\t<option value=\\\"ET\\\">Ethiopia</option>\\n\\t\\t<option value=\\\"FK\\\">Falkland Islands (Malvinas)</option>\\n\\t\\t<option value=\\\"FO\\\">Faroe Islands</option>\\n\\t\\t<option value=\\\"FJ\\\">Fiji</option>\\n\\t\\t<option value=\\\"FI\\\">Finland</option>\\n\\t\\t<option value=\\\"FR\\\">France</option>\\n\\t\\t<option value=\\\"GF\\\">French Guiana</option>\\n\\t\\t<option value=\\\"PF\\\">French Polynesia</option>\\n\\t\\t<option value=\\\"TF\\\">French Southern Territories</option>\\n\\t\\t<option value=\\\"GA\\\">Gabon</option>\\n\\t\\t<option value=\\\"GM\\\">Gambia</option>\\n\\t\\t<option value=\\\"GE\\\">Georgia</option>\\n\\t\\t<option value=\\\"DE\\\">Germany</option>\\n\\t\\t<option value=\\\"GH\\\">Ghana</option>\\n\\t\\t<option value=\\\"GI\\\">Gibraltar</option>\\n\\t\\t<option value=\\\"GR\\\">Greece</option>\\n\\t\\t<option value=\\\"GL\\\">Greenland</option>\\n\\t\\t<option value=\\\"GD\\\">Grenada</option>\\n\\t\\t<option value=\\\"GP\\\">Guadeloupe</option>\\n\\t\\t<option value=\\\"GU\\\">Guam</option>\\n\\t\\t<option value=\\\"GT\\\">Guatemala</option>\\n\\t\\t<option value=\\\"GG\\\">Guernsey</option>\\n\\t\\t<option value=\\\"GN\\\">Guinea</option>\\n\\t\\t<option value=\\\"GW\\\">Guinea-Bissau</option>\\n\\t\\t<option value=\\\"GY\\\">Guyana</option>\\n\\t\\t<option value=\\\"HT\\\">Haiti</option>\\n\\t\\t<option value=\\\"HM\\\">Heard Island and McDonald Islands</option>\\n\\t\\t<option value=\\\"VA\\\">Holy See (Vatican City State)</option>\\n\\t\\t<option value=\\\"HN\\\">Honduras</option>\\n\\t\\t<option value=\\\"HK\\\">Hong Kong</option>\\n\\t\\t<option value=\\\"HU\\\">Hungary</option>\\n\\t\\t<option value=\\\"IS\\\">Iceland</option>\\n\\t\\t<option value=\\\"IN\\\">India</option>\\n\\t\\t<option value=\\\"ID\\\">Indonesia</option>\\n\\t\\t<option value=\\\"IR\\\">Iran, Islamic Republic of</option>\\n\\t\\t<option value=\\\"IQ\\\">Iraq</option>\\n\\t\\t<option value=\\\"IE\\\">Ireland</option>\\n\\t\\t<option value=\\\"IM\\\">Isle of Man</option>\\n\\t\\t<option value=\\\"IL\\\">Israel</option>\\n\\t\\t<option value=\\\"IT\\\">Italy</option>\\n\\t\\t<option value=\\\"JM\\\">Jamaica</option>\\n\\t\\t<option value=\\\"JP\\\">Japan</option>\\n\\t\\t<option value=\\\"JE\\\">Jersey</option>\\n\\t\\t<option value=\\\"JO\\\">Jordan</option>\\n\\t\\t<option value=\\\"KZ\\\">Kazakhstan</option>\\n\\t\\t<option value=\\\"KE\\\">Kenya</option>\\n\\t\\t<option value=\\\"KI\\\">Kiribati</option>\\n\\t\\t<option value=\\\"KP\\\">Korea, Democratic People's Republic of</option>\\n\\t\\t<option value=\\\"KR\\\">Korea, Republic of</option>\\n\\t\\t<option value=\\\"KW\\\">Kuwait</option>\\n\\t\\t<option value=\\\"KG\\\">Kyrgyzstan</option>\\n\\t\\t<option value=\\\"LA\\\">Lao People's Democratic Republic</option>\\n\\t\\t<option value=\\\"LV\\\">Latvia</option>\\n\\t\\t<option value=\\\"LB\\\">Lebanon</option>\\n\\t\\t<option value=\\\"LS\\\">Lesotho</option>\\n\\t\\t<option value=\\\"LR\\\">Liberia</option>\\n\\t\\t<option value=\\\"LY\\\">Libya</option>\\n\\t\\t<option value=\\\"LI\\\">Liechtenstein</option>\\n\\t\\t<option value=\\\"LT\\\">Lithuania</option>\\n\\t\\t<option value=\\\"LU\\\">Luxembourg</option>\\n\\t\\t<option value=\\\"MO\\\">Macao</option>\\n\\t\\t<option value=\\\"MK\\\">Macedonia, the former Yugoslav Republic of</option>\\n\\t\\t<option value=\\\"MG\\\">Madagascar</option>\\n\\t\\t<option value=\\\"MW\\\">Malawi</option>\\n\\t\\t<option value=\\\"MY\\\">Malaysia</option>\\n\\t\\t<option value=\\\"MV\\\">Maldives</option>\\n\\t\\t<option value=\\\"ML\\\">Mali</option>\\n\\t\\t<option value=\\\"MT\\\">Malta</option>\\n\\t\\t<option value=\\\"MH\\\">Marshall Islands</option>\\n\\t\\t<option value=\\\"MQ\\\">Martinique</option>\\n\\t\\t<option value=\\\"MR\\\">Mauritania</option>\\n\\t\\t<option value=\\\"MU\\\">Mauritius</option>\\n\\t\\t<option value=\\\"YT\\\">Mayotte</option>\\n\\t\\t<option value=\\\"MX\\\">Mexico</option>\\n\\t\\t<option value=\\\"FM\\\">Micronesia, Federated States of</option>\\n\\t\\t<option value=\\\"MD\\\">Moldova, Republic of</option>\\n\\t\\t<option value=\\\"MC\\\">Monaco</option>\\n\\t\\t<option value=\\\"MN\\\">Mongolia</option>\\n\\t\\t<option value=\\\"ME\\\">Montenegro</option>\\n\\t\\t<option value=\\\"MS\\\">Montserrat</option>\\n\\t\\t<option value=\\\"MA\\\">Morocco</option>\\n\\t\\t<option value=\\\"MZ\\\">Mozambique</option>\\n\\t\\t<option value=\\\"MM\\\">Myanmar</option>\\n\\t\\t<option value=\\\"NA\\\">Namibia</option>\\n\\t\\t<option value=\\\"NR\\\">Nauru</option>\\n\\t\\t<option value=\\\"NP\\\">Nepal</option>\\n\\t\\t<option value=\\\"NL\\\">Netherlands</option>\\n\\t\\t<option value=\\\"NC\\\">New Caledonia</option>\\n\\t\\t<option value=\\\"NZ\\\">New Zealand</option>\\n\\t\\t<option value=\\\"NI\\\">Nicaragua</option>\\n\\t\\t<option value=\\\"NE\\\">Niger</option>\\n\\t\\t<option value=\\\"NG\\\">Nigeria</option>\\n\\t\\t<option value=\\\"NU\\\">Niue</option>\\n\\t\\t<option value=\\\"NF\\\">Norfolk Island</option>\\n\\t\\t<option value=\\\"MP\\\">Northern Mariana Islands</option>\\n\\t\\t<option value=\\\"NO\\\">Norway</option>\\n\\t\\t<option value=\\\"OM\\\">Oman</option>\\n\\t\\t<option value=\\\"PK\\\">Pakistan</option>\\n\\t\\t<option value=\\\"PW\\\">Palau</option>\\n\\t\\t<option value=\\\"PS\\\">Palestinian Territory, Occupied</option>\\n\\t\\t<option value=\\\"PA\\\">Panama</option>\\n\\t\\t<option value=\\\"PG\\\">Papua New Guinea</option>\\n\\t\\t<option value=\\\"PY\\\">Paraguay</option>\\n\\t\\t<option value=\\\"PE\\\">Peru</option>\\n\\t\\t<option value=\\\"PH\\\">Philippines</option>\\n\\t\\t<option value=\\\"PN\\\">Pitcairn</option>\\n\\t\\t<option value=\\\"PL\\\">Poland</option>\\n\\t\\t<option value=\\\"PT\\\">Portugal</option>\\n\\t\\t<option value=\\\"PR\\\">Puerto Rico</option>\\n\\t\\t<option value=\\\"QA\\\">Qatar</option>\\n\\t\\t<option value=\\\"RE\\\">Réunion</option>\\n\\t\\t<option value=\\\"RO\\\">Romania</option>\\n\\t\\t<option value=\\\"RU\\\">Russian Federation</option>\\n\\t\\t<option value=\\\"RW\\\">Rwanda</option>\\n\\t\\t<option value=\\\"BL\\\">Saint Barthélemy</option>\\n\\t\\t<option value=\\\"SH\\\">Saint Helena, Ascension and Tristan da Cunha</option>\\n\\t\\t<option value=\\\"KN\\\">Saint Kitts and Nevis</option>\\n\\t\\t<option value=\\\"LC\\\">Saint Lucia</option>\\n\\t\\t<option value=\\\"MF\\\">Saint Martin (French part)</option>\\n\\t\\t<option value=\\\"PM\\\">Saint Pierre and Miquelon</option>\\n\\t\\t<option value=\\\"VC\\\">Saint Vincent and the Grenadines</option>\\n\\t\\t<option value=\\\"WS\\\">Samoa</option>\\n\\t\\t<option value=\\\"SM\\\">San Marino</option>\\n\\t\\t<option value=\\\"ST\\\">Sao Tome and Principe</option>\\n\\t\\t<option value=\\\"SA\\\">Saudi Arabia</option>\\n\\t\\t<option value=\\\"SN\\\">Senegal</option>\\n\\t\\t<option value=\\\"RS\\\">Serbia</option>\\n\\t\\t<option value=\\\"SC\\\">Seychelles</option>\\n\\t\\t<option value=\\\"SL\\\">Sierra Leone</option>\\n\\t\\t<option value=\\\"SG\\\">Singapore</option>\\n\\t\\t<option value=\\\"SX\\\">Sint Maarten (Dutch part)</option>\\n\\t\\t<option value=\\\"SK\\\">Slovakia</option>\\n\\t\\t<option value=\\\"SI\\\">Slovenia</option>\\n\\t\\t<option value=\\\"SB\\\">Solomon Islands</option>\\n\\t\\t<option value=\\\"SO\\\">Somalia</option>\\n\\t\\t<option value=\\\"ZA\\\">South Africa</option>\\n\\t\\t<option value=\\\"GS\\\">South Georgia and the South Sandwich Islands</option>\\n\\t\\t<option value=\\\"SS\\\">South Sudan</option>\\n\\t\\t<option value=\\\"ES\\\">Spain</option>\\n\\t\\t<option value=\\\"LK\\\">Sri Lanka</option>\\n\\t\\t<option value=\\\"SD\\\">Sudan</option>\\n\\t\\t<option value=\\\"SR\\\">Suriname</option>\\n\\t\\t<option value=\\\"SJ\\\">Svalbard and Jan Mayen</option>\\n\\t\\t<option value=\\\"SZ\\\">Swaziland</option>\\n\\t\\t<option value=\\\"SE\\\">Sweden</option>\\n\\t\\t<option value=\\\"CH\\\">Switzerland</option>\\n\\t\\t<option value=\\\"SY\\\">Syrian Arab Republic</option>\\n\\t\\t<option value=\\\"TW\\\">Taiwan, Province of China</option>\\n\\t\\t<option value=\\\"TJ\\\">Tajikistan</option>\\n\\t\\t<option value=\\\"TZ\\\">Tanzania, United Republic of</option>\\n\\t\\t<option value=\\\"TH\\\">Thailand</option>\\n\\t\\t<option value=\\\"TL\\\">Timor-Leste</option>\\n\\t\\t<option value=\\\"TG\\\">Togo</option>\\n\\t\\t<option value=\\\"TK\\\">Tokelau</option>\\n\\t\\t<option value=\\\"TO\\\">Tonga</option>\\n\\t\\t<option value=\\\"TT\\\">Trinidad and Tobago</option>\\n\\t\\t<option value=\\\"TN\\\">Tunisia</option>\\n\\t\\t<option value=\\\"TR\\\">Turkey</option>\\n\\t\\t<option value=\\\"TM\\\">Turkmenistan</option>\\n\\t\\t<option value=\\\"TC\\\">Turks and Caicos Islands</option>\\n\\t\\t<option value=\\\"TV\\\">Tuvalu</option>\\n\\t\\t<option value=\\\"UG\\\">Uganda</option>\\n\\t\\t<option value=\\\"UA\\\">Ukraine</option>\\n\\t\\t<option value=\\\"AE\\\">United Arab Emirates</option>\\n\\t\\t<option value=\\\"GB\\\">United Kingdom</option>\\n\\t\\t<option value=\\\"US\\\">United States</option>\\n\\t\\t<option value=\\\"UM\\\">United States Minor Outlying Islands</option>\\n\\t\\t<option value=\\\"UY\\\">Uruguay</option>\\n\\t\\t<option value=\\\"UZ\\\">Uzbekistan</option>\\n\\t\\t<option value=\\\"VU\\\">Vanuatu</option>\\n\\t\\t<option value=\\\"VE\\\">Venezuela, Bolivarian Republic of</option>\\n\\t\\t<option value=\\\"VN\\\">Viet Nam</option>\\n\\t\\t<option value=\\\"VG\\\">Virgin Islands, British</option>\\n\\t\\t<option value=\\\"VI\\\">Virgin Islands, U.S.</option>\\n\\t\\t<option value=\\\"WF\\\">Wallis and Futuna</option>\\n\\t\\t<option value=\\\"EH\\\">Western Sahara</option>\\n\\t\\t<option value=\\\"YE\\\">Yemen</option>\\n\\t\\t<option value=\\\"ZM\\\">Zambia</option>\\n\\t\\t<option value=\\\"ZW\\\">Zimbabwe</option>\\n\\t</select>\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">ISAF</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"crew.ref.isaf\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Ranking</label>\\n\\t<input type=\\\"range\\\" class=\\\"w3-input\\\" min=\\\"0\\\" max=\\\"5\\\" [(ngModel)]=\\\"crew.ref.ranking\\\" step=\\\"1\\\" (click)=\\\"this.crew.ref.setRanking(this.crew.ref.getRanking())\\\" />\\n\\t<div class=\\\"w3-light-grey w3-round\\\">\\n    <div id=\\\"progressBar\\\" class=\\\"w3-container w3-amber w3-round w3-center\\\" [style.width]=\\\"crew.ref.getRanking()/5*100+'%'\\\">{{crew.ref.getRanking()}}</div>\\n  </div>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucmanagecrews.crewPanelShowHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': editMode.ref }\\\" (click)=\\\"ucmanagecrews.create()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Create</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': !editMode.ref }\\\" (click)=\\\"ucmanagecrews.update()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Save</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"deletePanel\\\" [ngClass]=\\\"{ 'hide': !deletePanelIhm.ref }\\\" class=\\\"w3-margin globalColor w3-animate-left w3-padding\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Are you sure you wish to delete this crew?</h2>\\n\\t<h3>{{crew.ref.getName() + ' / ' + crew.ref.getCountry() + ' / ' + crew.ref.getIsaf() + ' / ' + crew.ref.getRanking()}}</h3>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucmanagecrews.deletePanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucmanagecrews.delete()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Yes</button>\\n\\t</div>\\n</nav>\\n\\n<div (click)=\\\"ucmanagecrews.deletePanelHide()\\\" [ngClass]=\\\"{ 'hide': !deletePanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucmanagecrews.crewPanelShowHide()\\\" [ngClass]=\\\"{ 'hide': crewPanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n\\n<div class=\\\"w3-card-4 w3-margin w3-padding w3-container w3-animate-left\\\">\\n\\t<div class=\\\"w3-padding-0 w3-margin-top\\\" style=\\\"width: 100%; overflow: auto;\\\">\\n\\t\\t<table class=\\\"w3-table-all w3-large\\\" >\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr class=\\\"globalColor\\\">\\n\\t\\t\\t\\t\\t<th style=\\\"width: 50%;\\\">Crew Name</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 10%;\\\">Country</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 15%;\\\">ISAF</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 10%;\\\">Ranking</th>\\n\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody *ngFor=\\\"let crewSelected of crews.ref\\\">\\n\\t\\t\\t\\t<tr *ngIf=\\\"resultSearchBar(crewSelected.getName() + ' ' + crewSelected.getCountry() + ' ' + crewSelected.getIsaf())\\\">\\n\\t\\t\\t\\t\\t<td>{{crewSelected.getName()}}</td>\\n\\t\\t\\t\\t\\t<td>{{crewSelected.getCountry()}}</td>\\n\\t\\t\\t\\t\\t<td>{{crewSelected.getIsaf()}}</td>\\n\\t\\t\\t\\t\\t<td>{{crewSelected.getRanking()}}</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"crews-list#crewPanel\\\" (click)=\\\"ucmanagecrews.editCrewPanel(crewSelected)\\\" class=\\\"w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/edit.png'\\\" style=\\\"height: 32px;\\\" /></a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"crews-list#deletePanel\\\" (click)=\\\"ucmanagecrews.deletePanelShow(crewSelected)\\\" class=\\\"w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\" style=\\\"height: 32px;\\\" /></a>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n<div class=\\\"w3-right-align w3-padding-left w3-padding-right w3-margin\\\">\\n\\t<a href=\\\"crews-list#crewPanel\\\" (click)=\\\"ucmanagecrews.createCrewPanel()\\\" class=\\\"w3-btn-floating-large hook_bottom_left globalColor w3-margin-top\\\">+</a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/crews-list/crews-list.component.html\n// module id = 202\n// module chunks = 1","module.exports = \"<nav id=\\\"eventPanel\\\" [ngClass]=\\\"{ 'hide': eventPanelIhm.ref }\\\" class=\\\"w3-margin globalColor w3-animate-left w3-padding\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Event Edit</h2>\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Name</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"event.ref.name\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Organization</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"event.ref.organization\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Location</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"event.ref.location\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Date</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"date\\\" [(ngModel)]=\\\"event.ref.date\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Number of Boats</label>\\n\\t<input class=\\\"w3-input\\\" type=\\\"number\\\" min=\\\"1\\\" step=\\\"1\\\" [(ngModel)]=\\\"event.ref.numberBoats\\\" />\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Ranking</label>\\n\\t<input type=\\\"range\\\" class=\\\"w3-input\\\" min=\\\"0\\\" max=\\\"5\\\"  step=\\\"1\\\" [(ngModel)]=\\\"event.ref.ranking\\\" (click)=\\\"this.event.ref.setRanking(this.event.ref.getRanking())\\\" />\\n\\t<div class=\\\"w3-light-grey w3-round\\\">\\n    <div id=\\\"progressBar\\\" class=\\\"w3-container w3-amber w3-round w3-center\\\" [style.width]=\\\"event.ref.getRanking()/5*100+'%'\\\">{{event.ref.getRanking()}}</div>\\n  </div>\\n\\t<input class=\\\"w3-check w3-margin-top\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"event.ref.timeManagement\\\" />\\n\\t<label class=\\\"w3-label w3-text-black\\\">Time Management</label>\\n\\t<div class=\\\"w3-container w3-margin-top\\\">\\n\\t\\t<table class=\\\"w3-table-all w3-centered\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr class=\\\"w3-orange\\\">\\n\\t\\t\\t\\t\\t<th>Crew</th>\\n\\t\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr class=\\\"w3-white\\\" *ngFor=\\\"let subscriberSelected of event.ref.getSubscribers()\\\">\\n\\t\\t\\t\\t\\t<td>{{subscriberSelected.getName() + ' / ' + subscriberSelected.getCountry() + ' / ' + subscriberSelected.getIsaf()}}</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"subscriberSelected.letter\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option [ngValue]=\\\"subscriberSelected.letter\\\">{{subscriberSelected.letter}}</option>\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let letter of ucorganizeevent.getLattersList()' >{{letter}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td class=\\\"w3-right\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"w3-button globalColor w3-xlarge\\\" (click)=\\\"ucorganizeevent.removeSubscriberEvent(subscriberSelected)\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\" style=\\\"height: 32px;\\\" /></button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr class=\\\"w3-white\\\">\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\"  [(ngModel)]=\\\"crewId.ref\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let crewSelected of ucorganizeevent.getCrewsList()\\\" [ngValue]=\\\"crewSelected.getId()\\\">{{crewSelected.getName() + ' / ' + crewSelected.getCountry() + ' / ' + crewSelected.getIsaf() + ' / ' + crewSelected.getRanking()}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"crewLetter.ref\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let letter of ucorganizeevent.getLattersList()'>{{letter}}</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucorganizeevent.eventPanelShowHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': editMode.ref }\\\" (click)=\\\"ucorganizeevent.create()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Create</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': !editMode.ref }\\\" (click)=\\\"ucorganizeevent.update()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Save</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"phasePanel\\\" [ngClass]=\\\"{ 'hide': phasePanelIhm.ref }\\\" class=\\\"w3-margin globalColor w3-animate-left w3-padding\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Phase Edit</h2>\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Name</label>\\n\\t<select class=\\\"w3-select\\\"  [(ngModel)]=\\\"phase.ref.name\\\">\\n\\t\\t<option></option>\\n\\t\\t<option>RoundRobin 1</option>\\n\\t\\t<option>RoundRobin 2</option>\\n\\t\\t<option>RoundRobin 3</option>\\n\\t\\t<option>Semi-final</option>\\n\\t\\t<option>Final</option>\\n\\t</select>\\n\\t<input class=\\\"w3-input w3-margin-top\\\" type=\\\"text\\\" [(ngModel)]=\\\"phase.ref.name\\\" />\\n\\t<input class=\\\"w3-check w3-margin-top\\\" [checked]=\\\"1\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"phase.ref.roundRobin\\\" />\\n\\t<label class=\\\"w3-label w3-text-black\\\">RoundRobin</label>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucorganizephase.phasePanelShowHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': editMode.ref }\\\" (click)=\\\"ucorganizephase.create()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Create</button>\\n\\t\\t<button [ngClass]=\\\"{ 'hide': !editMode.ref }\\\" (click)=\\\"ucorganizephase.update()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Save</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"deletePanel\\\" [ngClass]=\\\"{ 'hide': !deleteEventPanelIhm.ref }\\\" class=\\\"w3-margin globalColor w3-animate-left w3-padding\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Are you sure you wish to delete this Event?</h2>\\n\\t<h3>{{ event.ref.getName() + ' / ' + event.ref.getOrganization() + ' / ' + event.ref.getLocation() + ' / ' + event.ref.getDate() + ' / Ranking: ' + event.ref.getRanking() }}</h3>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucorganizeevent.deletePanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucorganizeevent.delete()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Yes</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"deletePanel\\\" [ngClass]=\\\"{ 'hide': !deletePhasePanelIhm.ref }\\\" class=\\\"w3-margin w3-animate-left w3-padding globalColor\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Are you sure you wish to delete this Phase?</h2>\\n\\t<h3>{{ phase.ref.getName() + phase.ref.getRoundRobin()?'Type: RoundRobin':'' }}</h3>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucorganizephase.deletePanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucorganizephase.delete()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Yes</button>\\n\\t</div>\\n</nav>\\n\\n<div (click)=\\\"ucorganizeevent.deletePanelHide()\\\" [ngClass]=\\\"{ 'hide': !deleteEventPanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucorganizephase.deletePanelHide()\\\" [ngClass]=\\\"{ 'hide': !deletePhasePanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucorganizeevent.eventPanelShowHide()\\\" [ngClass]=\\\"{ 'hide': eventPanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucorganizephase.phasePanelShowHide()\\\" [ngClass]=\\\"{ 'hide': phasePanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n\\n<div class=\\\"w3-card-4 w3-margin w3-padding w3-container\\\">\\n\\t<div class=\\\"w3-padding-0 w3-margin-top w3-animate-left\\\" *ngFor=\\\"let eventSelected of events.ref\\\">\\n\\t\\t<div *ngIf=\\\"resultSearchBar(eventSelected.getName() + ' ' + eventSelected.getOrganization() + ' ' + eventSelected.getLocation() + ' ' + eventSelected.getDate())\\\">\\n\\t\\t\\t<div class=\\\"globalColor w3-container w3-padding-0\\\">\\n\\t\\t\\t\\t<button  (click)=\\\"ucorganizeevent.detailPanelShowHide(eventSelected)\\\" class=\\\"w3-threequarter w3-button globalColor w3-xlarge w3-left-align\\\" style=\\\"background-color: transparent;\\\">{{eventSelected.name}}</button>\\n\\t\\t\\t\\t<div class=\\\"w3-quarter\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/pdf.png'\\\" style=\\\"height: 32px;\\\" title=\\\"generate PDF\\\" /></button>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/html.png'\\\" style=\\\"height: 32px;\\\" title=\\\"generate HTML\\\" /></button>\\n\\t\\t\\t\\t\\t<a href=\\\"events-list#eventPanel\\\" (click)=\\\"ucorganizeevent.editEventPanel(eventSelected)\\\"  class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/edit.png'\\\" title=\\\"edit Event\\\" style=\\\"height: 32px;\\\" /></a>\\n\\t\\t\\t\\t\\t<a href=\\\"events-list#deletePanel\\\" (click)=\\\"ucorganizeevent.deletePanelShow(eventSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\" style=\\\"height: 32px;\\\" title=\\\"delete Event\\\" /></a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"globalColor w3-center\\\" [ngClass]=\\\"{ 'hide': eventSelected.getHiddenContent() }\\\">\\n\\t\\t\\t\\t<div class=\\\"w3-row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"w3-third w3-container\\\">\\n\\t\\t\\t\\t\\t\\t<p>Organization: {{eventSelected.getOrganization()}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"w3-third w3-container\\\">\\n\\t\\t\\t\\t\\t\\t<p>Location: {{eventSelected.getLocation()}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"w3-third w3-container\\\">\\n\\t\\t\\t\\t\\t\\t<p>Date: {{eventSelected.getDate()}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"w3-row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"w3-third w3-container\\\">\\n\\t\\t\\t\\t\\t\\t<p>Number of Boats: {{eventSelected.getNumberBoats()}}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"w3-twothird w3-container w3-padding-bottom\\\">\\n\\t\\t\\t\\t\\t\\tRanking:\\n\\t\\t\\t\\t\\t\\t<div class=\\\"w3-light-grey w3-round \\\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"progressBar\\\" class=\\\"w3-container w3-amber w3-round w3-center\\\" [style.width]=\\\"eventSelected.getRanking()/5*100+'%'\\\">{{eventSelected.getRanking()}}</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"w3-border w3-border-grey w3-padding w3-animate-left\\\" [ngClass]=\\\"{ 'hide': eventSelected.getHiddenContent() }\\\" >\\n\\t\\t\\t\\t<div class=\\\"w3-container w3-padding-0 w3-margin-bottom\\\" *ngFor=\\\"let phaseSelected of eventSelected.getPhasesList(); let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/phase', phaseSelected.getId()]\\\" class=\\\"w3-threequarter w3-button globalColor w3-xlarge w3-left-align\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'stripe-3': phaseSelected.getRoundRobin()}\\\"\\n\\t\\t\\t\\t\\tstyle=\\\"background-color: transparent;\\\">{{phaseSelected.getName()}}</a>\\n\\t\\t\\t\\t\\t<div class=\\\"w3-quarter w3-bar\\\">\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/results-subscriber', phaseSelected.getId()]\\\" class=\\\"w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/eye.png'\\\" title=\\\"show Results\\\" style=\\\"height: 30px;\\\" /></a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"events-list#phasePanel\\\" (click)=\\\"ucorganizephase.editPhasePanel(phaseSelected, eventSelected)\\\" class=\\\"w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/edit.png'\\\" title=\\\"edit Phase\\\" style=\\\"height: 30px;\\\" /></a>\\n\\t\\t\\t\\t\\t\\t<a href=\\\"events-list#deletePanel\\\" *ngIf=\\\"eventSelected.getPhasesList().length-1 == i\\\" (click)=\\\"ucorganizephase.deletePanelShow(phaseSelected, eventSelected)\\\" class=\\\"w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\" title=\\\"delete Phase\\\" style=\\\"height: 30px;\\\" /></a>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"w3-right-align\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"events-list#phasePanel\\\" title=\\\"add Phase\\\" (click)=\\\"ucorganizephase.createPhasePanel(eventSelected)\\\" class=\\\"w3-btn-floating globalColor w3-margin\\\">+</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div class=\\\"w3-right-align w3-padding-left w3-padding-right w3-margin\\\">\\n\\t<a href=\\\"events-list#eventPanel\\\" title=\\\"add Event\\\" (click)=\\\"ucorganizeevent.createEventPanel()\\\" class=\\\"w3-btn-floating-large hook_bottom_left globalColor w3-margin-top\\\">+</a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/events-list/events-list.component.html\n// module id = 203\n// module chunks = 1","module.exports = \"<p>\\n  guide works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/guide/guide.component.html\n// module id = 204\n// module chunks = 1","module.exports = \"<div class=\\\"w3-card-4 w3-margin w3-padding w3-container\\\">\\n\\t<div class=\\\"w3-padding-0 w3-margin-top\\\" style=\\\"width: 100%; overflow: auto;\\\">\\n\\t\\t<h1 class=\\\"globalColor w3-padding\\\">Upcoming Events</h1>\\n\\t\\t<table class=\\\"w3-table-all w3-large\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr class=\\\"globalColor\\\">\\n\\t\\t\\t\\t\\t<th style=\\\"width: 25%;\\\">Date</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 35%;\\\">Event</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 30%;\\\">Location</th>\\n\\t\\t\\t\\t\\t<th style=\\\"width: 10%;\\\">Ranking</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t  \\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let event of events.ref\\\">\\n\\t\\t\\t\\t\\t<td>{{event.getDate()}}</td>\\n\\t\\t\\t\\t\\t<td>{{event.getName()}}</td>\\n\\t\\t\\t\\t\\t<td>{{event.getLocation()}}</td>\\n\\t\\t\\t\\t\\t<td>{{event.getRanking()}}</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 205\n// module chunks = 1","module.exports = \"<nav id=\\\"deletePanel\\\" [ngClass]=\\\"{ 'hide': !deleteFlightPanelIhm.ref }\\\" class=\\\"w3-margin w3-animate-left w3-padding globalColor\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Are you sure you wish to delete this Flight?</h2>\\n\\t<h3>{{ 'Flight: ' +flight.ref.getFlightNumber() }}</h3>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.deletePanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.deleteFlight()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Yes</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"deletePanel\\\" [ngClass]=\\\"{ 'hide': winnerPanelIhm.ref.deletePanelhide }\\\" class=\\\"w3-margin w3-animate-left w3-padding globalColor\\\" style=\\\"z-index:5\\\">\\n\\t<h2>Are you sure you wish to remove registered score?</h2>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.deleteWinnerPanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.removeWinnerScore()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Yes</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"winnerPanel\\\" [ngClass]=\\\"{ 'hide': winnerPanelIhm.ref.hide }\\\" class=\\\"w3-margin w3-animate-left w3-padding w3-cyan\\\" style=\\\"z-index:5\\\">\\n\\t<h3>Winner</h3>\\n\\t<div class=\\\"w3-row w3-xlarge\\\">\\n\\t\\t<div class=\\\"w3-half w3-container w3-blue\\\">Blue</div>\\n\\t\\t<div class=\\\"w3-half w3-container w3-yellow w3-right-align\\\">Yellow</div>\\n\\t</div>\\n\\t<input type=\\\"range\\\" class=\\\"w3-input\\\" min=\\\"0\\\" max=\\\"2\\\" step=\\\"1\\\" [(ngModel)]=\\\"winnerPanelIhm.ref.scoreBar\\\" />\\n\\t<div class=\\\"w3-round w3-yellow\\\" [ngClass]=\\\"{ 'w3-blue': (winnerPanelIhm.ref.scoreBar == 1)?true:false }\\\">\\n\\t\\t<div id=\\\"progressBar\\\" class=\\\"w3-container w3-blue w3-round w3-left-align\\\" style=\\\"width: 100%;\\\" *ngIf=\\\"(winnerPanelIhm.ref.scoreBar == 0)?true:false\\\">1</div>\\n\\t\\t<div id=\\\"progressBar\\\" class=\\\"w3-container w3-blue w3-round w3-right-align\\\" style=\\\"width: 50%;\\\" *ngIf=\\\"(winnerPanelIhm.ref.scoreBar == 1)?true:false\\\">1/2</div>\\n\\t\\t<div id=\\\"progressBar\\\" class=\\\"w3-container w3-yellow w3-round w3-right-align\\\" style=\\\"width: 100%;\\\" *ngIf=\\\"(winnerPanelIhm.ref.scoreBar == 2)?true:false\\\">1</div>\\n\\t</div>\\n\\t<label class=\\\"w3-label w3-text-light-gray w3-margin-top\\\">Race Finish Time: </label>\\n\\t<input class=\\\"w3-input\\\" step=\\\"1\\\" type=\\\"time\\\" [(ngModel)]=\\\"winnerPanelIhm.ref.time\\\"/>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.winnerPanelHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.saveWinnerScore()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Save</button>\\n\\t</div>\\n</nav>\\n\\n<nav id=\\\"winnerPanel\\\" [ngClass]=\\\"{ 'hide': !penaltyPanelIhm.ref }\\\" class=\\\"w3-margin w3-animate-left w3-padding w3-indigo\\\" style=\\\"z-index:5\\\">\\n\\t<h3>Penalty</h3>\\n\\t<label class=\\\"w3-label w3-text-light-gray\\\">Penalty points: </label>\\n\\t<input type=\\\"range\\\" class=\\\"w3-input\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.1\\\" [(ngModel)]=\\\"racer.ref.getPenalty().points\\\" />\\n\\t<div class=\\\"w3-round w3-ambre\\\">\\n\\t\\t<div id=\\\"progressBar\\\" class=\\\"w3-container w3-red w3-round w3-left-align\\\" [style.width]=\\\"racer.ref.getPenalty().getPoints()/1*100+'%'\\\">{{racer.ref.getPenalty().getPoints()}}</div>\\n\\t</div>\\n\\t<label class=\\\"w3-label w3-text-light-gray w3-margin\\\">Detail: </label>\\n\\t<textarea rows=\\\"4\\\" [(ngModel)]=\\\"racer.ref.getPenalty().detail\\\">\\n\\t</textarea>\\n\\t<div class=\\\"w3-bar w3-margin-bottom\\\">\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.penaltyPanelIhmHide()\\\" class=\\\"w3-button w3-red w3-margin-top\\\">Cancel</button>\\n\\t\\t<button (click)=\\\"ucelaboratepairinglist.createUpdateDeletePenalty()\\\" class=\\\"w3-button w3-green w3-margin-top w3-right\\\">Save</button>\\n\\t</div>\\n</nav>\\n\\n<div (click)=\\\"ucelaboratepairinglist.winnerPanelHide()\\\" [ngClass]=\\\"{ 'hide': winnerPanelIhm.ref.hide }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucelaboratepairinglist.penaltyPanelIhmHide()\\\" [ngClass]=\\\"{ 'hide': !penaltyPanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucelaboratepairinglist.deleteWinnerPanelHide()\\\" [ngClass]=\\\"{ 'hide': winnerPanelIhm.ref.deletePanelhide }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n<div (click)=\\\"ucelaboratepairinglist.deletePanelHide()\\\" [ngClass]=\\\"{ 'hide': !deleteFlightPanelIhm.ref }\\\" class=\\\"w3-overlay w3-animate-opacity\\\" style=\\\"cursor:pointer\\\"></div>\\n\\n<div class=\\\"w3-card-4 w3-margin w3-padding w3-container w3-animate-left \\\" >\\n\\t<div class=\\\"w3-padding-0 w3-margin-top w3-animate-left \\\" style=\\\"width: 100%; overflow: auto;\\\" *ngFor=\\\"let flightSelected of phase.ref.getFlightsList(); let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t<div *ngIf=\\\"resultSearchBar('Flight '+flightSelected.getFlightNumber())\\\">\\n\\t\\t\\t<div class=\\\"globalColor w3-container w3-padding-0\\\">\\n\\t\\t\\t\\t<button (click)=\\\"ucelaboratepairinglist.detailPanelShowHide(flightSelected)\\\" class=\\\"w3-threequarter w3-button globalColor w3-xlarge w3-left-align\\\" style=\\\"background-color: transparent;\\\">Flight {{flightSelected.getFlightNumber()}}</button>\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/phase', phase.ref.getId()]\\\" *ngIf=\\\"flightSelected.getFlightNumber() == flightService.getLastFlightNumber()\\\" fragment=\\\"deletePanel\\\" (click)=\\\"ucelaboratepairinglist.deletePanelShow(flightSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\"  title=\\\"delete Flight\\\" style=\\\"height: 32px;\\\" /></a>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"w3-border w3-border-grey w3-padding\\\" [ngClass]=\\\"{ 'hide': !flightSelected.getHiddenContent() }\\\">\\n\\t\\t\\t<div *ngIf=\\\"event.ref.getTimeManagement()\\\" class=\\\"globalColor w3-container w3-padding w3-row\\\">\\n\\t\\t\\t\\t<h3 class=\\\"w3-quarter w3-container\\\">Start Time: </h3>\\n\\t\\t\\t\\t<input *ngIf=\\\"(flightSelected.getStartDateTime() == '')?true:false;\\\" class=\\\"w3-quarter w3-input\\\" type=\\\"date\\\" [(ngModel)]=\\\"startDate.ref\\\" />\\n\\t\\t\\t\\t<input *ngIf=\\\"(flightSelected.getStartDateTime() == '')?true:false;\\\" class=\\\"w3-quarter w3-input\\\" type=\\\"time\\\" step=\\\"1\\\" [(ngModel)]=\\\"startTime.ref\\\" />\\n\\t\\t\\t\\t<h3 *ngIf=\\\"(flightSelected.getStartDateTime() == '')?false:true;\\\" class=\\\"w3-half w3-container\\\">{{flightSelected.getStartDateTime()}}</h3>\\n\\t\\t\\t\\t<button *ngIf=\\\"(flightSelected.getStartDateTime() == '')?false:true;\\\" (click)=\\\"ucelaboratepairinglist.deleteStartDateTime(flightSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/cross.png'\\\" style=\\\"height: 32px;\\\" /></button>\\n\\t\\t\\t\\t<button *ngIf=\\\"(flightSelected.getStartDateTime() == '')?true:false;\\\" (click)=\\\"ucelaboratepairinglist.createStartDateTime(flightSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\"><img [src]=\\\"'assets/pictures/start.png'\\\" style=\\\"height: 32px;\\\" /></button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<table class=\\\"w3-table-all w3-large\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t<th style=\\\"width: 5%;\\\">Match</th>\\n\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40%;\\\" class=\\\"w3-blue\\\">Blue</th>\\n\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40%;\\\" class=\\\"w3-yellow\\\">Yellow</th>\\n\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let matchSelected of flightSelected.getMatchsList(); let i = index\\\" [attr.data-index]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t<td>{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<table *ngIf=\\\"matchSelected.getLocked()\\\" class=\\\"w3-table-all w3-large\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"ucelaboratepairinglist.penaltyPanelIhmShow(matchSelected.getBlue())\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"matchSelected.getFinishDateTime() != ''\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t'w3-blue': (matchSelected.getBlue().getPoints()-matchSelected.getBlue().getPenalty().getPoints())\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t >= (matchSelected.getYellow().getPoints()-matchSelected.getYellow().getPenalty().getPoints()),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t 'stripe-3': (matchSelected.getBlue().getPenalty().getPoints() > 0)?true:false\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getName() + ' / ' + matchSelected.getBlue().getCountry() + ' / ' + matchSelected.getBlue().getIsaf() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getBoat().getBoatNumber() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getLetter() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-sand\\\" (click)=\\\"ucelaboratepairinglist.winnerPanelShow(matchSelected, 'blue')\\\" *ngIf=\\\"matchSelected.getFinishDateTime() == ''\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getName() + ' / ' + matchSelected.getBlue().getCountry() + ' / ' + matchSelected.getBlue().getIsaf() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getBoat().getBoatNumber() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getBlue().getLetter() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t<table *ngIf=\\\"!matchSelected.getLocked()\\\" class=\\\"w3-table-all w3-large\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-blue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"matchSelected.blueSubscriberId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let subscribeSelected of ucelaboratepairinglist.getSubscribersList(flightSelected, matchSelected.getBlueSubscriberId())' [ngValue]=\\\"subscribeSelected.getId()\\\">{{subscribeSelected.getName() + \\\" / \\\" + subscribeSelected.getCountry() + \\\" / \\\" +subscribeSelected.getLetter()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"matchSelected.blueBoatId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let boatSelected of ucelaboratepairinglist.getBoatsList(flightSelected, matchSelected.getBlueBoatId())' [ngValue]=\\\"boatSelected.getId()\\\">{{\\\"Boat: \\\" + boatSelected.getBoatNumber()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<table *ngIf=\\\"matchSelected.getLocked()\\\" class=\\\"w3-table-all w3-large matchYellow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr (click)=\\\"ucelaboratepairinglist.penaltyPanelIhmShow(matchSelected.getYellow())\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t *ngIf=\\\"matchSelected.getFinishDateTime() != ''\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t [ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t 'w3-yellow': (matchSelected.getBlue().getPoints()-matchSelected.getBlue().getPenalty().getPoints())\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <= (matchSelected.getYellow().getPoints()-matchSelected.getYellow().getPenalty().getPoints()),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t 'stripe-3': (matchSelected.getYellow().getPenalty().getPoints() > 0)?true:false\\n\\t\\t\\t\\t\\t\\t\\t\\t  }\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getName() + ' / ' + matchSelected.getYellow().getCountry() + ' / ' + matchSelected.getYellow().getIsaf() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getBoat().getBoatNumber() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getLetter() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-sand\\\" (click)=\\\"ucelaboratepairinglist.winnerPanelShow(matchSelected, 'yellow')\\\" *ngIf=\\\"matchSelected.getFinishDateTime() == ''\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getName() + ' / ' + matchSelected.getYellow().getCountry() + ' / ' + matchSelected.getYellow().getIsaf() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getBoat().getBoatNumber() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ matchSelected.getYellow().getLetter() }}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t<table *ngIf=\\\"!matchSelected.getLocked()\\\" class=\\\"w3-table-all w3-large matchYellow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-yellow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"matchSelected.yellowSubscriberId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let subscribeSelected of ucelaboratepairinglist.getSubscribersList(flightSelected, matchSelected.getYellowSubscriberId())' [ngValue]=\\\"subscribeSelected.getId()\\\">{{subscribeSelected.getName() + \\\" / \\\" + subscribeSelected.getCountry() + \\\" / \\\" +subscribeSelected.getLetter()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"matchSelected.yellowBoatId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"-1\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let boatSelected of ucelaboratepairinglist.getBoatsList(flightSelected, matchSelected.getYellowBoatId())' [ngValue]=\\\"boatSelected.getId()\\\">{{\\\"Boat: \\\" + boatSelected.getBoatNumber()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td *ngIf=\\\"matchSelected.getFinishDateTime() == ''\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button title=\\\"unlock Match\\\" *ngIf=\\\"matchSelected.getLocked()\\\" (click)=\\\"ucelaboratepairinglist.unlockMatch(matchSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + 'assets/pictures/padlock.png' + ')'}\\\"></button>\\n\\t\\t\\t\\t\\t\\t\\t<button title=\\\"lock Match\\\" *ngIf=\\\"!matchSelected.getLocked()\\\" (click)=\\\"ucelaboratepairinglist.updateMatch(matchSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + 'assets/pictures/padlockOpen.png' + ')'}\\\"></button>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td *ngIf=\\\"matchSelected.getFinishDateTime() != ''\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{matchSelected.getFinishDateTime()}}\\n\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/phase', phase.ref.getId()]\\\" fragment=\\\"deletePanel\\\" (click)=\\\"ucelaboratepairinglist.deleteWinnerPanelShow(matchSelected)\\\" class=\\\"w3-quarter w3-button globalColor w3-xlarge\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + 'assets/pictures/cross.png' + ')'}\\\"  title=\\\"delete Score\\\"></a>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr *ngIf=\\\"flightSelected.getMatchsList().length < 3\\\">\\n\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<table class=\\\"w3-table-all w3-large w3-blue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-blue\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"flightSelected.blueSubscriberId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let subscribeSelected of ucelaboratepairinglist.getSubscribersList(flightSelected, flightSelected.blueSubscriberId)' [ngValue]=\\\"subscribeSelected.getId()\\\">{{subscribeSelected.getName() + \\\" / \\\" + subscribeSelected.getCountry() + \\\" / \\\" +subscribeSelected.getLetter()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"flightSelected.blueBoatId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let boatSelected of ucelaboratepairinglist.getBoatsList(flightSelected, flightSelected.blueBoatId)' [ngValue]=\\\"boatSelected.getId()\\\">{{\\\"Boat: \\\" + boatSelected.getBoatNumber()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<table class=\\\"w3-table-all w3-large w3-blue matchYellow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"w3-yellow\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"flightSelected.yellowSubscriberId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let subscribeSelected of ucelaboratepairinglist.getSubscribersList(flightSelected, flightSelected.yellowSubscriberId)' [ngValue]=\\\"subscribeSelected.getId()\\\">{{subscribeSelected.getName() + \\\" / \\\" + subscribeSelected.getCountry() + \\\" / \\\" +subscribeSelected.getLetter()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"w3-select\\\" [(ngModel)]=\\\"flightSelected.yellowBoatId\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\"></option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor='let boatSelected of ucelaboratepairinglist.getBoatsList(flightSelected, flightSelected.yellowBoatId)' [ngValue]=\\\"boatSelected.getId()\\\">{{\\\"Boat: \\\" + boatSelected.getBoatNumber()}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"flightService.getLastFlightNumber() == ucelaboratepairinglist.getMaxFligthInArray() || ucelaboratepairinglist.getMaxFligthInArray() == 0\\\" class=\\\"w3-right-align w3-padding-left w3-padding-right w3-margin\\\">\\n\\t<a (click)=\\\"ucelaboratepairinglist.createFlight()\\\" title=\\\"add Flight\\\" class=\\\"w3-btn-floating-large hook_bottom_left globalColor w3-margin-top\\\">+</a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/phase/phase.component.html\n// module id = 206\n// module chunks = 1","module.exports = \"<div class=\\\"w3-container\\\">\\n\\t<div class=\\\"w3-bar w3-light-grey w3-half\\\">\\n    <div class=\\\"w3-dropdown-click w3-xxlarge\\\">\\n      <button class=\\\"w3-button\\\">Results <i class=\\\"fa fa-caret-down\\\"></i></button>\\n      <div id=\\\"choixVue\\\" class=\\\"w3-dropdown-content w3-bar-block w3-card-2\\\">\\n        <a href=\\\"RR1.html\\\" class=\\\"w3-bar-item w3-button\\\">Round Robin 1</a>\\n        <a href=\\\"RR2.html\\\" class=\\\"w3-bar-item w3-button\\\">Round Robin 2</a>\\n        <a href=\\\"RR1.html\\\" class=\\\"w3-bar-item w3-button\\\">Demi-Finale</a>\\n        <a href=\\\"Finale.html\\\" class=\\\"w3-bar-item w3-button\\\">Finale</a>\\n        <a href=\\\"boatStats.html\\\" class=\\\"w3-bar-item w3-button\\\">BoatStats</a>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"w3-bar w3-half \\\">\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n\\t\\t\\t<a [routerLink]=\\\"['/results-subscriber', phase.ref.getId()]\\\" class=\\\"w3-button w3-blue w3-xlarge\\\" title=\\\"Result Boat\\\"><img [src]=\\\"'assets/pictures/eye.png'\\\" style=\\\"height: 30px;\\\" /></a>\\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n  \\t\\t<a href=\\\"google.fr\\\"><img src=\\\"smiley.gif\\\"></a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n  \\t\\t<a href=\\\"google.fr\\\"><img src=\\\"smiley.gif\\\"></a>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<div id=\\\"ResultBoat\\\" class=\\\"w3-container\\\">\\n  <table  class=\\\"w3-table-all\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"w3-blue\\\">NB Boat</th>\\n        <th *ngFor=\\\"let resultBoat of resultBoatList.ref\\\">{{ resultBoat.getIdBoat() }}</th>\\n      </tr>\\n    </thead>\\n    <tr>\\n\\t\\t\\t<td>POINTS</td>\\n\\t\\t\\t<td *ngFor=\\\"let resultBoat of resultBoatList.ref\\\">{{ resultBoat.getWinTotBoat() }}</td>\\n    </tr>\\n    <tr>\\n\\t\\t\\t<td>%</td>\\n\\t\\t\\t<td *ngFor=\\\"let resultBoat of resultBoatList.ref\\\">{{ resultBoat.getWinPercentBoat() }}</td>\\n    </tr>\\n  </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/results-boat/results-boat.component.html\n// module id = 207\n// module chunks = 1","module.exports = \"<div class=\\\"w3-container\\\">\\n\\t<p>hellowuhouhuhuhyuhyuhworld</p>\\n\\t<div class=\\\"w3-bar w3-light-grey w3-half\\\">\\n    <div class=\\\"w3-dropdown-click w3-xxlarge\\\">\\n      <button class=\\\"w3-button\\\">Results <i class=\\\"fa fa-caret-down\\\"></i></button>\\n      <div id=\\\"choixVue\\\" class=\\\"w3-dropdown-content w3-bar-block w3-card-2\\\">\\n        <a href=\\\"RR1.html\\\" class=\\\"w3-bar-item w3-button\\\">Round Robin 1</a>\\n        <a href=\\\"RR2.html\\\" class=\\\"w3-bar-item w3-button\\\">Round Robin 2</a>\\n        <a href=\\\"RR1.html\\\" class=\\\"w3-bar-item w3-button\\\">Demi-Finale</a>\\n        <a href=\\\"Finale.html\\\" class=\\\"w3-bar-item w3-button\\\">Finale</a>\\n        <a href=\\\"boatStats.html\\\" class=\\\"w3-bar-item w3-button\\\">BoatStats</a>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"w3-bar w3-half \\\">\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n\\t  \\t\\t<a [routerLink]=\\\"['/results-boat', phase.ref.getId()]\\\" class=\\\"w3-button globalColor w3-xlarge\\\" title=\\\"Result Boat\\\"><img [src]=\\\"'assets/pictures/eye.png'\\\" style=\\\"height: 30px;\\\" /></a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n  \\t\\t<a href=\\\"google.fr\\\"><img src=\\\"smiley.gif\\\"></a>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"w3-bar w3-third\\\">\\n  \\t\\t<a href=\\\"google.fr\\\"><img src=\\\"smiley.gif\\\"></a>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<!--\\n<div id=\\\"ResultRoundRobin\\\" class=\\\"w3-container\\\">\\n\\t<table  class=\\\"w3-table-all\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"w3-blue\\\">NB CREW</th>\\n        <th *ngFor=\\\"let resultSubscriber of resultSubscriberList.ref\\\">{{ resultSubscriber.getIdSub() }}</th>\\n      </tr>\\n    </thead>\\n    <tr>\\n\\t\\t\\t<td>POINTS</td>\\n\\t\\t\\t<td *ngFor=\\\"let resultSubscriber of resultSubscriberList.ref\\\">{{ resultSubscriber.getWinTotSub() }}</td>\\n    </tr>\\n    <tr>\\n\\t\\t\\t<td>%</td>\\n\\t\\t\\t<td *ngFor=\\\"let resultSubscriber of resultSubscriberList.ref\\\">{{ resultSubscriber.getWinPercentSub() }}</td>\\n    </tr>\\n  </table>\\n</div>-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/results-subscriber/results-subscriber.component.html\n// module id = 208\n// module chunks = 1","module.exports = \"<div class=\\\"w3-card-4 w3-padding w3-margin\\\">\\n\\t\\t<h2>Company Information</h2>\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Organization</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settings.ref.organization\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Phone</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"tel\\\" [(ngModel)]=\\\"settings.ref.phone\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">E-mail</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"email\\\" [(ngModel)]=\\\"settings.ref.email\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Address</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settings.ref.address\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Address supplement</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settings.ref.addressSupplement\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Country</label>\\n\\t\\t<select class=\\\"w3-input\\\" [(ngModel)]=\\\"settings.ref.country\\\">\\n\\t\\t\\t<option value=\\\"AF\\\">Afghanistan</option>\\n\\t\\t\\t<option value=\\\"AX\\\">Åland Islands</option>\\n\\t\\t\\t<option value=\\\"AL\\\">Albania</option>\\n\\t\\t\\t<option value=\\\"DZ\\\">Algeria</option>\\n\\t\\t\\t<option value=\\\"AS\\\">American Samoa</option>\\n\\t\\t\\t<option value=\\\"AD\\\">Andorra</option>\\n\\t\\t\\t<option value=\\\"AO\\\">Angola</option>\\n\\t\\t\\t<option value=\\\"AI\\\">Anguilla</option>\\n\\t\\t\\t<option value=\\\"AQ\\\">Antarctica</option>\\n\\t\\t\\t<option value=\\\"AG\\\">Antigua and Barbuda</option>\\n\\t\\t\\t<option value=\\\"AR\\\">Argentina</option>\\n\\t\\t\\t<option value=\\\"AM\\\">Armenia</option>\\n\\t\\t\\t<option value=\\\"AW\\\">Aruba</option>\\n\\t\\t\\t<option value=\\\"AU\\\">Australia</option>\\n\\t\\t\\t<option value=\\\"AT\\\">Austria</option>\\n\\t\\t\\t<option value=\\\"AZ\\\">Azerbaijan</option>\\n\\t\\t\\t<option value=\\\"BS\\\">Bahamas</option>\\n\\t\\t\\t<option value=\\\"BH\\\">Bahrain</option>\\n\\t\\t\\t<option value=\\\"BD\\\">Bangladesh</option>\\n\\t\\t\\t<option value=\\\"BB\\\">Barbados</option>\\n\\t\\t\\t<option value=\\\"BY\\\">Belarus</option>\\n\\t\\t\\t<option value=\\\"BE\\\">Belgium</option>\\n\\t\\t\\t<option value=\\\"BZ\\\">Belize</option>\\n\\t\\t\\t<option value=\\\"BJ\\\">Benin</option>\\n\\t\\t\\t<option value=\\\"BM\\\">Bermuda</option>\\n\\t\\t\\t<option value=\\\"BT\\\">Bhutan</option>\\n\\t\\t\\t<option value=\\\"BO\\\">Bolivia, Plurinational State of</option>\\n\\t\\t\\t<option value=\\\"BQ\\\">Bonaire, Sint Eustatius and Saba</option>\\n\\t\\t\\t<option value=\\\"BA\\\">Bosnia and Herzegovina</option>\\n\\t\\t\\t<option value=\\\"BW\\\">Botswana</option>\\n\\t\\t\\t<option value=\\\"BV\\\">Bouvet Island</option>\\n\\t\\t\\t<option value=\\\"BR\\\">Brazil</option>\\n\\t\\t\\t<option value=\\\"IO\\\">British Indian Ocean Territory</option>\\n\\t\\t\\t<option value=\\\"BN\\\">Brunei Darussalam</option>\\n\\t\\t\\t<option value=\\\"BG\\\">Bulgaria</option>\\n\\t\\t\\t<option value=\\\"BF\\\">Burkina Faso</option>\\n\\t\\t\\t<option value=\\\"BI\\\">Burundi</option>\\n\\t\\t\\t<option value=\\\"KH\\\">Cambodia</option>\\n\\t\\t\\t<option value=\\\"CM\\\">Cameroon</option>\\n\\t\\t\\t<option value=\\\"CA\\\">Canada</option>\\n\\t\\t\\t<option value=\\\"CV\\\">Cape Verde</option>\\n\\t\\t\\t<option value=\\\"KY\\\">Cayman Islands</option>\\n\\t\\t\\t<option value=\\\"CF\\\">Central African Republic</option>\\n\\t\\t\\t<option value=\\\"TD\\\">Chad</option>\\n\\t\\t\\t<option value=\\\"CL\\\">Chile</option>\\n\\t\\t\\t<option value=\\\"CN\\\">China</option>\\n\\t\\t\\t<option value=\\\"CX\\\">Christmas Island</option>\\n\\t\\t\\t<option value=\\\"CC\\\">Cocos (Keeling) Islands</option>\\n\\t\\t\\t<option value=\\\"CO\\\">Colombia</option>\\n\\t\\t\\t<option value=\\\"KM\\\">Comoros</option>\\n\\t\\t\\t<option value=\\\"CG\\\">Congo</option>\\n\\t\\t\\t<option value=\\\"CD\\\">Congo, the Democratic Republic of the</option>\\n\\t\\t\\t<option value=\\\"CK\\\">Cook Islands</option>\\n\\t\\t\\t<option value=\\\"CR\\\">Costa Rica</option>\\n\\t\\t\\t<option value=\\\"CI\\\">Côte d'Ivoire</option>\\n\\t\\t\\t<option value=\\\"HR\\\">Croatia</option>\\n\\t\\t\\t<option value=\\\"CU\\\">Cuba</option>\\n\\t\\t\\t<option value=\\\"CW\\\">Curaçao</option>\\n\\t\\t\\t<option value=\\\"CY\\\">Cyprus</option>\\n\\t\\t\\t<option value=\\\"CZ\\\">Czech Republic</option>\\n\\t\\t\\t<option value=\\\"DK\\\">Denmark</option>\\n\\t\\t\\t<option value=\\\"DJ\\\">Djibouti</option>\\n\\t\\t\\t<option value=\\\"DM\\\">Dominica</option>\\n\\t\\t\\t<option value=\\\"DO\\\">Dominican Republic</option>\\n\\t\\t\\t<option value=\\\"EC\\\">Ecuador</option>\\n\\t\\t\\t<option value=\\\"EG\\\">Egypt</option>\\n\\t\\t\\t<option value=\\\"SV\\\">El Salvador</option>\\n\\t\\t\\t<option value=\\\"GQ\\\">Equatorial Guinea</option>\\n\\t\\t\\t<option value=\\\"ER\\\">Eritrea</option>\\n\\t\\t\\t<option value=\\\"EE\\\">Estonia</option>\\n\\t\\t\\t<option value=\\\"ET\\\">Ethiopia</option>\\n\\t\\t\\t<option value=\\\"FK\\\">Falkland Islands (Malvinas)</option>\\n\\t\\t\\t<option value=\\\"FO\\\">Faroe Islands</option>\\n\\t\\t\\t<option value=\\\"FJ\\\">Fiji</option>\\n\\t\\t\\t<option value=\\\"FI\\\">Finland</option>\\n\\t\\t\\t<option value=\\\"FR\\\">France</option>\\n\\t\\t\\t<option value=\\\"GF\\\">French Guiana</option>\\n\\t\\t\\t<option value=\\\"PF\\\">French Polynesia</option>\\n\\t\\t\\t<option value=\\\"TF\\\">French Southern Territories</option>\\n\\t\\t\\t<option value=\\\"GA\\\">Gabon</option>\\n\\t\\t\\t<option value=\\\"GM\\\">Gambia</option>\\n\\t\\t\\t<option value=\\\"GE\\\">Georgia</option>\\n\\t\\t\\t<option value=\\\"DE\\\">Germany</option>\\n\\t\\t\\t<option value=\\\"GH\\\">Ghana</option>\\n\\t\\t\\t<option value=\\\"GI\\\">Gibraltar</option>\\n\\t\\t\\t<option value=\\\"GR\\\">Greece</option>\\n\\t\\t\\t<option value=\\\"GL\\\">Greenland</option>\\n\\t\\t\\t<option value=\\\"GD\\\">Grenada</option>\\n\\t\\t\\t<option value=\\\"GP\\\">Guadeloupe</option>\\n\\t\\t\\t<option value=\\\"GU\\\">Guam</option>\\n\\t\\t\\t<option value=\\\"GT\\\">Guatemala</option>\\n\\t\\t\\t<option value=\\\"GG\\\">Guernsey</option>\\n\\t\\t\\t<option value=\\\"GN\\\">Guinea</option>\\n\\t\\t\\t<option value=\\\"GW\\\">Guinea-Bissau</option>\\n\\t\\t\\t<option value=\\\"GY\\\">Guyana</option>\\n\\t\\t\\t<option value=\\\"HT\\\">Haiti</option>\\n\\t\\t\\t<option value=\\\"HM\\\">Heard Island and McDonald Islands</option>\\n\\t\\t\\t<option value=\\\"VA\\\">Holy See (Vatican City State)</option>\\n\\t\\t\\t<option value=\\\"HN\\\">Honduras</option>\\n\\t\\t\\t<option value=\\\"HK\\\">Hong Kong</option>\\n\\t\\t\\t<option value=\\\"HU\\\">Hungary</option>\\n\\t\\t\\t<option value=\\\"IS\\\">Iceland</option>\\n\\t\\t\\t<option value=\\\"IN\\\">India</option>\\n\\t\\t\\t<option value=\\\"ID\\\">Indonesia</option>\\n\\t\\t\\t<option value=\\\"IR\\\">Iran, Islamic Republic of</option>\\n\\t\\t\\t<option value=\\\"IQ\\\">Iraq</option>\\n\\t\\t\\t<option value=\\\"IE\\\">Ireland</option>\\n\\t\\t\\t<option value=\\\"IM\\\">Isle of Man</option>\\n\\t\\t\\t<option value=\\\"IL\\\">Israel</option>\\n\\t\\t\\t<option value=\\\"IT\\\">Italy</option>\\n\\t\\t\\t<option value=\\\"JM\\\">Jamaica</option>\\n\\t\\t\\t<option value=\\\"JP\\\">Japan</option>\\n\\t\\t\\t<option value=\\\"JE\\\">Jersey</option>\\n\\t\\t\\t<option value=\\\"JO\\\">Jordan</option>\\n\\t\\t\\t<option value=\\\"KZ\\\">Kazakhstan</option>\\n\\t\\t\\t<option value=\\\"KE\\\">Kenya</option>\\n\\t\\t\\t<option value=\\\"KI\\\">Kiribati</option>\\n\\t\\t\\t<option value=\\\"KP\\\">Korea, Democratic People's Republic of</option>\\n\\t\\t\\t<option value=\\\"KR\\\">Korea, Republic of</option>\\n\\t\\t\\t<option value=\\\"KW\\\">Kuwait</option>\\n\\t\\t\\t<option value=\\\"KG\\\">Kyrgyzstan</option>\\n\\t\\t\\t<option value=\\\"LA\\\">Lao People's Democratic Republic</option>\\n\\t\\t\\t<option value=\\\"LV\\\">Latvia</option>\\n\\t\\t\\t<option value=\\\"LB\\\">Lebanon</option>\\n\\t\\t\\t<option value=\\\"LS\\\">Lesotho</option>\\n\\t\\t\\t<option value=\\\"LR\\\">Liberia</option>\\n\\t\\t\\t<option value=\\\"LY\\\">Libya</option>\\n\\t\\t\\t<option value=\\\"LI\\\">Liechtenstein</option>\\n\\t\\t\\t<option value=\\\"LT\\\">Lithuania</option>\\n\\t\\t\\t<option value=\\\"LU\\\">Luxembourg</option>\\n\\t\\t\\t<option value=\\\"MO\\\">Macao</option>\\n\\t\\t\\t<option value=\\\"MK\\\">Macedonia, the former Yugoslav Republic of</option>\\n\\t\\t\\t<option value=\\\"MG\\\">Madagascar</option>\\n\\t\\t\\t<option value=\\\"MW\\\">Malawi</option>\\n\\t\\t\\t<option value=\\\"MY\\\">Malaysia</option>\\n\\t\\t\\t<option value=\\\"MV\\\">Maldives</option>\\n\\t\\t\\t<option value=\\\"ML\\\">Mali</option>\\n\\t\\t\\t<option value=\\\"MT\\\">Malta</option>\\n\\t\\t\\t<option value=\\\"MH\\\">Marshall Islands</option>\\n\\t\\t\\t<option value=\\\"MQ\\\">Martinique</option>\\n\\t\\t\\t<option value=\\\"MR\\\">Mauritania</option>\\n\\t\\t\\t<option value=\\\"MU\\\">Mauritius</option>\\n\\t\\t\\t<option value=\\\"YT\\\">Mayotte</option>\\n\\t\\t\\t<option value=\\\"MX\\\">Mexico</option>\\n\\t\\t\\t<option value=\\\"FM\\\">Micronesia, Federated States of</option>\\n\\t\\t\\t<option value=\\\"MD\\\">Moldova, Republic of</option>\\n\\t\\t\\t<option value=\\\"MC\\\">Monaco</option>\\n\\t\\t\\t<option value=\\\"MN\\\">Mongolia</option>\\n\\t\\t\\t<option value=\\\"ME\\\">Montenegro</option>\\n\\t\\t\\t<option value=\\\"MS\\\">Montserrat</option>\\n\\t\\t\\t<option value=\\\"MA\\\">Morocco</option>\\n\\t\\t\\t<option value=\\\"MZ\\\">Mozambique</option>\\n\\t\\t\\t<option value=\\\"MM\\\">Myanmar</option>\\n\\t\\t\\t<option value=\\\"NA\\\">Namibia</option>\\n\\t\\t\\t<option value=\\\"NR\\\">Nauru</option>\\n\\t\\t\\t<option value=\\\"NP\\\">Nepal</option>\\n\\t\\t\\t<option value=\\\"NL\\\">Netherlands</option>\\n\\t\\t\\t<option value=\\\"NC\\\">New Caledonia</option>\\n\\t\\t\\t<option value=\\\"NZ\\\">New Zealand</option>\\n\\t\\t\\t<option value=\\\"NI\\\">Nicaragua</option>\\n\\t\\t\\t<option value=\\\"NE\\\">Niger</option>\\n\\t\\t\\t<option value=\\\"NG\\\">Nigeria</option>\\n\\t\\t\\t<option value=\\\"NU\\\">Niue</option>\\n\\t\\t\\t<option value=\\\"NF\\\">Norfolk Island</option>\\n\\t\\t\\t<option value=\\\"MP\\\">Northern Mariana Islands</option>\\n\\t\\t\\t<option value=\\\"NO\\\">Norway</option>\\n\\t\\t\\t<option value=\\\"OM\\\">Oman</option>\\n\\t\\t\\t<option value=\\\"PK\\\">Pakistan</option>\\n\\t\\t\\t<option value=\\\"PW\\\">Palau</option>\\n\\t\\t\\t<option value=\\\"PS\\\">Palestinian Territory, Occupied</option>\\n\\t\\t\\t<option value=\\\"PA\\\">Panama</option>\\n\\t\\t\\t<option value=\\\"PG\\\">Papua New Guinea</option>\\n\\t\\t\\t<option value=\\\"PY\\\">Paraguay</option>\\n\\t\\t\\t<option value=\\\"PE\\\">Peru</option>\\n\\t\\t\\t<option value=\\\"PH\\\">Philippines</option>\\n\\t\\t\\t<option value=\\\"PN\\\">Pitcairn</option>\\n\\t\\t\\t<option value=\\\"PL\\\">Poland</option>\\n\\t\\t\\t<option value=\\\"PT\\\">Portugal</option>\\n\\t\\t\\t<option value=\\\"PR\\\">Puerto Rico</option>\\n\\t\\t\\t<option value=\\\"QA\\\">Qatar</option>\\n\\t\\t\\t<option value=\\\"RE\\\">Réunion</option>\\n\\t\\t\\t<option value=\\\"RO\\\">Romania</option>\\n\\t\\t\\t<option value=\\\"RU\\\">Russian Federation</option>\\n\\t\\t\\t<option value=\\\"RW\\\">Rwanda</option>\\n\\t\\t\\t<option value=\\\"BL\\\">Saint Barthélemy</option>\\n\\t\\t\\t<option value=\\\"SH\\\">Saint Helena, Ascension and Tristan da Cunha</option>\\n\\t\\t\\t<option value=\\\"KN\\\">Saint Kitts and Nevis</option>\\n\\t\\t\\t<option value=\\\"LC\\\">Saint Lucia</option>\\n\\t\\t\\t<option value=\\\"MF\\\">Saint Martin (French part)</option>\\n\\t\\t\\t<option value=\\\"PM\\\">Saint Pierre and Miquelon</option>\\n\\t\\t\\t<option value=\\\"VC\\\">Saint Vincent and the Grenadines</option>\\n\\t\\t\\t<option value=\\\"WS\\\">Samoa</option>\\n\\t\\t\\t<option value=\\\"SM\\\">San Marino</option>\\n\\t\\t\\t<option value=\\\"ST\\\">Sao Tome and Principe</option>\\n\\t\\t\\t<option value=\\\"SA\\\">Saudi Arabia</option>\\n\\t\\t\\t<option value=\\\"SN\\\">Senegal</option>\\n\\t\\t\\t<option value=\\\"RS\\\">Serbia</option>\\n\\t\\t\\t<option value=\\\"SC\\\">Seychelles</option>\\n\\t\\t\\t<option value=\\\"SL\\\">Sierra Leone</option>\\n\\t\\t\\t<option value=\\\"SG\\\">Singapore</option>\\n\\t\\t\\t<option value=\\\"SX\\\">Sint Maarten (Dutch part)</option>\\n\\t\\t\\t<option value=\\\"SK\\\">Slovakia</option>\\n\\t\\t\\t<option value=\\\"SI\\\">Slovenia</option>\\n\\t\\t\\t<option value=\\\"SB\\\">Solomon Islands</option>\\n\\t\\t\\t<option value=\\\"SO\\\">Somalia</option>\\n\\t\\t\\t<option value=\\\"ZA\\\">South Africa</option>\\n\\t\\t\\t<option value=\\\"GS\\\">South Georgia and the South Sandwich Islands</option>\\n\\t\\t\\t<option value=\\\"SS\\\">South Sudan</option>\\n\\t\\t\\t<option value=\\\"ES\\\">Spain</option>\\n\\t\\t\\t<option value=\\\"LK\\\">Sri Lanka</option>\\n\\t\\t\\t<option value=\\\"SD\\\">Sudan</option>\\n\\t\\t\\t<option value=\\\"SR\\\">Suriname</option>\\n\\t\\t\\t<option value=\\\"SJ\\\">Svalbard and Jan Mayen</option>\\n\\t\\t\\t<option value=\\\"SZ\\\">Swaziland</option>\\n\\t\\t\\t<option value=\\\"SE\\\">Sweden</option>\\n\\t\\t\\t<option value=\\\"CH\\\">Switzerland</option>\\n\\t\\t\\t<option value=\\\"SY\\\">Syrian Arab Republic</option>\\n\\t\\t\\t<option value=\\\"TW\\\">Taiwan, Province of China</option>\\n\\t\\t\\t<option value=\\\"TJ\\\">Tajikistan</option>\\n\\t\\t\\t<option value=\\\"TZ\\\">Tanzania, United Republic of</option>\\n\\t\\t\\t<option value=\\\"TH\\\">Thailand</option>\\n\\t\\t\\t<option value=\\\"TL\\\">Timor-Leste</option>\\n\\t\\t\\t<option value=\\\"TG\\\">Togo</option>\\n\\t\\t\\t<option value=\\\"TK\\\">Tokelau</option>\\n\\t\\t\\t<option value=\\\"TO\\\">Tonga</option>\\n\\t\\t\\t<option value=\\\"TT\\\">Trinidad and Tobago</option>\\n\\t\\t\\t<option value=\\\"TN\\\">Tunisia</option>\\n\\t\\t\\t<option value=\\\"TR\\\">Turkey</option>\\n\\t\\t\\t<option value=\\\"TM\\\">Turkmenistan</option>\\n\\t\\t\\t<option value=\\\"TC\\\">Turks and Caicos Islands</option>\\n\\t\\t\\t<option value=\\\"TV\\\">Tuvalu</option>\\n\\t\\t\\t<option value=\\\"UG\\\">Uganda</option>\\n\\t\\t\\t<option value=\\\"UA\\\">Ukraine</option>\\n\\t\\t\\t<option value=\\\"AE\\\">United Arab Emirates</option>\\n\\t\\t\\t<option value=\\\"GB\\\">United Kingdom</option>\\n\\t\\t\\t<option value=\\\"US\\\">United States</option>\\n\\t\\t\\t<option value=\\\"UM\\\">United States Minor Outlying Islands</option>\\n\\t\\t\\t<option value=\\\"UY\\\">Uruguay</option>\\n\\t\\t\\t<option value=\\\"UZ\\\">Uzbekistan</option>\\n\\t\\t\\t<option value=\\\"VU\\\">Vanuatu</option>\\n\\t\\t\\t<option value=\\\"VE\\\">Venezuela, Bolivarian Republic of</option>\\n\\t\\t\\t<option value=\\\"VN\\\">Viet Nam</option>\\n\\t\\t\\t<option value=\\\"VG\\\">Virgin Islands, British</option>\\n\\t\\t\\t<option value=\\\"VI\\\">Virgin Islands, U.S.</option>\\n\\t\\t\\t<option value=\\\"WF\\\">Wallis and Futuna</option>\\n\\t\\t\\t<option value=\\\"EH\\\">Western Sahara</option>\\n\\t\\t\\t<option value=\\\"YE\\\">Yemen</option>\\n\\t\\t\\t<option value=\\\"ZM\\\">Zambia</option>\\n\\t\\t\\t<option value=\\\"ZW\\\">Zimbabwe</option>\\n\\t\\t</select>\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Postal Code</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settings.ref.postalCode\\\" />\\n\\t\\t<h2>Default Event</h2>\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Location</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"settings.ref.location\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Number of boats</label>\\n\\t\\t<input class=\\\"w3-input\\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"settings.ref.amountBoats\\\" />\\n\\t\\t<input class=\\\"w3-check w3-margin-top\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"settings.ref.timeManagement\\\" />\\n\\t\\t<label class=\\\"w3-label w3-text-black\\\">Time Management</label>\\n\\t\\t<div class=\\\"w3-row w3-margin-bottom  w3-margin-top\\\">\\n\\t\\t\\t<button class=\\\"w3-bar-item w3-margin-top w3-button w3-red w3-half\\\" (click)=\\\"cancelSettings()\\\" >Cancel</button>\\n\\t\\t\\t<button class=\\\"w3-bar-item w3-margin-top w3-button w3-green w3-half\\\" (click)=\\\"saveSettings()\\\" >Save</button>\\n\\t\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/settings/settings.component.html\n// module id = 209\n// module chunks = 1"],"sourceRoot":""}